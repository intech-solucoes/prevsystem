#region Usings
using Dapper;
using Intech.Lib.Dapper;
using Intech.Lib.Web;
using Intech.PrevSystem.Entidades;
using Microsoft.Extensions.Configuration;
using System;
using System.Collections.Generic;
#endregion

namespace Intech.PrevSystem.Dados.DAO
{
    public abstract class FichaFinanceiraDAO : BaseDAO<FichaFinanceiraEntidade>
    {
		public virtual IEnumerable<FichaFinanceiraEntidade> BuscarPorFundacaoPlanoInscricao(string CD_FUNDACAO, string CD_PLANO, string NUM_INSCRICAO)
		{
			if(AppSettings.IS_SQL_SERVER_PROVIDER)
				return Conexao.Query<FichaFinanceiraEntidade>("SELECT TC.DS_TIPO_CONTRIBUICAO,        FI.*  FROM CC_FICHA_FINANCEIRA FI     INNER JOIN TB_TIPO_CONTRIBUICAO TC ON TC.CD_TIPO_CONTRIBUICAO = FI.CD_TIPO_CONTRIBUICAO WHERE FI.CD_FUNDACAO = @CD_FUNDACAO   AND FI.CD_PLANO = @CD_PLANO   AND FI.NUM_INSCRICAO = @NUM_INSCRICAO ORDER BY FI.ANO_REF DESC,           FI.MES_REF DESC,          FI.CD_TIPO_CONTRIBUICAO", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO });
			else if(AppSettings.IS_ORACLE_PROVIDER)
				return Conexao.Query<FichaFinanceiraEntidade>("SELECT TC.DS_TIPO_CONTRIBUICAO, FI.* FROM CC_FICHA_FINANCEIRA  FI  INNER  JOIN TB_TIPO_CONTRIBUICAO   TC  ON TC.CD_TIPO_CONTRIBUICAO=FI.CD_TIPO_CONTRIBUICAO WHERE FI.CD_FUNDACAO=:CD_FUNDACAO AND FI.CD_PLANO=:CD_PLANO AND FI.NUM_INSCRICAO=:NUM_INSCRICAO ORDER BY FI.ANO_REF DESC, FI.MES_REF DESC, FI.CD_TIPO_CONTRIBUICAO", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO });
			else
				throw new Exception("Provider n達o suportado!");
		}
		public virtual IEnumerable<FichaFinanceiraEntidade> BuscarResumoAnosPorFundacaoPlanoInscricao(string CD_FUNDACAO, string CD_PLANO, string NUM_INSCRICAO)
		{
			if(AppSettings.IS_SQL_SERVER_PROVIDER)
				return Conexao.Query<FichaFinanceiraEntidade>("SELECT DISTINCT         ANO_REF,        SUM(CONTRIB_PARTICIPANTE) AS CONTRIB_PARTICIPANTE,        SUM(CONTRIB_EMPRESA) AS CONTRIB_EMPRESA,        0 + SUM(CONTRIB_PARTICIPANTE) + SUM(CONTRIB_EMPRESA) AS TOTAL_CONTRIB,        0 + SUM(QTD_COTA_RP_PARTICIPANTE) + SUM(QTD_COTA_RP_EMPRESA) AS QTD_COTA  FROM CC_FICHA_FINANCEIRA FI WHERE FI.CD_FUNDACAO = @CD_FUNDACAO   AND FI.CD_PLANO = @CD_PLANO   AND FI.NUM_INSCRICAO = @NUM_INSCRICAO GROUP BY ANO_REF ORDER BY FI.ANO_REF DESC", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO });
			else if(AppSettings.IS_ORACLE_PROVIDER)
				return Conexao.Query<FichaFinanceiraEntidade>("SELECT DISTINCT ANO_REF, SUM(CONTRIB_PARTICIPANTE) AS CONTRIB_PARTICIPANTE, SUM(CONTRIB_EMPRESA) AS CONTRIB_EMPRESA, 0 + SUM(CONTRIB_PARTICIPANTE) + SUM(CONTRIB_EMPRESA) AS TOTAL_CONTRIB, 0 + SUM(QTD_COTA_RP_PARTICIPANTE) + SUM(QTD_COTA_RP_EMPRESA) AS QTD_COTA FROM CC_FICHA_FINANCEIRA  FI  WHERE FI.CD_FUNDACAO=:CD_FUNDACAO AND FI.CD_PLANO=:CD_PLANO AND FI.NUM_INSCRICAO=:NUM_INSCRICAO GROUP BY ANO_REF ORDER BY FI.ANO_REF DESC", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO });
			else
				throw new Exception("Provider n達o suportado!");
		}
		public virtual IEnumerable<FichaFinanceiraEntidade> BuscarResumoMesesPorFundacaoPlanoInscricaoAno(string CD_FUNDACAO, string CD_PLANO, string NUM_INSCRICAO, string ANO_REF)
		{
			if(AppSettings.IS_SQL_SERVER_PROVIDER)
				return Conexao.Query<FichaFinanceiraEntidade>("SELECT DISTINCT         MES_REF,        SUM(CONTRIB_PARTICIPANTE) AS CONTRIB_PARTICIPANTE,        SUM(CONTRIB_EMPRESA) AS CONTRIB_EMPRESA,        0 + SUM(CONTRIB_PARTICIPANTE) + SUM(CONTRIB_EMPRESA) AS TOTAL_CONTRIB,        0 + SUM(QTD_COTA_RP_PARTICIPANTE) + SUM(QTD_COTA_RP_EMPRESA) AS QTD_COTA  FROM CC_FICHA_FINANCEIRA FI WHERE FI.CD_FUNDACAO = @CD_FUNDACAO   AND FI.CD_PLANO = @CD_PLANO   AND FI.NUM_INSCRICAO = @NUM_INSCRICAO   AND FI.ANO_REF = @ANO_REF GROUP BY MES_REF ORDER BY FI.MES_REF", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO, ANO_REF });
			else if(AppSettings.IS_ORACLE_PROVIDER)
				return Conexao.Query<FichaFinanceiraEntidade>("SELECT DISTINCT MES_REF, SUM(CONTRIB_PARTICIPANTE) AS CONTRIB_PARTICIPANTE, SUM(CONTRIB_EMPRESA) AS CONTRIB_EMPRESA, 0 + SUM(CONTRIB_PARTICIPANTE) + SUM(CONTRIB_EMPRESA) AS TOTAL_CONTRIB, 0 + SUM(QTD_COTA_RP_PARTICIPANTE) + SUM(QTD_COTA_RP_EMPRESA) AS QTD_COTA FROM CC_FICHA_FINANCEIRA  FI  WHERE FI.CD_FUNDACAO=:CD_FUNDACAO AND FI.CD_PLANO=:CD_PLANO AND FI.NUM_INSCRICAO=:NUM_INSCRICAO AND FI.ANO_REF=:ANO_REF GROUP BY MES_REF ORDER BY FI.MES_REF", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO, ANO_REF });
			else
				throw new Exception("Provider n達o suportado!");
		}
		public virtual IEnumerable<FichaFinanceiraEntidade> BuscarTiposPorFundacaoPlanoInscricaoAnoMes(string CD_FUNDACAO, string CD_PLANO, string NUM_INSCRICAO, string ANO_REF, string MES_REF)
		{
			if(AppSettings.IS_SQL_SERVER_PROVIDER)
				return Conexao.Query<FichaFinanceiraEntidade>("SELECT DISTINCT         TC.DS_TIPO_CONTRIBUICAO,        TC.CD_TIPO_CONTRIBUICAO,        SUM(FI.CONTRIB_PARTICIPANTE) AS CONTRIB_PARTICIPANTE,        SUM(FI.CONTRIB_EMPRESA) AS CONTRIB_EMPRESA,        0 + SUM(FI.CONTRIB_PARTICIPANTE) + SUM(FI.CONTRIB_EMPRESA) AS TOTAL_CONTRIB,        0 + SUM(FI.QTD_COTA_RP_PARTICIPANTE) + SUM(FI.QTD_COTA_RP_EMPRESA) AS QTD_COTA  FROM CC_FICHA_FINANCEIRA FI INNER JOIN TB_TIPO_CONTRIBUICAO TC ON  TC.CD_TIPO_CONTRIBUICAO = FI.CD_TIPO_CONTRIBUICAO WHERE FI.CD_FUNDACAO = @CD_FUNDACAO   AND FI.CD_PLANO = @CD_PLANO   AND FI.NUM_INSCRICAO = @NUM_INSCRICAO   AND FI.ANO_REF = @ANO_REF   AND FI.MES_REF = @MES_REF GROUP BY TC.DS_TIPO_CONTRIBUICAO,      TC.CD_TIPO_CONTRIBUICAO ORDER BY TC.CD_TIPO_CONTRIBUICAO", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO, ANO_REF, MES_REF });
			else if(AppSettings.IS_ORACLE_PROVIDER)
				return Conexao.Query<FichaFinanceiraEntidade>("SELECT DISTINCT TC.DS_TIPO_CONTRIBUICAO, TC.CD_TIPO_CONTRIBUICAO, SUM(FI.CONTRIB_PARTICIPANTE) AS CONTRIB_PARTICIPANTE, SUM(FI.CONTRIB_EMPRESA) AS CONTRIB_EMPRESA, 0 + SUM(FI.CONTRIB_PARTICIPANTE) + SUM(FI.CONTRIB_EMPRESA) AS TOTAL_CONTRIB, 0 + SUM(FI.QTD_COTA_RP_PARTICIPANTE) + SUM(FI.QTD_COTA_RP_EMPRESA) AS QTD_COTA FROM CC_FICHA_FINANCEIRA  FI  INNER  JOIN TB_TIPO_CONTRIBUICAO   TC  ON TC.CD_TIPO_CONTRIBUICAO=FI.CD_TIPO_CONTRIBUICAO WHERE FI.CD_FUNDACAO=:CD_FUNDACAO AND FI.CD_PLANO=:CD_PLANO AND FI.NUM_INSCRICAO=:NUM_INSCRICAO AND FI.ANO_REF=:ANO_REF AND FI.MES_REF=:MES_REF GROUP BY TC.DS_TIPO_CONTRIBUICAO, TC.CD_TIPO_CONTRIBUICAO ORDER BY TC.CD_TIPO_CONTRIBUICAO", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO, ANO_REF, MES_REF });
			else
				throw new Exception("Provider n達o suportado!");
		}
    }
}
