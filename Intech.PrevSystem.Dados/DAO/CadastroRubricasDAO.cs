using Dapper;
using Intech.Lib.Dapper;
using Intech.Lib.Web;
using Intech.PrevSystem.Entidades;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;

namespace Intech.PrevSystem.Dados.DAO
{
	public abstract class CadastroRubricasDAO : BaseDAO<CadastroRubricasEntidade>
	{
		public CadastroRubricasDAO (IDbTransaction tx = null) : base(tx) { }

		public virtual List<CadastroRubricasEntidade> BuscarPorFundacaoInscricaoEmpresa(string CD_FUNDACAO, string NUM_INSCRICAO, string CD_EMPRESA)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<CadastroRubricasEntidade>("SELECT * FROM CC_CADASTRO_RUBRICAS WHERE CD_FUNDACAO = @CD_FUNDACAO   AND NUM_INSCRICAO = @NUM_INSCRICAO   AND CD_EMPRESA = @CD_EMPRESA", new { CD_FUNDACAO, NUM_INSCRICAO, CD_EMPRESA }, Transaction).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<CadastroRubricasEntidade>("SELECT * FROM CC_CADASTRO_RUBRICAS WHERE CD_FUNDACAO=:CD_FUNDACAO AND NUM_INSCRICAO=:NUM_INSCRICAO AND CD_EMPRESA=:CD_EMPRESA", new { CD_FUNDACAO, NUM_INSCRICAO, CD_EMPRESA }, Transaction).ToList();
				else
					throw new Exception("Provider n達o suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<CadastroRubricasEntidade> BuscarPorFundacaoInscricaoEmpresaPeriodo(string CD_FUNDACAO, string NUM_INSCRICAO, string CD_EMPRESA, string ANO_MES_INICIO, string ANO_MES_FIM)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<CadastroRubricasEntidade>("SELECT DISTINCT CC_CADASTRO_RUBRICAS.*,     TB_RUBRICA.DS_RUBRICA FROM CC_CADASTRO_RUBRICAS INNER JOIN TB_RUBRICA ON CC_CADASTRO_RUBRICAS.CD_RUBRICA = TB_RUBRICA.CD_RUBRICA   AND CC_CADASTRO_RUBRICAS.CD_EMPRESA = TB_RUBRICA.CD_EMPRESA WHERE  ( CC_CADASTRO_RUBRICAS.CD_FUNDACAO = @CD_FUNDACAO )        AND ( CC_CADASTRO_RUBRICAS.NUM_INSCRICAO = @NUM_INSCRICAO )        AND ( CC_CADASTRO_RUBRICAS.CD_EMPRESA = @CD_EMPRESA )        AND ( '' + CC_CADASTRO_RUBRICAS.ANO_COMPETENCIA + CC_CADASTRO_RUBRICAS.MES_COMPETENCIA BETWEEN @ANO_MES_INICIO AND @ANO_MES_FIM )        AND ( CC_CADASTRO_RUBRICAS.MES_COMPETENCIA <> '13' )        AND ( TB_RUBRICA.CONCESSAO_BENEF = 'S' )", new { CD_FUNDACAO, NUM_INSCRICAO, CD_EMPRESA, ANO_MES_INICIO, ANO_MES_FIM }, Transaction).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<CadastroRubricasEntidade>("SELECT DISTINCT CC_CADASTRO_RUBRICAS.*, TB_RUBRICA.DS_RUBRICA FROM CC_CADASTRO_RUBRICAS INNER  JOIN TB_RUBRICA  ON CC_CADASTRO_RUBRICAS.CD_RUBRICA=TB_RUBRICA.CD_RUBRICA AND CC_CADASTRO_RUBRICAS.CD_EMPRESA=TB_RUBRICA.CD_EMPRESA WHERE (CC_CADASTRO_RUBRICAS.CD_FUNDACAO=:CD_FUNDACAO) AND (CC_CADASTRO_RUBRICAS.NUM_INSCRICAO=:NUM_INSCRICAO) AND (CC_CADASTRO_RUBRICAS.CD_EMPRESA=:CD_EMPRESA) AND ('' || CC_CADASTRO_RUBRICAS.ANO_COMPETENCIA || CC_CADASTRO_RUBRICAS.MES_COMPETENCIA BETWEEN :ANO_MES_INICIO AND :ANO_MES_FIM) AND (CC_CADASTRO_RUBRICAS.MES_COMPETENCIA<>'13') AND (TB_RUBRICA.CONCESSAO_BENEF='S')", new { CD_FUNDACAO, NUM_INSCRICAO, CD_EMPRESA, ANO_MES_INICIO, ANO_MES_FIM }, Transaction).ToList();
				else
					throw new Exception("Provider n達o suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<CadastroRubricasEntidade> BuscarPorFundacaoInscricaoEmpresaReferenciaRubrica(string CD_FUNDACAO, string NUM_INSCRICAO, string CD_EMPRESA, string ANO_REF, string MES_REF, string CD_RUBRICA)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<CadastroRubricasEntidade>("SELECT      CC_CADASTRO_RUBRICAS.*,     TB_RUBRICA.DS_RUBRICA,     TB_RUBRICA.DEBITO_CREDITO  FROM CC_CADASTRO_RUBRICAS  INNER JOIN TB_RUBRICA ON CC_CADASTRO_RUBRICAS.CD_FUNDACAO = TB_RUBRICA.CD_FUNDACAO    AND TB_RUBRICA.CD_EMPRESA = CC_CADASTRO_RUBRICAS.CD_EMPRESA    AND TB_RUBRICA.CD_RUBRICA = CC_CADASTRO_RUBRICAS.CD_RUBRICA  WHERE (CC_CADASTRO_RUBRICAS.CD_FUNDACAO = @CD_FUNDACAO)  AND (CC_CADASTRO_RUBRICAS.CD_EMPRESA = @CD_EMPRESA)  AND (CC_CADASTRO_RUBRICAS.NUM_INSCRICAO = @NUM_INSCRICAO)  AND (CC_CADASTRO_RUBRICAS.ANO_REF = @ANO_REF)  AND (CC_CADASTRO_RUBRICAS.MES_REF = @MES_REF)  AND (CC_CADASTRO_RUBRICAS.CD_RUBRICA = @CD_RUBRICA)", new { CD_FUNDACAO, NUM_INSCRICAO, CD_EMPRESA, ANO_REF, MES_REF, CD_RUBRICA }, Transaction).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<CadastroRubricasEntidade>("SELECT CC_CADASTRO_RUBRICAS.*, TB_RUBRICA.DS_RUBRICA, TB_RUBRICA.DEBITO_CREDITO FROM CC_CADASTRO_RUBRICAS INNER  JOIN TB_RUBRICA  ON CC_CADASTRO_RUBRICAS.CD_FUNDACAO=TB_RUBRICA.CD_FUNDACAO AND TB_RUBRICA.CD_EMPRESA=CC_CADASTRO_RUBRICAS.CD_EMPRESA AND TB_RUBRICA.CD_RUBRICA=CC_CADASTRO_RUBRICAS.CD_RUBRICA WHERE (CC_CADASTRO_RUBRICAS.CD_FUNDACAO=:CD_FUNDACAO) AND (CC_CADASTRO_RUBRICAS.CD_EMPRESA=:CD_EMPRESA) AND (CC_CADASTRO_RUBRICAS.NUM_INSCRICAO=:NUM_INSCRICAO) AND (CC_CADASTRO_RUBRICAS.ANO_REF=:ANO_REF) AND (CC_CADASTRO_RUBRICAS.MES_REF=:MES_REF) AND (CC_CADASTRO_RUBRICAS.CD_RUBRICA=:CD_RUBRICA)", new { CD_FUNDACAO, NUM_INSCRICAO, CD_EMPRESA, ANO_REF, MES_REF, CD_RUBRICA }, Transaction).ToList();
				else
					throw new Exception("Provider n達o suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual decimal SomaRubricasDeCalculo(string CD_FUNDACAO, string CD_EMPRESA, string NUM_INSCRICAO, string ANO_COMPETENCIA, string MES_COMPETENCIA, decimal CD_CALCULO, DateTime DT_VIGENCIA)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.QuerySingleOrDefault<decimal>("SELECT SUM(VALOR_RUBRICA) FROM   CC_CADASTRO_RUBRICAS WHERE  ( CD_FUNDACAO = @CD_FUNDACAO )        AND ( CD_EMPRESA = @CD_EMPRESA )        AND ( NUM_INSCRICAO = @NUM_INSCRICAO )        AND ( ANO_COMPETENCIA = @ANO_COMPETENCIA )        AND ( MES_COMPETENCIA = @MES_COMPETENCIA )        AND ( CD_RUBRICA IN (SELECT CD_RUBRICA                             FROM   GB_COMP_RUBRICA AS RC                             WHERE  ( CD_CALCULO = @CD_CALCULO )                                    AND ( DT_VIGENCIA = (SELECT MAX(DT_VIGENCIA) AS DATA_VIGENCIA                                                         FROM   GB_COMP_RUBRICA AS RCC                                                         WHERE  ( CD_CALCULO = RC.CD_CALCULO )                                                                AND ( DT_VIGENCIA <= @DT_VIGENCIA )) )) )", new { CD_FUNDACAO, CD_EMPRESA, NUM_INSCRICAO, ANO_COMPETENCIA, MES_COMPETENCIA, CD_CALCULO, DT_VIGENCIA }, Transaction);
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.QuerySingleOrDefault<decimal>("SELECT SUM(VALOR_RUBRICA) FROM CC_CADASTRO_RUBRICAS WHERE (CD_FUNDACAO=:CD_FUNDACAO) AND (CD_EMPRESA=:CD_EMPRESA) AND (NUM_INSCRICAO=:NUM_INSCRICAO) AND (ANO_COMPETENCIA=:ANO_COMPETENCIA) AND (MES_COMPETENCIA=:MES_COMPETENCIA) AND (CD_RUBRICA IN (SELECT CD_RUBRICA FROM GB_COMP_RUBRICA RC WHERE (CD_CALCULO=:CD_CALCULO) AND (DT_VIGENCIA=(SELECT MAX(DT_VIGENCIA) AS DATA_VIGENCIA FROM GB_COMP_RUBRICA RCC WHERE (CD_CALCULO=RC.CD_CALCULO) AND (DT_VIGENCIA<=:DT_VIGENCIA)))))", new { CD_FUNDACAO, CD_EMPRESA, NUM_INSCRICAO, ANO_COMPETENCIA, MES_COMPETENCIA, CD_CALCULO, DT_VIGENCIA }, Transaction);
				else
					throw new Exception("Provider n達o suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

	}
}