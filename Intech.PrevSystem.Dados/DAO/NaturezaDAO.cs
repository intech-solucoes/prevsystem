using Dapper;
using Intech.Lib.Dapper;
using Intech.Lib.Web;
using Intech.PrevSystem.Entidades;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;

namespace Intech.PrevSystem.Dados.DAO
{
	public abstract class NaturezaDAO : BaseDAO<NaturezaEntidade>
	{
		public NaturezaDAO (IDbTransaction tx = null) : base(tx) { }

		public virtual NaturezaEntidade BuscarPorCdNatur(decimal CD_NATUR)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.QuerySingleOrDefault<NaturezaEntidade>("SELECT * FROM CE_NATUREZA WHERE CD_NATUR = @CD_NATUR", new { CD_NATUR }, Transaction);
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.QuerySingleOrDefault<NaturezaEntidade>("SELECT * FROM CE_NATUREZA WHERE CD_NATUR=:CD_NATUR", new { CD_NATUR }, Transaction);
				else
					throw new Exception("Provider n達o suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<NaturezaEntidade> BuscarPorFundacaoEmpresaPlanoModalidade(string CD_FUNDACAO, string CD_EMPRESA, string CD_PLANO, decimal CD_MODAL)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<NaturezaEntidade>("SELECT DISTINCT CE_NATUREZA.*,                 CE_GRUPO_NATUREZA.CD_PLANO,                 CE_MODALIDADE.DS_MODAL,                 CE_NATUREZA.ID_TEMP_VINC,                 CE_NATUREZA.PERMITE_CONCESSAO_WEB FROM CE_GRUPO_NATUREZA INNER JOIN CE_MODALIDADE ON CE_MODALIDADE.CD_MODAL = CE_GRUPO_NATUREZA.CD_MODAL INNER JOIN CE_NATUREZA ON CE_NATUREZA.CD_GRUPO = CE_GRUPO_NATUREZA.CD_GRUPO INNER JOIN CE_TAXAS_ENCARGOS_PLANO ON CE_TAXAS_ENCARGOS_PLANO.CD_NATUR = CE_NATUREZA.CD_NATUR AND CE_TAXAS_ENCARGOS_PLANO.CD_MODAL = CE_MODALIDADE.CD_MODAL INNER JOIN CE_TAXAS_CONCESSAO_PLANO ON CE_TAXAS_CONCESSAO_PLANO.CD_NATUR = CE_NATUREZA.CD_NATUR AND CE_TAXAS_ENCARGOS_PLANO.SEQUENCIA = CE_TAXAS_CONCESSAO_PLANO.SEQUENCIA WHERE (CE_MODALIDADE.SITUACAO = 'A')   AND (CE_NATUREZA.SITUACAO = 'A')   AND (CE_NATUREZA.AUTORIZACAO_ESPECIAL = 'N')   AND (CE_MODALIDADE.CD_MODAL = @CD_MODAL)   AND (CE_NATUREZA.PERMITE_CONCESSAO_WEB = 'S')   AND (CE_TAXAS_CONCESSAO_PLANO.CD_FUNDACAO = @CD_FUNDACAO)   AND (CE_TAXAS_ENCARGOS_PLANO.CD_FUNDACAO = @CD_FUNDACAO)   AND (CE_TAXAS_ENCARGOS_PLANO.CD_EMPRESA = @CD_EMPRESA)   AND (CE_TAXAS_CONCESSAO_PLANO.CD_EMPRESA = @CD_EMPRESA)   AND (CE_TAXAS_ENCARGOS_PLANO.DT_INIC_VIGENCIA =          (SELECT MAX(DT_INIC_VIGENCIA) AS Expr1           FROM CE_TAXAS_ENCARGOS_PLANO AS CE_TAXAS_ENCARGOS_AUX           WHERE (CD_FUNDACAO = @CD_FUNDACAO)             AND (CD_EMPRESA = @CD_EMPRESA)             AND (CD_MODAL = CE_MODALIDADE.CD_MODAL)             AND (CD_PLANO = CE_TAXAS_CONCESSAO_PLANO.CD_PLANO)             AND (DT_INIC_VIGENCIA <= GETDATE())))   AND (CE_TAXAS_ENCARGOS_PLANO.CD_PLANO = @CD_PLANO)   AND (CE_TAXAS_CONCESSAO_PLANO.CD_PLANO = @CD_PLANO) ORDER BY CE_NATUREZA.CD_NATUR", new { CD_FUNDACAO, CD_EMPRESA, CD_PLANO, CD_MODAL }, Transaction).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<NaturezaEntidade>("SELECT DISTINCT CE_NATUREZA.*, CE_GRUPO_NATUREZA.CD_PLANO, CE_MODALIDADE.DS_MODAL, CE_NATUREZA.ID_TEMP_VINC, CE_NATUREZA.PERMITE_CONCESSAO_WEB FROM CE_GRUPO_NATUREZA INNER  JOIN CE_MODALIDADE  ON CE_MODALIDADE.CD_MODAL=CE_GRUPO_NATUREZA.CD_MODAL INNER  JOIN CE_NATUREZA  ON CE_NATUREZA.CD_GRUPO=CE_GRUPO_NATUREZA.CD_GRUPO INNER  JOIN CE_TAXAS_ENCARGOS_PLANO  ON CE_TAXAS_ENCARGOS_PLANO.CD_NATUR=CE_NATUREZA.CD_NATUR AND CE_TAXAS_ENCARGOS_PLANO.CD_MODAL=CE_MODALIDADE.CD_MODAL INNER  JOIN CE_TAXAS_CONCESSAO_PLANO  ON CE_TAXAS_CONCESSAO_PLANO.CD_NATUR=CE_NATUREZA.CD_NATUR AND CE_TAXAS_ENCARGOS_PLANO.SEQUENCIA=CE_TAXAS_CONCESSAO_PLANO.SEQUENCIA WHERE (CE_MODALIDADE.SITUACAO='A') AND (CE_NATUREZA.SITUACAO='A') AND (CE_NATUREZA.AUTORIZACAO_ESPECIAL='N') AND (CE_MODALIDADE.CD_MODAL=:CD_MODAL) AND (CE_NATUREZA.PERMITE_CONCESSAO_WEB='S') AND (CE_TAXAS_CONCESSAO_PLANO.CD_FUNDACAO=:CD_FUNDACAO) AND (CE_TAXAS_ENCARGOS_PLANO.CD_FUNDACAO=:CD_FUNDACAO) AND (CE_TAXAS_ENCARGOS_PLANO.CD_EMPRESA=:CD_EMPRESA) AND (CE_TAXAS_CONCESSAO_PLANO.CD_EMPRESA=:CD_EMPRESA) AND (CE_TAXAS_ENCARGOS_PLANO.DT_INIC_VIGENCIA=(SELECT MAX(DT_INIC_VIGENCIA) AS EXPR1 FROM CE_TAXAS_ENCARGOS_PLANO CE_TAXAS_ENCARGOS_AUX WHERE (CD_FUNDACAO=:CD_FUNDACAO) AND (CD_EMPRESA=:CD_EMPRESA) AND (CD_MODAL=CE_MODALIDADE.CD_MODAL) AND (CD_PLANO=CE_TAXAS_CONCESSAO_PLANO.CD_PLANO) AND (DT_INIC_VIGENCIA<=SYSDATE))) AND (CE_TAXAS_ENCARGOS_PLANO.CD_PLANO=:CD_PLANO) AND (CE_TAXAS_CONCESSAO_PLANO.CD_PLANO=:CD_PLANO) ORDER BY CE_NATUREZA.CD_NATUR", new { CD_FUNDACAO, CD_EMPRESA, CD_PLANO, CD_MODAL }, Transaction).ToList();
				else
					throw new Exception("Provider n達o suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<NaturezaEntidade> BuscarPorModalidadePlanoCategoria(decimal CD_MODAL, string CD_PLANO, string ATIVO, string ASSISTIDO, string AUTOPATROCINADO, string DIFERIDO)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<NaturezaEntidade>("SELECT CE_NATUREZA.* FROM CE_NATUREZA INNER JOIN CE_GRUPO_NATUREZA ON CE_GRUPO_NATUREZA.CD_GRUPO = CE_NATUREZA.CD_GRUPO INNER JOIN CE_MODALIDADE ON CE_MODALIDADE.CD_MODAL = CE_GRUPO_NATUREZA.CD_MODAL WHERE CE_MODALIDADE.CD_MODAL = @CD_MODAL   AND (CE_GRUPO_NATUREZA.CD_PLANO = @CD_PLANO OR @CD_PLANO IS NULL)   AND (CE_NATUREZA.SITUACAO = 'A')   AND (CE_NATUREZA.CATEGORIA_ATIVO = @ATIVO OR @ATIVO IS NULL)   AND (CE_NATUREZA.CATEGORIA_ASSISTIDO = @ASSISTIDO OR @ASSISTIDO IS NULL)   AND (CE_NATUREZA.CATEGORIA_AUTOPATROCINADO = @AUTOPATROCINADO OR @AUTOPATROCINADO IS NULL)   AND (CE_NATUREZA.CATEGORIA_DIFERIDO = @DIFERIDO OR @DIFERIDO IS NULL) ORDER BY PRAZO_MIN", new { CD_MODAL, CD_PLANO, ATIVO, ASSISTIDO, AUTOPATROCINADO, DIFERIDO }, Transaction).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<NaturezaEntidade>("SELECT CE_NATUREZA.* FROM CE_NATUREZA INNER  JOIN CE_GRUPO_NATUREZA  ON CE_GRUPO_NATUREZA.CD_GRUPO=CE_NATUREZA.CD_GRUPO INNER  JOIN CE_MODALIDADE  ON CE_MODALIDADE.CD_MODAL=CE_GRUPO_NATUREZA.CD_MODAL WHERE CE_MODALIDADE.CD_MODAL=:CD_MODAL AND (CE_GRUPO_NATUREZA.CD_PLANO=:CD_PLANO OR :CD_PLANO IS NULL ) AND (CE_NATUREZA.SITUACAO='A') AND (CE_NATUREZA.CATEGORIA_ATIVO=:ATIVO OR :ATIVO IS NULL ) AND (CE_NATUREZA.CATEGORIA_ASSISTIDO=:ASSISTIDO OR :ASSISTIDO IS NULL ) AND (CE_NATUREZA.CATEGORIA_AUTOPATROCINADO=:AUTOPATROCINADO OR :AUTOPATROCINADO IS NULL ) AND (CE_NATUREZA.CATEGORIA_DIFERIDO=:DIFERIDO OR :DIFERIDO IS NULL ) ORDER BY PRAZO_MIN", new { CD_MODAL, CD_PLANO, ATIVO, ASSISTIDO, AUTOPATROCINADO, DIFERIDO }, Transaction).ToList();
				else
					throw new Exception("Provider n達o suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<NaturezaEntidade> BuscarPorModalidadePlanoCategoriaTempoContrib(decimal CD_MODAL, string CD_PLANO, string ATIVO, string ASSISTIDO, string AUTOPATROCINADO, string DIFERIDO, int TEMPO_CONTRIBUICAO)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<NaturezaEntidade>("SELECT CE_NATUREZA.* FROM CE_NATUREZA INNER JOIN CE_GRUPO_NATUREZA ON CE_GRUPO_NATUREZA.CD_GRUPO = CE_NATUREZA.CD_GRUPO INNER JOIN CE_MODALIDADE ON CE_MODALIDADE.CD_MODAL = CE_GRUPO_NATUREZA.CD_MODAL WHERE CE_MODALIDADE.CD_MODAL = @CD_MODAL   AND (CE_GRUPO_NATUREZA.CD_PLANO = @CD_PLANO OR @CD_PLANO IS NULL)   AND (CE_NATUREZA.SITUACAO = 'A')   AND (CE_NATUREZA.CATEGORIA_ATIVO = @ATIVO OR @ATIVO IS NULL)   AND (CE_NATUREZA.CATEGORIA_ASSISTIDO = @ASSISTIDO OR @ASSISTIDO IS NULL)   AND (CE_NATUREZA.CATEGORIA_AUTOPATROCINADO = @AUTOPATROCINADO OR @AUTOPATROCINADO IS NULL)   AND (CE_NATUREZA.CATEGORIA_DIFERIDO = @DIFERIDO OR @DIFERIDO IS NULL)   AND CE_NATUREZA.TEMPO_TIPO_CONTRIBUICAO = @TEMPO_CONTRIBUICAO ORDER BY PRAZO_MIN", new { CD_MODAL, CD_PLANO, ATIVO, ASSISTIDO, AUTOPATROCINADO, DIFERIDO, TEMPO_CONTRIBUICAO }, Transaction).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<NaturezaEntidade>("SELECT CE_NATUREZA.* FROM CE_NATUREZA INNER  JOIN CE_GRUPO_NATUREZA  ON CE_GRUPO_NATUREZA.CD_GRUPO=CE_NATUREZA.CD_GRUPO INNER  JOIN CE_MODALIDADE  ON CE_MODALIDADE.CD_MODAL=CE_GRUPO_NATUREZA.CD_MODAL WHERE CE_MODALIDADE.CD_MODAL=:CD_MODAL AND (CE_GRUPO_NATUREZA.CD_PLANO=:CD_PLANO OR :CD_PLANO IS NULL ) AND (CE_NATUREZA.SITUACAO='A') AND (CE_NATUREZA.CATEGORIA_ATIVO=:ATIVO OR :ATIVO IS NULL ) AND (CE_NATUREZA.CATEGORIA_ASSISTIDO=:ASSISTIDO OR :ASSISTIDO IS NULL ) AND (CE_NATUREZA.CATEGORIA_AUTOPATROCINADO=:AUTOPATROCINADO OR :AUTOPATROCINADO IS NULL ) AND (CE_NATUREZA.CATEGORIA_DIFERIDO=:DIFERIDO OR :DIFERIDO IS NULL ) AND CE_NATUREZA.TEMPO_TIPO_CONTRIBUICAO=:TEMPO_CONTRIBUICAO ORDER BY PRAZO_MIN", new { CD_MODAL, CD_PLANO, ATIVO, ASSISTIDO, AUTOPATROCINADO, DIFERIDO, TEMPO_CONTRIBUICAO }, Transaction).ToList();
				else
					throw new Exception("Provider n達o suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<NaturezaEntidade> BuscarPorPlanoModalidade(string CD_PLANO, decimal CD_MODAL)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<NaturezaEntidade>("SELECT * FROM CE_NATUREZA INNER JOIN CE_GRUPO_NATUREZA ON CE_GRUPO_NATUREZA.CD_GRUPO = CE_NATUREZA.CD_GRUPO WHERE CE_GRUPO_NATUREZA.CD_PLANO = @CD_PLANO AND CE_GRUPO_NATUREZA.CD_MODAL = @CD_MODAL AND CE_NATUREZA.PERMITE_CONCESSAO_WEB = 'S' ORDER BY CE_NATUREZA.PRAZO_MAX", new { CD_PLANO, CD_MODAL }, Transaction).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<NaturezaEntidade>("SELECT * FROM CE_NATUREZA INNER  JOIN CE_GRUPO_NATUREZA  ON CE_GRUPO_NATUREZA.CD_GRUPO=CE_NATUREZA.CD_GRUPO WHERE CE_GRUPO_NATUREZA.CD_PLANO=:CD_PLANO AND CE_GRUPO_NATUREZA.CD_MODAL=:CD_MODAL AND CE_NATUREZA.PERMITE_CONCESSAO_WEB='S' ORDER BY CE_NATUREZA.PRAZO_MAX", new { CD_PLANO, CD_MODAL }, Transaction).ToList();
				else
					throw new Exception("Provider n達o suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

	}
}