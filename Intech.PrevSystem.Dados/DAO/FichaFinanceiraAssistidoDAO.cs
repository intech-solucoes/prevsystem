#region Usings
using Dapper;
using Intech.Lib.Dapper;
using Intech.Lib.Web;
using Intech.PrevSystem.Entidades;
using Microsoft.Extensions.Configuration;
using System;
using System.Collections.Generic;
#endregion

namespace Intech.PrevSystem.Dados.DAO
{   
    public abstract class FichaFinanceiraAssistidoDAO : BaseDAO<FichaFinanceiraAssistidoEntidade>
    {
        
		public virtual IEnumerable<FichaFinanceiraAssistidoEntidade> BuscarDatas(string CD_FUNDACAO, string CD_EMPRESA, string NUM_MATRICULA, string CD_PLANO)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT DISTINCT DT_REFERENCIA,       GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA,   	DS_TIPO_FOLHA,  	GB_ESPECIE_BENEFICIO.CD_ESPECIE,  	GB_ESPECIE_BENEFICIO.DS_ESPECIE  FROM GB_FICHA_FINANC_ASSISTIDO  INNER JOIN GB_RECEBEDOR_BENEFICIO ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR  INNER JOIN TB_TIPO_FOLHA TF ON TF.CD_TIPO_FOLHA = GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA  INNER JOIN GB_ESPECIE_BENEFICIO ON GB_ESPECIE_BENEFICIO.CD_ESPECIE = GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE  WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA = @CD_EMPRESA    AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO = @CD_PLANO    AND NUM_MATRICULA = @NUM_MATRICULA    AND GB_RECEBEDOR_BENEFICIO.CD_TIPO_RECEBEDOR = 'A'  GROUP BY       DT_REFERENCIA,       DT_COMPETENCIA,       GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA,       DS_TIPO_FOLHA,  	GB_ESPECIE_BENEFICIO.CD_ESPECIE,  	GB_ESPECIE_BENEFICIO.DS_ESPECIE  ORDER BY DT_REFERENCIA DESC", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, CD_PLANO });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT DISTINCT DT_REFERENCIA, GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA, DS_TIPO_FOLHA, GB_ESPECIE_BENEFICIO.CD_ESPECIE, GB_ESPECIE_BENEFICIO.DS_ESPECIE FROM GB_FICHA_FINANC_ASSISTIDO INNER  JOIN GB_RECEBEDOR_BENEFICIO  ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR INNER  JOIN TB_TIPO_FOLHA   TF  ON TF.CD_TIPO_FOLHA=GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA INNER  JOIN GB_ESPECIE_BENEFICIO  ON GB_ESPECIE_BENEFICIO.CD_ESPECIE=GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO=:CD_FUNDACAO AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO=:CD_FUNDACAO AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA=:CD_EMPRESA AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO=:CD_PLANO AND NUM_MATRICULA=:NUM_MATRICULA AND GB_RECEBEDOR_BENEFICIO.CD_TIPO_RECEBEDOR='A' GROUP BY DT_REFERENCIA, DT_COMPETENCIA, GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA, DS_TIPO_FOLHA, GB_ESPECIE_BENEFICIO.CD_ESPECIE, GB_ESPECIE_BENEFICIO.DS_ESPECIE ORDER BY DT_REFERENCIA DESC", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, CD_PLANO });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaFinanceiraAssistidoEntidade> BuscarDatasPorRecebedor(string CD_FUNDACAO, string CD_EMPRESA, string NUM_MATRICULA, int SEQ_RECEBEDOR, string CD_PLANO)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT       DT_REFERENCIA,      DT_COMPETENCIA,       GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA,   	DS_TIPO_FOLHA,  	GB_ESPECIE_BENEFICIO.CD_ESPECIE,  	GB_ESPECIE_BENEFICIO.DS_ESPECIE  FROM GB_FICHA_FINANC_ASSISTIDO  INNER JOIN GB_RECEBEDOR_BENEFICIO ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR  INNER JOIN TB_TIPO_FOLHA TF ON TF.CD_TIPO_FOLHA = GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA  INNER JOIN GB_ESPECIE_BENEFICIO ON GB_ESPECIE_BENEFICIO.CD_ESPECIE = GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE  WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = @SEQ_RECEBEDOR    AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO = @CD_PLANO    AND NUM_MATRICULA = @NUM_MATRICULA  GROUP BY       DT_REFERENCIA,       DT_COMPETENCIA,       GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA,       DS_TIPO_FOLHA,  	GB_ESPECIE_BENEFICIO.CD_ESPECIE,  	GB_ESPECIE_BENEFICIO.DS_ESPECIE  ORDER BY DT_REFERENCIA DESC", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, SEQ_RECEBEDOR, CD_PLANO });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT DT_REFERENCIA, DT_COMPETENCIA, GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA, DS_TIPO_FOLHA, GB_ESPECIE_BENEFICIO.CD_ESPECIE, GB_ESPECIE_BENEFICIO.DS_ESPECIE FROM GB_FICHA_FINANC_ASSISTIDO INNER  JOIN GB_RECEBEDOR_BENEFICIO  ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR INNER  JOIN TB_TIPO_FOLHA   TF  ON TF.CD_TIPO_FOLHA=GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA INNER  JOIN GB_ESPECIE_BENEFICIO  ON GB_ESPECIE_BENEFICIO.CD_ESPECIE=GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO=:CD_FUNDACAO AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO=:CD_FUNDACAO AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=:SEQ_RECEBEDOR AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO=:CD_PLANO AND NUM_MATRICULA=:NUM_MATRICULA GROUP BY DT_REFERENCIA, DT_COMPETENCIA, GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA, DS_TIPO_FOLHA, GB_ESPECIE_BENEFICIO.CD_ESPECIE, GB_ESPECIE_BENEFICIO.DS_ESPECIE ORDER BY DT_REFERENCIA DESC", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, SEQ_RECEBEDOR, CD_PLANO });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaFinanceiraAssistidoEntidade> BuscarPorFundacaoEmpresaMatriculaPlano(string CD_FUNDACAO, string CD_EMPRESA, string NUM_MATRICULA, string CD_PLANO)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*,         GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA,         GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC,         GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO,         GB_ESPECIE_BENEFICIO.DS_ESPECIE  FROM GB_FICHA_FINANC_ASSISTIDO  INNER JOIN GB_RECEBEDOR_BENEFICIO ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR  INNER JOIN GB_RUBRICAS_PREVIDENCIAL ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA = GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA  INNER JOIN GB_ESPECIE_BENEFICIO ON GB_ESPECIE_BENEFICIO.CD_ESPECIE = GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE   WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA = @CD_EMPRESA    AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO = @CD_PLANO    AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA = @NUM_MATRICULA    AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA = 'S'    AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO = 'S'", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, CD_PLANO });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*, GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA, GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC, GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO, GB_ESPECIE_BENEFICIO.DS_ESPECIE FROM GB_FICHA_FINANC_ASSISTIDO INNER  JOIN GB_RECEBEDOR_BENEFICIO  ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR INNER  JOIN GB_RUBRICAS_PREVIDENCIAL  ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA=GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA INNER  JOIN GB_ESPECIE_BENEFICIO  ON GB_ESPECIE_BENEFICIO.CD_ESPECIE=GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO=:CD_FUNDACAO AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO=:CD_FUNDACAO AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA=:CD_EMPRESA AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO=:CD_PLANO AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA=:NUM_MATRICULA AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA='S' AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO='S'", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, CD_PLANO });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaFinanceiraAssistidoEntidade> BuscarPorFundacaoEmpresaMatriculaPlanoCompetencia(string CD_FUNDACAO, string CD_EMPRESA, string NUM_MATRICULA, string CD_PLANO, DateTime DT_COMPETENCIA, string CD_TIPO_FOLHA)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*,         GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA,         GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC,         GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO,         GB_ESPECIE_BENEFICIO.DS_ESPECIE  FROM GB_FICHA_FINANC_ASSISTIDO  INNER JOIN GB_RECEBEDOR_BENEFICIO ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR  INNER JOIN GB_RUBRICAS_PREVIDENCIAL ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA = GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA  INNER JOIN GB_ESPECIE_BENEFICIO ON GB_ESPECIE_BENEFICIO.CD_ESPECIE = GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE   WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA = @CD_EMPRESA    AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO = @CD_PLANO    AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA = @NUM_MATRICULA    AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA = 'S'    AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO = 'S'    AND GB_FICHA_FINANC_ASSISTIDO.DT_COMPETENCIA = @DT_COMPETENCIA    AND GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA = @CD_TIPO_FOLHA", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, CD_PLANO, DT_COMPETENCIA, CD_TIPO_FOLHA });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*, GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA, GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC, GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO, GB_ESPECIE_BENEFICIO.DS_ESPECIE FROM GB_FICHA_FINANC_ASSISTIDO INNER  JOIN GB_RECEBEDOR_BENEFICIO  ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR INNER  JOIN GB_RUBRICAS_PREVIDENCIAL  ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA=GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA INNER  JOIN GB_ESPECIE_BENEFICIO  ON GB_ESPECIE_BENEFICIO.CD_ESPECIE=GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO=:CD_FUNDACAO AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO=:CD_FUNDACAO AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA=:CD_EMPRESA AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO=:CD_PLANO AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA=:NUM_MATRICULA AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA='S' AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO='S' AND GB_FICHA_FINANC_ASSISTIDO.DT_COMPETENCIA=:DT_COMPETENCIA AND GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA=:CD_TIPO_FOLHA", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, CD_PLANO, DT_COMPETENCIA, CD_TIPO_FOLHA });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaFinanceiraAssistidoEntidade> BuscarPorFundacaoEmpresaMatriculaPlanoCompetenciaRecebedor(string CD_FUNDACAO, string CD_EMPRESA, string NUM_MATRICULA, int SEQ_RECEBEDOR, string CD_PLANO, DateTime DT_COMPETENCIA, string CD_TIPO_FOLHA)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*,         GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA,         GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC,         GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO,         GB_ESPECIE_BENEFICIO.DS_ESPECIE  FROM GB_FICHA_FINANC_ASSISTIDO  INNER JOIN GB_RECEBEDOR_BENEFICIO ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR  INNER JOIN GB_RUBRICAS_PREVIDENCIAL ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA = GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA  INNER JOIN GB_ESPECIE_BENEFICIO ON GB_ESPECIE_BENEFICIO.CD_ESPECIE = GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE   WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = @SEQ_RECEBEDOR    AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO = @CD_PLANO    AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA = @NUM_MATRICULA    AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA = 'S'    AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO = 'S'    AND GB_FICHA_FINANC_ASSISTIDO.DT_COMPETENCIA = @DT_COMPETENCIA    AND GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA = @CD_TIPO_FOLHA", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, SEQ_RECEBEDOR, CD_PLANO, DT_COMPETENCIA, CD_TIPO_FOLHA });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*, GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA, GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC, GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO, GB_ESPECIE_BENEFICIO.DS_ESPECIE FROM GB_FICHA_FINANC_ASSISTIDO INNER  JOIN GB_RECEBEDOR_BENEFICIO  ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR INNER  JOIN GB_RUBRICAS_PREVIDENCIAL  ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA=GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA INNER  JOIN GB_ESPECIE_BENEFICIO  ON GB_ESPECIE_BENEFICIO.CD_ESPECIE=GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO=:CD_FUNDACAO AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO=:CD_FUNDACAO AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=:SEQ_RECEBEDOR AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO=:CD_PLANO AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA=:NUM_MATRICULA AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA='S' AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO='S' AND GB_FICHA_FINANC_ASSISTIDO.DT_COMPETENCIA=:DT_COMPETENCIA AND GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA=:CD_TIPO_FOLHA", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, SEQ_RECEBEDOR, CD_PLANO, DT_COMPETENCIA, CD_TIPO_FOLHA });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaFinanceiraAssistidoEntidade> BuscarPorFundacaoEmpresaMatriculaPlanoRecebedor(string CD_FUNDACAO, string CD_EMPRESA, string NUM_MATRICULA, int SEQ_RECEBEDOR, string CD_PLANO)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*,         GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA,         GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC,         GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO,         GB_ESPECIE_BENEFICIO.DS_ESPECIE  FROM GB_FICHA_FINANC_ASSISTIDO  INNER JOIN GB_RECEBEDOR_BENEFICIO ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR  INNER JOIN GB_RUBRICAS_PREVIDENCIAL ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA = GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA  INNER JOIN GB_ESPECIE_BENEFICIO ON GB_ESPECIE_BENEFICIO.CD_ESPECIE = GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE   WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = @SEQ_RECEBEDOR    AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO = @CD_PLANO    AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA = @NUM_MATRICULA    AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA = 'S'    AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO = 'S'", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, SEQ_RECEBEDOR, CD_PLANO });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*, GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA, GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC, GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO, GB_ESPECIE_BENEFICIO.DS_ESPECIE FROM GB_FICHA_FINANC_ASSISTIDO INNER  JOIN GB_RECEBEDOR_BENEFICIO  ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR INNER  JOIN GB_RUBRICAS_PREVIDENCIAL  ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA=GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA INNER  JOIN GB_ESPECIE_BENEFICIO  ON GB_ESPECIE_BENEFICIO.CD_ESPECIE=GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO=:CD_FUNDACAO AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO=:CD_FUNDACAO AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=:SEQ_RECEBEDOR AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO=:CD_PLANO AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA=:NUM_MATRICULA AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA='S' AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO='S'", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, SEQ_RECEBEDOR, CD_PLANO });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaFinanceiraAssistidoEntidade> BuscarPorFundacaoEmpresaMatriculaPlanoReferencia(string CD_FUNDACAO, string CD_EMPRESA, string NUM_MATRICULA, string CD_PLANO, DateTime DT_REFERENCIA)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*,         GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA,         GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC,         GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO,         GB_ESPECIE_BENEFICIO.DS_ESPECIE,   	   TB_TIPO_FOLHA.DS_TIPO_FOLHA  FROM GB_FICHA_FINANC_ASSISTIDO  INNER JOIN GB_RECEBEDOR_BENEFICIO ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR  INNER JOIN GB_RUBRICAS_PREVIDENCIAL ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA = GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA  INNER JOIN GB_ESPECIE_BENEFICIO ON GB_ESPECIE_BENEFICIO.CD_ESPECIE = GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE   INNER JOIN TB_TIPO_FOLHA ON TB_TIPO_FOLHA.CD_TIPO_FOLHA = GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA  WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA = @CD_EMPRESA    AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO = @CD_PLANO    AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA = @NUM_MATRICULA    AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA = 'S'    AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO = 'S'    AND GB_FICHA_FINANC_ASSISTIDO.DT_REFERENCIA = @DT_REFERENCIA    AND GB_FICHA_FINANC_ASSISTIDO.ANO_PROCESSO = @ANO_PROCESSO    AND GB_FICHA_FINANC_ASSISTIDO.NUM_PROCESSO = @NUM_PROCESSO", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, CD_PLANO, DT_REFERENCIA });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*, GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA, GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC, GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO, GB_ESPECIE_BENEFICIO.DS_ESPECIE, TB_TIPO_FOLHA.DS_TIPO_FOLHA FROM GB_FICHA_FINANC_ASSISTIDO INNER  JOIN GB_RECEBEDOR_BENEFICIO  ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR INNER  JOIN GB_RUBRICAS_PREVIDENCIAL  ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA=GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA INNER  JOIN GB_ESPECIE_BENEFICIO  ON GB_ESPECIE_BENEFICIO.CD_ESPECIE=GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE INNER  JOIN TB_TIPO_FOLHA  ON TB_TIPO_FOLHA.CD_TIPO_FOLHA=GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO=:CD_FUNDACAO AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO=:CD_FUNDACAO AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA=:CD_EMPRESA AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO=:CD_PLANO AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA=:NUM_MATRICULA AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA='S' AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO='S' AND GB_FICHA_FINANC_ASSISTIDO.DT_REFERENCIA=:DT_REFERENCIA AND GB_FICHA_FINANC_ASSISTIDO.ANO_PROCESSO=:ANO_PROCESSO AND GB_FICHA_FINANC_ASSISTIDO.NUM_PROCESSO=:NUM_PROCESSO", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, CD_PLANO, DT_REFERENCIA });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaFinanceiraAssistidoEntidade> BuscarPorFundacaoEmpresaMatriculaPlanoReferenciaProcesso(string CD_FUNDACAO, string CD_EMPRESA, string NUM_MATRICULA, string CD_PLANO, DateTime DT_REFERENCIA, string ANO_PROCESSO, string NUM_PROCESSO)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*,         GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA,         GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC,         GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO,         GB_ESPECIE_BENEFICIO.DS_ESPECIE,   	   TB_TIPO_FOLHA.DS_TIPO_FOLHA  FROM GB_FICHA_FINANC_ASSISTIDO  INNER JOIN GB_RECEBEDOR_BENEFICIO ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR  INNER JOIN GB_RUBRICAS_PREVIDENCIAL ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA = GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA  INNER JOIN GB_ESPECIE_BENEFICIO ON GB_ESPECIE_BENEFICIO.CD_ESPECIE = GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE   INNER JOIN TB_TIPO_FOLHA ON TB_TIPO_FOLHA.CD_TIPO_FOLHA = GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA  WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA = @CD_EMPRESA    AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO = @CD_PLANO    AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA = @NUM_MATRICULA    AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA = 'S'    AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO = 'S'    AND GB_FICHA_FINANC_ASSISTIDO.DT_REFERENCIA = @DT_REFERENCIA    AND GB_FICHA_FINANC_ASSISTIDO.ANO_PROCESSO = @ANO_PROCESSO    AND GB_FICHA_FINANC_ASSISTIDO.NUM_PROCESSO = @NUM_PROCESSO", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, CD_PLANO, DT_REFERENCIA, ANO_PROCESSO, NUM_PROCESSO });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*, GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA, GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC, GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO, GB_ESPECIE_BENEFICIO.DS_ESPECIE, TB_TIPO_FOLHA.DS_TIPO_FOLHA FROM GB_FICHA_FINANC_ASSISTIDO INNER  JOIN GB_RECEBEDOR_BENEFICIO  ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR INNER  JOIN GB_RUBRICAS_PREVIDENCIAL  ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA=GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA INNER  JOIN GB_ESPECIE_BENEFICIO  ON GB_ESPECIE_BENEFICIO.CD_ESPECIE=GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE INNER  JOIN TB_TIPO_FOLHA  ON TB_TIPO_FOLHA.CD_TIPO_FOLHA=GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO=:CD_FUNDACAO AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO=:CD_FUNDACAO AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA=:CD_EMPRESA AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO=:CD_PLANO AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA=:NUM_MATRICULA AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA='S' AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO='S' AND GB_FICHA_FINANC_ASSISTIDO.DT_REFERENCIA=:DT_REFERENCIA AND GB_FICHA_FINANC_ASSISTIDO.ANO_PROCESSO=:ANO_PROCESSO AND GB_FICHA_FINANC_ASSISTIDO.NUM_PROCESSO=:NUM_PROCESSO", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, CD_PLANO, DT_REFERENCIA, ANO_PROCESSO, NUM_PROCESSO });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaFinanceiraAssistidoEntidade> BuscarPorFundacaoEmpresaMatriculaPlanoReferenciaProcessoRecebedor(string CD_FUNDACAO, string CD_EMPRESA, string NUM_MATRICULA, int SEQ_RECEBEDOR, string CD_PLANO, DateTime DT_REFERENCIA, string ANO_PROCESSO, string NUM_PROCESSO)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*,         GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA,         GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC,         GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO,         GB_ESPECIE_BENEFICIO.DS_ESPECIE,   	   TB_TIPO_FOLHA.DS_TIPO_FOLHA  FROM GB_FICHA_FINANC_ASSISTIDO  INNER JOIN GB_RECEBEDOR_BENEFICIO ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR  INNER JOIN GB_RUBRICAS_PREVIDENCIAL ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA = GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA  INNER JOIN GB_ESPECIE_BENEFICIO ON GB_ESPECIE_BENEFICIO.CD_ESPECIE = GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE   INNER JOIN TB_TIPO_FOLHA ON TB_TIPO_FOLHA.CD_TIPO_FOLHA = GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA  WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = @SEQ_RECEBEDOR    AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO = @CD_PLANO    AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA = @NUM_MATRICULA    AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA = 'S'    AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO = 'S'    AND GB_FICHA_FINANC_ASSISTIDO.DT_REFERENCIA = @DT_REFERENCIA", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, SEQ_RECEBEDOR, CD_PLANO, DT_REFERENCIA, ANO_PROCESSO, NUM_PROCESSO });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*, GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA, GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC, GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO, GB_ESPECIE_BENEFICIO.DS_ESPECIE, TB_TIPO_FOLHA.DS_TIPO_FOLHA FROM GB_FICHA_FINANC_ASSISTIDO INNER  JOIN GB_RECEBEDOR_BENEFICIO  ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR INNER  JOIN GB_RUBRICAS_PREVIDENCIAL  ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA=GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA INNER  JOIN GB_ESPECIE_BENEFICIO  ON GB_ESPECIE_BENEFICIO.CD_ESPECIE=GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE INNER  JOIN TB_TIPO_FOLHA  ON TB_TIPO_FOLHA.CD_TIPO_FOLHA=GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO=:CD_FUNDACAO AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO=:CD_FUNDACAO AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=:SEQ_RECEBEDOR AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO=:CD_PLANO AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA=:NUM_MATRICULA AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA='S' AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO='S' AND GB_FICHA_FINANC_ASSISTIDO.DT_REFERENCIA=:DT_REFERENCIA", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, SEQ_RECEBEDOR, CD_PLANO, DT_REFERENCIA, ANO_PROCESSO, NUM_PROCESSO });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaFinanceiraAssistidoEntidade> BuscarPorFundacaoEmpresaMatriculaPlanoReferenciaRecebedor(string CD_FUNDACAO, string CD_EMPRESA, string NUM_MATRICULA, int SEQ_RECEBEDOR, string CD_PLANO, DateTime DT_REFERENCIA)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*,         GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA,         GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC,         GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO,         GB_ESPECIE_BENEFICIO.DS_ESPECIE,   	   TB_TIPO_FOLHA.DS_TIPO_FOLHA  FROM GB_FICHA_FINANC_ASSISTIDO  INNER JOIN GB_RECEBEDOR_BENEFICIO ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR  INNER JOIN GB_RUBRICAS_PREVIDENCIAL ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA = GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA  INNER JOIN GB_ESPECIE_BENEFICIO ON GB_ESPECIE_BENEFICIO.CD_ESPECIE = GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE   INNER JOIN TB_TIPO_FOLHA ON TB_TIPO_FOLHA.CD_TIPO_FOLHA = GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA  WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = @SEQ_RECEBEDOR    AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO = @CD_PLANO    AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA = @NUM_MATRICULA    AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA = 'S'    AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO = 'S'    AND GB_FICHA_FINANC_ASSISTIDO.DT_REFERENCIA = @DT_REFERENCIA", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, SEQ_RECEBEDOR, CD_PLANO, DT_REFERENCIA });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*, GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA, GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC, GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO, GB_ESPECIE_BENEFICIO.DS_ESPECIE, TB_TIPO_FOLHA.DS_TIPO_FOLHA FROM GB_FICHA_FINANC_ASSISTIDO INNER  JOIN GB_RECEBEDOR_BENEFICIO  ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR INNER  JOIN GB_RUBRICAS_PREVIDENCIAL  ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA=GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA INNER  JOIN GB_ESPECIE_BENEFICIO  ON GB_ESPECIE_BENEFICIO.CD_ESPECIE=GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE INNER  JOIN TB_TIPO_FOLHA  ON TB_TIPO_FOLHA.CD_TIPO_FOLHA=GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO=:CD_FUNDACAO AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO=:CD_FUNDACAO AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=:SEQ_RECEBEDOR AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO=:CD_PLANO AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA=:NUM_MATRICULA AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA='S' AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO='S' AND GB_FICHA_FINANC_ASSISTIDO.DT_REFERENCIA=:DT_REFERENCIA", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, SEQ_RECEBEDOR, CD_PLANO, DT_REFERENCIA });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaFinanceiraAssistidoEntidade> BuscarPorFundacaoEmpresaMatriculaPlanoReferenciaTipoFolha(string CD_FUNDACAO, string CD_EMPRESA, string NUM_MATRICULA, string CD_PLANO, DateTime DT_REFERENCIA, string CD_TIPO_FOLHA)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*,         GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA,         GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC,         GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO,         GB_ESPECIE_BENEFICIO.DS_ESPECIE,   	   TB_TIPO_FOLHA.DS_TIPO_FOLHA  FROM GB_FICHA_FINANC_ASSISTIDO  INNER JOIN GB_RECEBEDOR_BENEFICIO ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR  INNER JOIN GB_RUBRICAS_PREVIDENCIAL ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA = GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA  INNER JOIN GB_ESPECIE_BENEFICIO ON GB_ESPECIE_BENEFICIO.CD_ESPECIE = GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE   INNER JOIN TB_TIPO_FOLHA ON TB_TIPO_FOLHA.CD_TIPO_FOLHA = GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA  WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA = @CD_EMPRESA    AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO = @CD_PLANO    AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA = @NUM_MATRICULA    AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA = 'S'    AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO = 'S'    AND GB_FICHA_FINANC_ASSISTIDO.DT_REFERENCIA = @DT_REFERENCIA    AND GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA = @CD_TIPO_FOLHA", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, CD_PLANO, DT_REFERENCIA, CD_TIPO_FOLHA });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*, GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA, GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC, GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO, GB_ESPECIE_BENEFICIO.DS_ESPECIE, TB_TIPO_FOLHA.DS_TIPO_FOLHA FROM GB_FICHA_FINANC_ASSISTIDO INNER  JOIN GB_RECEBEDOR_BENEFICIO  ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR INNER  JOIN GB_RUBRICAS_PREVIDENCIAL  ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA=GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA INNER  JOIN GB_ESPECIE_BENEFICIO  ON GB_ESPECIE_BENEFICIO.CD_ESPECIE=GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE INNER  JOIN TB_TIPO_FOLHA  ON TB_TIPO_FOLHA.CD_TIPO_FOLHA=GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO=:CD_FUNDACAO AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO=:CD_FUNDACAO AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA=:CD_EMPRESA AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO=:CD_PLANO AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA=:NUM_MATRICULA AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA='S' AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO='S' AND GB_FICHA_FINANC_ASSISTIDO.DT_REFERENCIA=:DT_REFERENCIA AND GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA=:CD_TIPO_FOLHA", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, CD_PLANO, DT_REFERENCIA, CD_TIPO_FOLHA });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaFinanceiraAssistidoEntidade> BuscarPorFundacaoEmpresaMatriculaPlanoReferenciaTipoFolhaRecebedor(string CD_FUNDACAO, string CD_EMPRESA, string NUM_MATRICULA, int SEQ_RECEBEDOR, string CD_PLANO, DateTime DT_REFERENCIA, string CD_TIPO_FOLHA)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*,         GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA,         GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC,         GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO,         GB_ESPECIE_BENEFICIO.DS_ESPECIE,   	   TB_TIPO_FOLHA.DS_TIPO_FOLHA  FROM GB_FICHA_FINANC_ASSISTIDO  INNER JOIN GB_RECEBEDOR_BENEFICIO ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR  INNER JOIN GB_RUBRICAS_PREVIDENCIAL ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA = GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA  INNER JOIN GB_ESPECIE_BENEFICIO ON GB_ESPECIE_BENEFICIO.CD_ESPECIE = GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE   INNER JOIN TB_TIPO_FOLHA ON TB_TIPO_FOLHA.CD_TIPO_FOLHA = GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA  WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = @SEQ_RECEBEDOR    AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO = @CD_PLANO    AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA = @NUM_MATRICULA    AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA = 'S'    AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO = 'S'    AND GB_FICHA_FINANC_ASSISTIDO.DT_REFERENCIA = @DT_REFERENCIA    AND GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA = @CD_TIPO_FOLHA", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, SEQ_RECEBEDOR, CD_PLANO, DT_REFERENCIA, CD_TIPO_FOLHA });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*, GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA, GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC, GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO, GB_ESPECIE_BENEFICIO.DS_ESPECIE, TB_TIPO_FOLHA.DS_TIPO_FOLHA FROM GB_FICHA_FINANC_ASSISTIDO INNER  JOIN GB_RECEBEDOR_BENEFICIO  ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR INNER  JOIN GB_RUBRICAS_PREVIDENCIAL  ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA=GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA INNER  JOIN GB_ESPECIE_BENEFICIO  ON GB_ESPECIE_BENEFICIO.CD_ESPECIE=GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE INNER  JOIN TB_TIPO_FOLHA  ON TB_TIPO_FOLHA.CD_TIPO_FOLHA=GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO=:CD_FUNDACAO AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO=:CD_FUNDACAO AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=:SEQ_RECEBEDOR AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO=:CD_PLANO AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA=:NUM_MATRICULA AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA='S' AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO='S' AND GB_FICHA_FINANC_ASSISTIDO.DT_REFERENCIA=:DT_REFERENCIA AND GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA=:CD_TIPO_FOLHA", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, SEQ_RECEBEDOR, CD_PLANO, DT_REFERENCIA, CD_TIPO_FOLHA });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaFinanceiraAssistidoEntidade> BuscarResumo(string CD_FUNDACAO, string NUM_INSCRICAO)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT PL.DS_PLANO,          EB.DS_ESPECIE,         EB.CD_ESPECIE,         FF.DT_REFERENCIA,         TF.CD_TIPO_FOLHA,         TF.DS_TIPO_FOLHA,         FF.ANO_PROCESSO,         FF.NUM_PROCESSO,         SUM(CASE                  WHEN RP.RUBRICA_PROV_DESC = 'P' THEN FF.VALOR_MC                  ELSE 0              END) AS VAL_BRUTO,         SUM(CASE                  WHEN RP.RUBRICA_PROV_DESC = 'D' THEN FF.VALOR_MC                  ELSE 0              END) AS VAL_DESCONTOS,         SUM(CASE                  WHEN RP.RUBRICA_PROV_DESC = 'P' THEN FF.VALOR_MC                  ELSE FF.VALOR_MC * -1              END) AS VAL_LIQUIDO    FROM GB_FICHA_FINANC_ASSISTIDO FF         INNER JOIN GB_PROCESSOS_BENEFICIO PB ON              PB.CD_FUNDACAO  = FF.CD_FUNDACAO AND              PB.CD_EMPRESA   = FF.CD_EMPRESA AND              PB.CD_PLANO     = FF.CD_PLANO AND              PB.CD_ESPECIE   = FF.CD_ESPECIE AND              PB.NUM_PROCESSO = FF.NUM_PROCESSO AND               PB.ANO_PROCESSO = FF.ANO_PROCESSO          INNER JOIN TB_TIPO_FOLHA TF ON               TF.CD_TIPO_FOLHA = FF.CD_TIPO_FOLHA         INNER JOIN TB_PLANOS PL ON               PL.CD_FUNDACAO = FF.CD_FUNDACAO AND              PL.CD_PLANO = FF.CD_PLANO         INNER JOIN GB_ESPECIE_BENEFICIO EB ON              EB.CD_ESPECIE = FF.CD_ESPECIE         INNER JOIN GB_RUBRICAS_PREVIDENCIAL RP ON              RP.CD_RUBRICA = FF.CD_RUBRICA  WHERE PB.CD_FUNDACAO = @CD_FUNDACAO    AND PB.NUM_INSCRICAO = @NUM_INSCRICAO  GROUP BY PL.DS_PLANO,          EB.DS_ESPECIE,         EB.CD_ESPECIE,         FF.DT_REFERENCIA,         TF.CD_TIPO_FOLHA,         TF.DS_TIPO_FOLHA,         FF.ANO_PROCESSO,         FF.NUM_PROCESSO  ORDER BY PL.DS_PLANO,          EB.DS_ESPECIE,         FF.DT_REFERENCIA DESC,         TF.DS_TIPO_FOLHA,         FF.ANO_PROCESSO,         FF.NUM_PROCESSO", new { CD_FUNDACAO, NUM_INSCRICAO });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("", new { CD_FUNDACAO, NUM_INSCRICAO });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaFinanceiraAssistidoEntidade> BuscarResumoPorRecebedor(string CD_FUNDACAO, string NUM_INSCRICAO, int SEQ_RECEBEDOR)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT PL.DS_PLANO,          EB.DS_ESPECIE,         EB.CD_ESPECIE,         FF.DT_REFERENCIA,         TF.CD_TIPO_FOLHA,         TF.DS_TIPO_FOLHA,         FF.ANO_PROCESSO,         FF.NUM_PROCESSO,         SUM(CASE                  WHEN RP.RUBRICA_PROV_DESC = 'P' THEN FF.VALOR_MC                  ELSE 0              END) AS VAL_BRUTO,         SUM(CASE                  WHEN RP.RUBRICA_PROV_DESC = 'D' THEN FF.VALOR_MC                  ELSE 0              END) AS VAL_DESCONTOS,         SUM(CASE                  WHEN RP.RUBRICA_PROV_DESC = 'P' THEN FF.VALOR_MC                  ELSE FF.VALOR_MC * -1              END) AS VAL_LIQUIDO    FROM GB_FICHA_FINANC_ASSISTIDO FF         INNER JOIN GB_PROCESSOS_BENEFICIO PB ON              PB.CD_FUNDACAO  = FF.CD_FUNDACAO AND              PB.CD_EMPRESA   = FF.CD_EMPRESA AND              PB.CD_PLANO     = FF.CD_PLANO AND              PB.CD_ESPECIE   = FF.CD_ESPECIE AND              PB.NUM_PROCESSO = FF.NUM_PROCESSO AND               PB.ANO_PROCESSO = FF.ANO_PROCESSO          INNER JOIN TB_TIPO_FOLHA TF ON               TF.CD_TIPO_FOLHA = FF.CD_TIPO_FOLHA         INNER JOIN TB_PLANOS PL ON               PL.CD_FUNDACAO = FF.CD_FUNDACAO AND              PL.CD_PLANO = FF.CD_PLANO         INNER JOIN GB_ESPECIE_BENEFICIO EB ON              EB.CD_ESPECIE = FF.CD_ESPECIE         INNER JOIN GB_RUBRICAS_PREVIDENCIAL RP ON              RP.CD_RUBRICA = FF.CD_RUBRICA  WHERE PB.CD_FUNDACAO = @CD_FUNDACAO    AND PB.NUM_INSCRICAO = @NUM_INSCRICAO    AND FF.SEQ_RECEBEDOR = @SEQ_RECEBEDOR  GROUP BY PL.DS_PLANO,          EB.DS_ESPECIE,         EB.CD_ESPECIE,         FF.DT_REFERENCIA,         TF.CD_TIPO_FOLHA,         TF.DS_TIPO_FOLHA,         FF.ANO_PROCESSO,         FF.NUM_PROCESSO  ORDER BY PL.DS_PLANO,          EB.DS_ESPECIE,         FF.DT_REFERENCIA DESC,         TF.DS_TIPO_FOLHA,         FF.ANO_PROCESSO,         FF.NUM_PROCESSO", new { CD_FUNDACAO, NUM_INSCRICAO, SEQ_RECEBEDOR });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("", new { CD_FUNDACAO, NUM_INSCRICAO, SEQ_RECEBEDOR });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaFinanceiraAssistidoEntidade> BuscarUltima(string CD_FUNDACAO, string CD_EMPRESA, string NUM_MATRICULA, string CD_PLANO)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT FF.*  FROM GB_FICHA_FINANC_ASSISTIDO FF  INNER JOIN GB_RECEBEDOR_BENEFICIO RB ON FF.SEQ_RECEBEDOR = RB.SEQ_RECEBEDOR  WHERE FF.CD_FUNDACAO = @CD_FUNDACAO    AND RB.CD_FUNDACAO = @CD_FUNDACAO    AND FF.CD_EMPRESA = @CD_EMPRESA    AND RB.CD_EMPRESA = @CD_EMPRESA    AND FF.CD_PLANO = @CD_PLANO    AND RB.NUM_MATRICULA = @NUM_MATRICULA    AND FF.DT_REFERENCIA = (SELECT MAX(FF2.DT_REFERENCIA)  						FROM GB_FICHA_FINANC_ASSISTIDO FF2  						INNER JOIN GB_RECEBEDOR_BENEFICIO RB2 ON FF2.SEQ_RECEBEDOR = RB2.SEQ_RECEBEDOR  						WHERE FF2.CD_FUNDACAO = FF.CD_FUNDACAO  							AND RB2.CD_FUNDACAO = RB.CD_FUNDACAO  							AND FF2.CD_EMPRESA = FF.CD_EMPRESA  							AND RB2.CD_EMPRESA = RB.CD_EMPRESA  							AND FF2.CD_PLANO = FF.CD_PLANO  							AND RB2.NUM_MATRICULA = RB.NUM_MATRICULA)  ORDER BY DT_REFERENCIA DESC", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, CD_PLANO });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT FF.* FROM GB_FICHA_FINANC_ASSISTIDO  FF  INNER  JOIN GB_RECEBEDOR_BENEFICIO   RB  ON FF.SEQ_RECEBEDOR=RB.SEQ_RECEBEDOR WHERE FF.CD_FUNDACAO=:CD_FUNDACAO AND RB.CD_FUNDACAO=:CD_FUNDACAO AND FF.CD_EMPRESA=:CD_EMPRESA AND RB.CD_EMPRESA=:CD_EMPRESA AND FF.CD_PLANO=:CD_PLANO AND RB.NUM_MATRICULA=:NUM_MATRICULA AND FF.DT_REFERENCIA=(SELECT MAX(FF2.DT_REFERENCIA) FROM GB_FICHA_FINANC_ASSISTIDO  FF2  INNER  JOIN GB_RECEBEDOR_BENEFICIO   RB2  ON FF2.SEQ_RECEBEDOR=RB2.SEQ_RECEBEDOR WHERE FF2.CD_FUNDACAO=FF.CD_FUNDACAO AND RB2.CD_FUNDACAO=RB.CD_FUNDACAO AND FF2.CD_EMPRESA=FF.CD_EMPRESA AND RB2.CD_EMPRESA=RB.CD_EMPRESA AND FF2.CD_PLANO=FF.CD_PLANO AND RB2.NUM_MATRICULA=RB.NUM_MATRICULA) ORDER BY DT_REFERENCIA DESC", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, CD_PLANO });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual DateTime BuscarUltimaData(string CD_FUNDACAO, string CD_EMPRESA, string NUM_MATRICULA, string CD_PLANO)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.QuerySingleOrDefault<DateTime>("SELECT TOP 1 MAX(DT_REFERENCIA)  FROM GB_FICHA_FINANC_ASSISTIDO  INNER JOIN GB_RECEBEDOR_BENEFICIO ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR  WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA = @CD_EMPRESA    AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO = @CD_PLANO    AND NUM_MATRICULA = @NUM_MATRICULA  GROUP BY DT_REFERENCIA  ORDER BY DT_REFERENCIA DESC", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, CD_PLANO });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.QuerySingleOrDefault<DateTime>("SELECT MAX(DT_REFERENCIA) FROM GB_FICHA_FINANC_ASSISTIDO INNER  JOIN GB_RECEBEDOR_BENEFICIO  ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO=:CD_FUNDACAO AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO=:CD_FUNDACAO AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA=:CD_EMPRESA AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO=:CD_PLANO AND NUM_MATRICULA=:NUM_MATRICULA AND ROWNUM <= 1  GROUP BY DT_REFERENCIA ORDER BY DT_REFERENCIA DESC", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, CD_PLANO });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual DateTime BuscarUltimaDataPorRecebedor(string CD_FUNDACAO, string CD_EMPRESA, string NUM_MATRICULA, int SEQ_RECEBEDOR, string CD_PLANO)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.QuerySingleOrDefault<DateTime>("SELECT TOP 1 MAX(DT_REFERENCIA)  FROM GB_FICHA_FINANC_ASSISTIDO  INNER JOIN GB_RECEBEDOR_BENEFICIO ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR  WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = @SEQ_RECEBEDOR    AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO = @CD_PLANO    AND NUM_MATRICULA = @NUM_MATRICULA  GROUP BY DT_REFERENCIA  ORDER BY DT_REFERENCIA DESC", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, SEQ_RECEBEDOR, CD_PLANO });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.QuerySingleOrDefault<DateTime>("SELECT MAX(DT_REFERENCIA) FROM GB_FICHA_FINANC_ASSISTIDO INNER  JOIN GB_RECEBEDOR_BENEFICIO  ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO=:CD_FUNDACAO AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO=:CD_FUNDACAO AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=:SEQ_RECEBEDOR AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO=:CD_PLANO AND NUM_MATRICULA=:NUM_MATRICULA AND ROWNUM <= 1  GROUP BY DT_REFERENCIA ORDER BY DT_REFERENCIA DESC", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, SEQ_RECEBEDOR, CD_PLANO });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaFinanceiraAssistidoEntidade> BuscarUltimaPorProcesso(string CD_FUNDACAO, string CD_EMPRESA, string NUM_MATRICULA, string CD_PLANO, string CD_ESPECIE, string ANO_PROCESSO, string NUM_PROCESSO)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT FF.*  FROM GB_FICHA_FINANC_ASSISTIDO FF  INNER JOIN GB_RECEBEDOR_BENEFICIO RB ON FF.SEQ_RECEBEDOR = RB.SEQ_RECEBEDOR  WHERE FF.CD_FUNDACAO = @CD_FUNDACAO    AND RB.CD_FUNDACAO = @CD_FUNDACAO    AND FF.CD_EMPRESA = @CD_EMPRESA    AND RB.CD_EMPRESA = @CD_EMPRESA    AND FF.CD_PLANO = @CD_PLANO    AND FF.CD_ESPECIE = @CD_ESPECIE    AND FF.ANO_PROCESSO = @ANO_PROCESSO    AND FF.NUM_PROCESSO = @NUM_PROCESSO    AND RB.NUM_MATRICULA = @NUM_MATRICULA    AND FF.DT_REFERENCIA = (SELECT MAX(FF2.DT_REFERENCIA)  						FROM GB_FICHA_FINANC_ASSISTIDO FF2  						INNER JOIN GB_RECEBEDOR_BENEFICIO RB2 ON FF2.SEQ_RECEBEDOR = RB2.SEQ_RECEBEDOR  						WHERE FF2.CD_FUNDACAO = FF.CD_FUNDACAO  							AND RB2.CD_FUNDACAO = RB.CD_FUNDACAO  							AND FF2.CD_EMPRESA = FF.CD_EMPRESA  							AND RB2.CD_EMPRESA = RB.CD_EMPRESA  							AND FF2.CD_PLANO = FF.CD_PLANO                              AND FF2.CD_ESPECIE = FF.CD_ESPECIE                              AND FF2.ANO_PROCESSO = FF.ANO_PROCESSO                              AND FF2.NUM_PROCESSO = FF.NUM_PROCESSO  							AND RB2.NUM_MATRICULA = RB.NUM_MATRICULA)  ORDER BY DT_REFERENCIA DESC", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, CD_PLANO, CD_ESPECIE, ANO_PROCESSO, NUM_PROCESSO });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT FF.* FROM GB_FICHA_FINANC_ASSISTIDO  FF  INNER  JOIN GB_RECEBEDOR_BENEFICIO   RB  ON FF.SEQ_RECEBEDOR=RB.SEQ_RECEBEDOR WHERE FF.CD_FUNDACAO=:CD_FUNDACAO AND RB.CD_FUNDACAO=:CD_FUNDACAO AND FF.CD_EMPRESA=:CD_EMPRESA AND RB.CD_EMPRESA=:CD_EMPRESA AND FF.CD_PLANO=:CD_PLANO AND FF.CD_ESPECIE=:CD_ESPECIE AND FF.ANO_PROCESSO=:ANO_PROCESSO AND FF.NUM_PROCESSO=:NUM_PROCESSO AND RB.NUM_MATRICULA=:NUM_MATRICULA AND FF.DT_REFERENCIA=(SELECT MAX(FF2.DT_REFERENCIA) FROM GB_FICHA_FINANC_ASSISTIDO  FF2  INNER  JOIN GB_RECEBEDOR_BENEFICIO   RB2  ON FF2.SEQ_RECEBEDOR=RB2.SEQ_RECEBEDOR WHERE FF2.CD_FUNDACAO=FF.CD_FUNDACAO AND RB2.CD_FUNDACAO=RB.CD_FUNDACAO AND FF2.CD_EMPRESA=FF.CD_EMPRESA AND RB2.CD_EMPRESA=RB.CD_EMPRESA AND FF2.CD_PLANO=FF.CD_PLANO AND FF2.CD_ESPECIE=FF.CD_ESPECIE AND FF2.ANO_PROCESSO=FF.ANO_PROCESSO AND FF2.NUM_PROCESSO=FF.NUM_PROCESSO AND RB2.NUM_MATRICULA=RB.NUM_MATRICULA) ORDER BY DT_REFERENCIA DESC", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, CD_PLANO, CD_ESPECIE, ANO_PROCESSO, NUM_PROCESSO });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaFinanceiraAssistidoEntidade> BuscarUltimaPorProcessoRecebedor(string CD_FUNDACAO, string CD_EMPRESA, string NUM_MATRICULA, int SEQ_RECEBEDOR, string CD_PLANO, string CD_ESPECIE, string ANO_PROCESSO, string NUM_PROCESSO)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT FF.*  FROM GB_FICHA_FINANC_ASSISTIDO FF  INNER JOIN GB_RECEBEDOR_BENEFICIO RB ON FF.SEQ_RECEBEDOR = RB.SEQ_RECEBEDOR  WHERE FF.CD_FUNDACAO = @CD_FUNDACAO    AND RB.CD_FUNDACAO = @CD_FUNDACAO    AND FF.CD_EMPRESA = @CD_EMPRESA    AND RB.CD_EMPRESA = @CD_EMPRESA    AND FF.CD_PLANO = @CD_PLANO    AND FF.CD_ESPECIE = @CD_ESPECIE    AND FF.SEQ_RECEBEDOR = @SEQ_RECEBEDOR    AND FF.ANO_PROCESSO = @ANO_PROCESSO    AND FF.NUM_PROCESSO = @NUM_PROCESSO    AND RB.NUM_MATRICULA = @NUM_MATRICULA  AND DT_REFERENCIA = (SELECT MAX(DT_REFERENCIA)  						FROM GB_FICHA_FINANC_ASSISTIDO FF2  						INNER JOIN GB_RECEBEDOR_BENEFICIO RB2 ON FF2.SEQ_RECEBEDOR = RB2.SEQ_RECEBEDOR  						WHERE FF2.CD_FUNDACAO = FF.CD_FUNDACAO  							AND RB2.CD_FUNDACAO = RB.CD_FUNDACAO  							AND FF2.CD_EMPRESA = FF.CD_EMPRESA  							AND RB2.CD_EMPRESA = RB.CD_EMPRESA  							AND FF2.CD_PLANO = FF.CD_PLANO                              AND FF2.CD_ESPECIE = FF.CD_ESPECIE                              AND FF2.ANO_PROCESSO = FF.ANO_PROCESSO                              AND FF2.NUM_PROCESSO = FF.NUM_PROCESSO  							AND RB2.NUM_MATRICULA = RB.NUM_MATRICULA  							AND FF2.SEQ_RECEBEDOR = FF.SEQ_RECEBEDOR)  ORDER BY DT_REFERENCIA DESC", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, SEQ_RECEBEDOR, CD_PLANO, CD_ESPECIE, ANO_PROCESSO, NUM_PROCESSO });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT FF.* FROM GB_FICHA_FINANC_ASSISTIDO  FF  INNER  JOIN GB_RECEBEDOR_BENEFICIO   RB  ON FF.SEQ_RECEBEDOR=RB.SEQ_RECEBEDOR WHERE FF.CD_FUNDACAO=:CD_FUNDACAO AND RB.CD_FUNDACAO=:CD_FUNDACAO AND FF.CD_EMPRESA=:CD_EMPRESA AND RB.CD_EMPRESA=:CD_EMPRESA AND FF.CD_PLANO=:CD_PLANO AND FF.CD_ESPECIE=:CD_ESPECIE AND FF.SEQ_RECEBEDOR=:SEQ_RECEBEDOR AND FF.ANO_PROCESSO=:ANO_PROCESSO AND FF.NUM_PROCESSO=:NUM_PROCESSO AND RB.NUM_MATRICULA=:NUM_MATRICULA AND DT_REFERENCIA=(SELECT MAX(DT_REFERENCIA) FROM GB_FICHA_FINANC_ASSISTIDO  FF2  INNER  JOIN GB_RECEBEDOR_BENEFICIO   RB2  ON FF2.SEQ_RECEBEDOR=RB2.SEQ_RECEBEDOR WHERE FF2.CD_FUNDACAO=FF.CD_FUNDACAO AND RB2.CD_FUNDACAO=RB.CD_FUNDACAO AND FF2.CD_EMPRESA=FF.CD_EMPRESA AND RB2.CD_EMPRESA=RB.CD_EMPRESA AND FF2.CD_PLANO=FF.CD_PLANO AND FF2.CD_ESPECIE=FF.CD_ESPECIE AND FF2.ANO_PROCESSO=FF.ANO_PROCESSO AND FF2.NUM_PROCESSO=FF.NUM_PROCESSO AND RB2.NUM_MATRICULA=RB.NUM_MATRICULA AND FF2.SEQ_RECEBEDOR=FF.SEQ_RECEBEDOR) ORDER BY DT_REFERENCIA DESC", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, SEQ_RECEBEDOR, CD_PLANO, CD_ESPECIE, ANO_PROCESSO, NUM_PROCESSO });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaFinanceiraAssistidoEntidade> BuscarUltimaPorRecebedor(string CD_FUNDACAO, string CD_EMPRESA, string NUM_MATRICULA, int SEQ_RECEBEDOR, string CD_PLANO)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT FF.*  FROM GB_FICHA_FINANC_ASSISTIDO FF  INNER JOIN GB_RECEBEDOR_BENEFICIO RB ON FF.SEQ_RECEBEDOR = RB.SEQ_RECEBEDOR  WHERE FF.CD_FUNDACAO = @CD_FUNDACAO    AND RB.CD_FUNDACAO = @CD_FUNDACAO    AND FF.CD_EMPRESA = @CD_EMPRESA    AND RB.CD_EMPRESA = @CD_EMPRESA    AND FF.CD_PLANO = @CD_PLANO    AND RB.NUM_MATRICULA = @NUM_MATRICULA    AND FF.SEQ_RECEBEDOR = @SEQ_RECEBEDOR  AND DT_REFERENCIA = (SELECT MAX(DT_REFERENCIA)  						FROM GB_FICHA_FINANC_ASSISTIDO FF2  						INNER JOIN GB_RECEBEDOR_BENEFICIO RB2 ON FF2.SEQ_RECEBEDOR = RB2.SEQ_RECEBEDOR  						WHERE FF2.CD_FUNDACAO = FF.CD_FUNDACAO  							AND RB2.CD_FUNDACAO = RB.CD_FUNDACAO  							AND FF2.CD_EMPRESA = FF.CD_EMPRESA  							AND RB2.CD_EMPRESA = RB.CD_EMPRESA  							AND FF2.CD_PLANO = FF.CD_PLANO  							AND RB2.NUM_MATRICULA = RB.NUM_MATRICULA  							AND FF2.SEQ_RECEBEDOR = FF.SEQ_RECEBEDOR)  ORDER BY DT_REFERENCIA DESC", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, SEQ_RECEBEDOR, CD_PLANO });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT FF.* FROM GB_FICHA_FINANC_ASSISTIDO  FF  INNER  JOIN GB_RECEBEDOR_BENEFICIO   RB  ON FF.SEQ_RECEBEDOR=RB.SEQ_RECEBEDOR WHERE FF.CD_FUNDACAO=:CD_FUNDACAO AND RB.CD_FUNDACAO=:CD_FUNDACAO AND FF.CD_EMPRESA=:CD_EMPRESA AND RB.CD_EMPRESA=:CD_EMPRESA AND FF.CD_PLANO=:CD_PLANO AND RB.NUM_MATRICULA=:NUM_MATRICULA AND FF.SEQ_RECEBEDOR=:SEQ_RECEBEDOR AND DT_REFERENCIA=(SELECT MAX(DT_REFERENCIA) FROM GB_FICHA_FINANC_ASSISTIDO  FF2  INNER  JOIN GB_RECEBEDOR_BENEFICIO   RB2  ON FF2.SEQ_RECEBEDOR=RB2.SEQ_RECEBEDOR WHERE FF2.CD_FUNDACAO=FF.CD_FUNDACAO AND RB2.CD_FUNDACAO=RB.CD_FUNDACAO AND FF2.CD_EMPRESA=FF.CD_EMPRESA AND RB2.CD_EMPRESA=RB.CD_EMPRESA AND FF2.CD_PLANO=FF.CD_PLANO AND RB2.NUM_MATRICULA=RB.NUM_MATRICULA AND FF2.SEQ_RECEBEDOR=FF.SEQ_RECEBEDOR) ORDER BY DT_REFERENCIA DESC", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, SEQ_RECEBEDOR, CD_PLANO });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaFinanceiraAssistidoEntidade> Metrus_BuscarPorFundacaoEmpresaMatriculaPlanoReferenciaTipoFolha(string CD_FUNDACAO, string CD_EMPRESA, string NUM_MATRICULA, string CD_PLANO, DateTime DT_REFERENCIA, string CD_TIPO_FOLHA)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*,         GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA,         GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC,         GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO,         GB_ESPECIE_BENEFICIO.DS_ESPECIE,   	   TB_TIPO_FOLHA.DS_TIPO_FOLHA  FROM GB_FICHA_FINANC_ASSISTIDO  INNER JOIN GB_RECEBEDOR_BENEFICIO ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR  INNER JOIN GB_RUBRICAS_PREVIDENCIAL ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA = GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA  INNER JOIN GB_ESPECIE_BENEFICIO ON GB_ESPECIE_BENEFICIO.CD_ESPECIE = GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE   INNER JOIN TB_TIPO_FOLHA ON TB_TIPO_FOLHA.CD_TIPO_FOLHA = GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA  WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA = @CD_EMPRESA    AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO = @CD_PLANO    AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA = @NUM_MATRICULA    AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA = 'S'    AND GB_FICHA_FINANC_ASSISTIDO.DT_REFERENCIA = @DT_REFERENCIA    AND GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA = @CD_TIPO_FOLHA", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, CD_PLANO, DT_REFERENCIA, CD_TIPO_FOLHA });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*, GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA, GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC, GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO, GB_ESPECIE_BENEFICIO.DS_ESPECIE, TB_TIPO_FOLHA.DS_TIPO_FOLHA FROM GB_FICHA_FINANC_ASSISTIDO INNER  JOIN GB_RECEBEDOR_BENEFICIO  ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR INNER  JOIN GB_RUBRICAS_PREVIDENCIAL  ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA=GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA INNER  JOIN GB_ESPECIE_BENEFICIO  ON GB_ESPECIE_BENEFICIO.CD_ESPECIE=GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE INNER  JOIN TB_TIPO_FOLHA  ON TB_TIPO_FOLHA.CD_TIPO_FOLHA=GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO=:CD_FUNDACAO AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO=:CD_FUNDACAO AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA=:CD_EMPRESA AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO=:CD_PLANO AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA=:NUM_MATRICULA AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA='S' AND GB_FICHA_FINANC_ASSISTIDO.DT_REFERENCIA=:DT_REFERENCIA AND GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA=:CD_TIPO_FOLHA", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, CD_PLANO, DT_REFERENCIA, CD_TIPO_FOLHA });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaFinanceiraAssistidoEntidade> Metrus_BuscarPorFundacaoEmpresaMatriculaPlanoReferenciaTipoFolhaRecebedor(string CD_FUNDACAO, string CD_EMPRESA, string NUM_MATRICULA, int SEQ_RECEBEDOR, string CD_PLANO, DateTime DT_REFERENCIA, string CD_TIPO_FOLHA)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*,         GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA,         GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC,         GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO,         GB_ESPECIE_BENEFICIO.DS_ESPECIE,   	   TB_TIPO_FOLHA.DS_TIPO_FOLHA  FROM GB_FICHA_FINANC_ASSISTIDO  INNER JOIN GB_RECEBEDOR_BENEFICIO ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR  INNER JOIN GB_RUBRICAS_PREVIDENCIAL ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA = GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA  INNER JOIN GB_ESPECIE_BENEFICIO ON GB_ESPECIE_BENEFICIO.CD_ESPECIE = GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE   INNER JOIN TB_TIPO_FOLHA ON TB_TIPO_FOLHA.CD_TIPO_FOLHA = GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA  WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = @SEQ_RECEBEDOR    AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO = @CD_PLANO    AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA = @NUM_MATRICULA    AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA = 'S'    AND GB_FICHA_FINANC_ASSISTIDO.DT_REFERENCIA = @DT_REFERENCIA    AND GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA = @CD_TIPO_FOLHA", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, SEQ_RECEBEDOR, CD_PLANO, DT_REFERENCIA, CD_TIPO_FOLHA });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*, GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA, GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC, GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO, GB_ESPECIE_BENEFICIO.DS_ESPECIE, TB_TIPO_FOLHA.DS_TIPO_FOLHA FROM GB_FICHA_FINANC_ASSISTIDO INNER  JOIN GB_RECEBEDOR_BENEFICIO  ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR INNER  JOIN GB_RUBRICAS_PREVIDENCIAL  ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA=GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA INNER  JOIN GB_ESPECIE_BENEFICIO  ON GB_ESPECIE_BENEFICIO.CD_ESPECIE=GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE INNER  JOIN TB_TIPO_FOLHA  ON TB_TIPO_FOLHA.CD_TIPO_FOLHA=GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO=:CD_FUNDACAO AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO=:CD_FUNDACAO AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=:SEQ_RECEBEDOR AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO=:CD_PLANO AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA=:NUM_MATRICULA AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA='S' AND GB_FICHA_FINANC_ASSISTIDO.DT_REFERENCIA=:DT_REFERENCIA AND GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA=:CD_TIPO_FOLHA", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, SEQ_RECEBEDOR, CD_PLANO, DT_REFERENCIA, CD_TIPO_FOLHA });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

    }
}
