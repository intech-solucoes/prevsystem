using Dapper;
using Intech.Lib.Dapper;
using Intech.Lib.Web;
using Intech.PrevSystem.Entidades;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;

namespace Intech.PrevSystem.Dados.DAO
{
	public abstract class WebBloqueioFuncDAO : BaseDAO<WebBloqueioFuncEntidade>
	{
		public WebBloqueioFuncDAO (IDbTransaction tx = null) : base(tx) { }

		public virtual List<WebBloqueioFuncEntidade> BuscarJoinPlanoEmpresaEntidade()
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<WebBloqueioFuncEntidade>("SELECT BL.*,         FU.DES_FUNCIONALIDADE,         EE.SIGLA_ENTID,         PL.DS_PLANO         FROM WEB_BLOQUEIO_FUNC BL      INNER JOIN WEB_FUNCIONALIDADE FU ON BL.OID_FUNCIONALIDADE = FU.OID_FUNCIONALIDADE      LEFT OUTER JOIN TB_PLANOS PL ON PL.CD_FUNDACAO = BL.CD_FUNDACAO AND PL.CD_PLANO = BL.CD_PLANO      LEFT OUTER JOIN TB_EMPRESA EP ON EP.CD_FUNDACAO = BL.CD_FUNDACAO AND EP.CD_EMPRESA = BL.CD_EMPRESA      LEFT OUTER JOIN EE_ENTIDADE EE ON EE.COD_ENTID = EP.COD_ENTID  WHERE DTA_FIM IS NULL  ORDER BY FU.DES_FUNCIONALIDADE, DTA_INICIO DESC", new {  }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<WebBloqueioFuncEntidade>("SELECT BL.*, FU.DES_FUNCIONALIDADE, EE.SIGLA_ENTID, PL.DS_PLANO FROM WEB_BLOQUEIO_FUNC  BL  INNER  JOIN WEB_FUNCIONALIDADE   FU  ON BL.OID_FUNCIONALIDADE=FU.OID_FUNCIONALIDADE LEFT OUTER JOIN TB_PLANOS   PL  ON PL.CD_FUNDACAO=BL.CD_FUNDACAO AND PL.CD_PLANO=BL.CD_PLANO LEFT OUTER JOIN TB_EMPRESA   EP  ON EP.CD_FUNDACAO=BL.CD_FUNDACAO AND EP.CD_EMPRESA=BL.CD_EMPRESA LEFT OUTER JOIN EE_ENTIDADE   EE  ON EE.COD_ENTID=EP.COD_ENTID WHERE DTA_FIM IS NULL  ORDER BY FU.DES_FUNCIONALIDADE, DTA_INICIO DESC", new {  }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<WebBloqueioFuncEntidade> BuscarPorCdFundacaoNumFuncionalidadeCdEmpresaCdPlanoNumMatricula(string CD_FUNDACAO, decimal NUM_FUNCIONALIDADE, string CD_EMPRESA, string NUM_MATRICULA, string CD_PLANO, string CD_PLANO2, string CD_PLANO3, DateTime DTA_FIM)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<WebBloqueioFuncEntidade>("SELECT 1 AS NIVEL,         BL.*  FROM WEB_BLOQUEIO_FUNC BL      INNER JOIN WEB_FUNCIONALIDADE FU ON FU.OID_FUNCIONALIDADE = BL.OID_FUNCIONALIDADE  WHERE BL.CD_FUNDACAO        = @CD_FUNDACAO    AND FU.NUM_FUNCIONALIDADE = @NUM_FUNCIONALIDADE    AND (BL.DTA_FIM > @DTA_FIM OR BL.DTA_FIM IS NULL)    AND BL.CD_EMPRESA         = @CD_EMPRESA    AND BL.CD_PLANO           in (@CD_PLANO, @CD_PLANO2, @CD_PLANO3)     AND BL.NUM_MATRICULA      = @NUM_MATRICULA  UNION ALL    SELECT 2 AS NIVEL,         BL.*  FROM WEB_BLOQUEIO_FUNC BL      INNER JOIN WEB_FUNCIONALIDADE FU ON FU.OID_FUNCIONALIDADE = BL.OID_FUNCIONALIDADE  WHERE BL.CD_FUNDACAO        = @CD_FUNDACAO    AND FU.NUM_FUNCIONALIDADE = @NUM_FUNCIONALIDADE    AND (BL.DTA_FIM > @DTA_FIM OR BL.DTA_FIM IS NULL)    AND BL.CD_EMPRESA         = @CD_EMPRESA    AND BL.CD_PLANO           is null    AND BL.NUM_MATRICULA      = @NUM_MATRICULA  UNION ALL    SELECT 3 AS NIVEL,         BL.*  FROM WEB_BLOQUEIO_FUNC BL      INNER JOIN WEB_FUNCIONALIDADE FU ON FU.OID_FUNCIONALIDADE = BL.OID_FUNCIONALIDADE  WHERE BL.CD_FUNDACAO        = @CD_FUNDACAO    AND FU.NUM_FUNCIONALIDADE = @NUM_FUNCIONALIDADE    AND (BL.DTA_FIM > @DTA_FIM OR BL.DTA_FIM IS NULL)    AND BL.CD_EMPRESA         is null    AND BL.CD_PLANO           in (@CD_PLANO, @CD_PLANO2, @CD_PLANO3)    AND BL.NUM_MATRICULA      = @NUM_MATRICULA  UNION ALL    SELECT 4 AS NIVEL,         BL.*  FROM WEB_BLOQUEIO_FUNC BL      INNER JOIN WEB_FUNCIONALIDADE FU ON FU.OID_FUNCIONALIDADE = BL.OID_FUNCIONALIDADE  WHERE BL.CD_FUNDACAO        = @CD_FUNDACAO    AND FU.NUM_FUNCIONALIDADE = @NUM_FUNCIONALIDADE    AND (BL.DTA_FIM > @DTA_FIM OR BL.DTA_FIM IS NULL)    AND BL.CD_EMPRESA         is null    AND BL.CD_PLANO           is null    AND BL.NUM_MATRICULA      = @NUM_MATRICULA  UNION ALL    SELECT 5 AS NIVEL,         BL.*  FROM WEB_BLOQUEIO_FUNC BL      INNER JOIN WEB_FUNCIONALIDADE FU ON FU.OID_FUNCIONALIDADE = BL.OID_FUNCIONALIDADE  WHERE BL.CD_FUNDACAO        = @CD_FUNDACAO    AND FU.NUM_FUNCIONALIDADE = @NUM_FUNCIONALIDADE    AND (BL.DTA_FIM > @DTA_FIM OR BL.DTA_FIM IS NULL)    AND BL.CD_EMPRESA         = @CD_EMPRESA    AND BL.CD_PLANO           in (@CD_PLANO, @CD_PLANO2, @CD_PLANO3)    AND BL.NUM_MATRICULA      IS NULL  UNION ALL    SELECT 6 AS NIVEL,         BL.*  FROM WEB_BLOQUEIO_FUNC BL      INNER JOIN WEB_FUNCIONALIDADE FU ON FU.OID_FUNCIONALIDADE = BL.OID_FUNCIONALIDADE  WHERE BL.CD_FUNDACAO        = @CD_FUNDACAO    AND FU.NUM_FUNCIONALIDADE = @NUM_FUNCIONALIDADE    AND (BL.DTA_FIM > @DTA_FIM OR BL.DTA_FIM IS NULL)    AND BL.CD_EMPRESA         = @CD_EMPRESA    AND BL.CD_PLANO           IS NULL    AND BL.NUM_MATRICULA      IS NULL  UNION ALL    SELECT 7 AS NIVEL,         BL.*  FROM WEB_BLOQUEIO_FUNC BL      INNER JOIN WEB_FUNCIONALIDADE FU ON FU.OID_FUNCIONALIDADE = BL.OID_FUNCIONALIDADE  WHERE BL.CD_FUNDACAO        = @CD_FUNDACAO    AND FU.NUM_FUNCIONALIDADE = @NUM_FUNCIONALIDADE    AND (BL.DTA_FIM > @DTA_FIM OR BL.DTA_FIM IS NULL)    AND BL.CD_EMPRESA         IS NULL    AND BL.CD_PLANO           in (@CD_PLANO, @CD_PLANO2, @CD_PLANO3)    AND BL.NUM_MATRICULA      IS NULL  UNION ALL    SELECT 8 AS NIVEL,         BL.*  FROM WEB_BLOQUEIO_FUNC BL      INNER JOIN WEB_FUNCIONALIDADE FU ON FU.OID_FUNCIONALIDADE = BL.OID_FUNCIONALIDADE  WHERE BL.CD_FUNDACAO        = @CD_FUNDACAO    AND FU.NUM_FUNCIONALIDADE = @NUM_FUNCIONALIDADE    AND (BL.DTA_FIM > @DTA_FIM OR BL.DTA_FIM IS NULL)    AND BL.CD_EMPRESA         IS NULL    AND BL.CD_PLANO           IS NULL    AND BL.NUM_MATRICULA      IS NULL  ORDER BY NIVEL", new { CD_FUNDACAO, NUM_FUNCIONALIDADE, CD_EMPRESA, NUM_MATRICULA, CD_PLANO, CD_PLANO2, CD_PLANO3, DTA_FIM }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<WebBloqueioFuncEntidade>("SELECT 1 AS NIVEL, BL.* FROM WEB_BLOQUEIO_FUNC  BL  INNER  JOIN WEB_FUNCIONALIDADE   FU  ON FU.OID_FUNCIONALIDADE=BL.OID_FUNCIONALIDADE WHERE BL.CD_FUNDACAO=:CD_FUNDACAO AND FU.NUM_FUNCIONALIDADE=:NUM_FUNCIONALIDADE AND (BL.DTA_FIM>:DTA_FIM OR BL.DTA_FIM IS NULL ) AND BL.CD_EMPRESA=:CD_EMPRESA AND BL.CD_PLANO IN (:CD_PLANO, :CD_PLANO2, :CD_PLANO3) AND BL.NUM_MATRICULA=:NUM_MATRICULA UNION ALL SELECT 2 AS NIVEL, BL.* FROM WEB_BLOQUEIO_FUNC  BL  INNER  JOIN WEB_FUNCIONALIDADE   FU  ON FU.OID_FUNCIONALIDADE=BL.OID_FUNCIONALIDADE WHERE BL.CD_FUNDACAO=:CD_FUNDACAO AND FU.NUM_FUNCIONALIDADE=:NUM_FUNCIONALIDADE AND (BL.DTA_FIM>:DTA_FIM OR BL.DTA_FIM IS NULL ) AND BL.CD_EMPRESA=:CD_EMPRESA AND BL.CD_PLANO IS NULL  AND BL.NUM_MATRICULA=:NUM_MATRICULA UNION ALL SELECT 3 AS NIVEL, BL.* FROM WEB_BLOQUEIO_FUNC  BL  INNER  JOIN WEB_FUNCIONALIDADE   FU  ON FU.OID_FUNCIONALIDADE=BL.OID_FUNCIONALIDADE WHERE BL.CD_FUNDACAO=:CD_FUNDACAO AND FU.NUM_FUNCIONALIDADE=:NUM_FUNCIONALIDADE AND (BL.DTA_FIM>:DTA_FIM OR BL.DTA_FIM IS NULL ) AND BL.CD_EMPRESA IS NULL  AND BL.CD_PLANO IN (:CD_PLANO, :CD_PLANO2, :CD_PLANO3) AND BL.NUM_MATRICULA=:NUM_MATRICULA UNION ALL SELECT 4 AS NIVEL, BL.* FROM WEB_BLOQUEIO_FUNC  BL  INNER  JOIN WEB_FUNCIONALIDADE   FU  ON FU.OID_FUNCIONALIDADE=BL.OID_FUNCIONALIDADE WHERE BL.CD_FUNDACAO=:CD_FUNDACAO AND FU.NUM_FUNCIONALIDADE=:NUM_FUNCIONALIDADE AND (BL.DTA_FIM>:DTA_FIM OR BL.DTA_FIM IS NULL ) AND BL.CD_EMPRESA IS NULL  AND BL.CD_PLANO IS NULL  AND BL.NUM_MATRICULA=:NUM_MATRICULA UNION ALL SELECT 5 AS NIVEL, BL.* FROM WEB_BLOQUEIO_FUNC  BL  INNER  JOIN WEB_FUNCIONALIDADE   FU  ON FU.OID_FUNCIONALIDADE=BL.OID_FUNCIONALIDADE WHERE BL.CD_FUNDACAO=:CD_FUNDACAO AND FU.NUM_FUNCIONALIDADE=:NUM_FUNCIONALIDADE AND (BL.DTA_FIM>:DTA_FIM OR BL.DTA_FIM IS NULL ) AND BL.CD_EMPRESA=:CD_EMPRESA AND BL.CD_PLANO IN (:CD_PLANO, :CD_PLANO2, :CD_PLANO3) AND BL.NUM_MATRICULA IS NULL  UNION ALL SELECT 6 AS NIVEL, BL.* FROM WEB_BLOQUEIO_FUNC  BL  INNER  JOIN WEB_FUNCIONALIDADE   FU  ON FU.OID_FUNCIONALIDADE=BL.OID_FUNCIONALIDADE WHERE BL.CD_FUNDACAO=:CD_FUNDACAO AND FU.NUM_FUNCIONALIDADE=:NUM_FUNCIONALIDADE AND (BL.DTA_FIM>:DTA_FIM OR BL.DTA_FIM IS NULL ) AND BL.CD_EMPRESA=:CD_EMPRESA AND BL.CD_PLANO IS NULL  AND BL.NUM_MATRICULA IS NULL  UNION ALL SELECT 7 AS NIVEL, BL.* FROM WEB_BLOQUEIO_FUNC  BL  INNER  JOIN WEB_FUNCIONALIDADE   FU  ON FU.OID_FUNCIONALIDADE=BL.OID_FUNCIONALIDADE WHERE BL.CD_FUNDACAO=:CD_FUNDACAO AND FU.NUM_FUNCIONALIDADE=:NUM_FUNCIONALIDADE AND (BL.DTA_FIM>:DTA_FIM OR BL.DTA_FIM IS NULL ) AND BL.CD_EMPRESA IS NULL  AND BL.CD_PLANO IN (:CD_PLANO, :CD_PLANO2, :CD_PLANO3) AND BL.NUM_MATRICULA IS NULL  UNION ALL SELECT 8 AS NIVEL, BL.* FROM WEB_BLOQUEIO_FUNC  BL  INNER  JOIN WEB_FUNCIONALIDADE   FU  ON FU.OID_FUNCIONALIDADE=BL.OID_FUNCIONALIDADE WHERE BL.CD_FUNDACAO=:CD_FUNDACAO AND FU.NUM_FUNCIONALIDADE=:NUM_FUNCIONALIDADE AND (BL.DTA_FIM>:DTA_FIM OR BL.DTA_FIM IS NULL ) AND BL.CD_EMPRESA IS NULL  AND BL.CD_PLANO IS NULL  AND BL.NUM_MATRICULA IS NULL  ORDER BY NIVEL", new { CD_FUNDACAO, NUM_FUNCIONALIDADE, CD_EMPRESA, NUM_MATRICULA, CD_PLANO, CD_PLANO2, CD_PLANO3, DTA_FIM }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

	}
}
