#region Usings
using Dapper;
using Intech.Lib.Dapper;
using Intech.Lib.Web;
using Intech.PrevSystem.Entidades;
using Microsoft.Extensions.Configuration;
using System;
using System.Collections.Generic;
#endregion

namespace Intech.PrevSystem.Dados.DAO
{   
    public abstract class HeaderInfoRendDAO : BaseDAO<HeaderInfoRendEntidade>
    {
        
		public virtual IEnumerable<HeaderInfoRendEntidade> BuscarPorCPF(string CPF)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<HeaderInfoRendEntidade>("SELECT TB_HEADER_INFO_REND.*,     EE_ENTIDADE.NOME_ENTID AS NOM_EMPRESA,     EE_ENTIDADE.CPF_CGC    AS CNPJ_EMPRESA FROM   TB_HEADER_INFO_REND INNER JOIN TB_EMPRESA ON TB_HEADER_INFO_REND.CD_EMPRESA = TB_EMPRESA.CD_EMPRESA INNER JOIN TB_FUNDACAO ON TB_EMPRESA.CD_FUNDACAO = TB_FUNDACAO.CD_FUNDACAO INNER JOIN EE_ENTIDADE ON TB_FUNDACAO.COD_ENTID = EE_ENTIDADE.COD_ENTID WHERE TB_HEADER_INFO_REND.CPF = @CPF", new { CPF });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<HeaderInfoRendEntidade>("SELECT TB_HEADER_INFO_REND.*, EE_ENTIDADE.NOME_ENTID AS NOM_EMPRESA, EE_ENTIDADE.CPF_CGC AS CNPJ_EMPRESA FROM TB_HEADER_INFO_REND INNER  JOIN TB_EMPRESA  ON TB_HEADER_INFO_REND.CD_EMPRESA=TB_EMPRESA.CD_EMPRESA INNER  JOIN TB_FUNDACAO  ON TB_EMPRESA.CD_FUNDACAO=TB_FUNDACAO.CD_FUNDACAO INNER  JOIN EE_ENTIDADE  ON TB_FUNDACAO.COD_ENTID=EE_ENTIDADE.COD_ENTID WHERE TB_HEADER_INFO_REND.CPF=:CPF", new { CPF });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<HeaderInfoRendEntidade> BuscarPorCPFAnoCalendario(string CPF, decimal ANO_CALENDARIO)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<HeaderInfoRendEntidade>("SELECT TB_HEADER_INFO_REND.*,     EE_FUNC.NOME_ENTID AS NOME,     EE_ENTIDADE.NOME_ENTID AS NOM_EMPRESA,     EE_ENTIDADE.CPF_CGC    AS CNPJ_EMPRESA FROM   TB_HEADER_INFO_REND INNER JOIN TB_EMPRESA ON TB_HEADER_INFO_REND.CD_EMPRESA = TB_EMPRESA.CD_EMPRESA INNER JOIN TB_FUNDACAO ON TB_EMPRESA.CD_FUNDACAO = TB_FUNDACAO.CD_FUNDACAO INNER JOIN EE_ENTIDADE ON TB_FUNDACAO.COD_ENTID = EE_ENTIDADE.COD_ENTID INNER JOIN CS_FUNCIONARIO FUNC ON FUNC.NUM_MATRICULA = TB_HEADER_INFO_REND.NUM_MATRICULA INNER JOIN EE_ENTIDADE EE_FUNC ON EE_FUNC.COD_ENTID = FUNC.COD_ENTID WHERE TB_HEADER_INFO_REND.CPF = @CPF   AND TB_HEADER_INFO_REND.ANO_CALENDARIO = @ANO_CALENDARIO", new { CPF, ANO_CALENDARIO });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<HeaderInfoRendEntidade>("SELECT TB_HEADER_INFO_REND.*, EE_FUNC.NOME_ENTID AS NOME, EE_ENTIDADE.NOME_ENTID AS NOM_EMPRESA, EE_ENTIDADE.CPF_CGC AS CNPJ_EMPRESA FROM TB_HEADER_INFO_REND INNER  JOIN TB_EMPRESA  ON TB_HEADER_INFO_REND.CD_EMPRESA=TB_EMPRESA.CD_EMPRESA INNER  JOIN TB_FUNDACAO  ON TB_EMPRESA.CD_FUNDACAO=TB_FUNDACAO.CD_FUNDACAO INNER  JOIN EE_ENTIDADE  ON TB_FUNDACAO.COD_ENTID=EE_ENTIDADE.COD_ENTID INNER  JOIN CS_FUNCIONARIO   FUNC  ON FUNC.NUM_MATRICULA=TB_HEADER_INFO_REND.NUM_MATRICULA INNER  JOIN EE_ENTIDADE   EE_FUNC  ON EE_FUNC.COD_ENTID=FUNC.COD_ENTID WHERE TB_HEADER_INFO_REND.CPF=:CPF AND TB_HEADER_INFO_REND.ANO_CALENDARIO=:ANO_CALENDARIO", new { CPF, ANO_CALENDARIO });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

    }
}
