#region Usings
using Dapper;
using Intech.Lib.Dapper;
using Intech.Lib.Web;
using Intech.PrevSystem.Entidades;
using Microsoft.Extensions.Configuration;
using System;
using System.Collections.Generic;
#endregion

namespace Intech.PrevSystem.Dados.DAO
{   
    public abstract class FichaFinanceiraAssistidoDAO : BaseDAO<FichaFinanceiraAssistidoEntidade>
    {
        
		public virtual IEnumerable<FichaFinanceiraAssistidoEntidade> BuscarDatas(string CD_FUNDACAO, string CD_EMPRESA, string NUM_MATRICULA, string CD_PLANO)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT DISTINCT DT_REFERENCIA,       GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA,   	DS_TIPO_FOLHA,  	GB_ESPECIE_BENEFICIO.CD_ESPECIE,  	GB_ESPECIE_BENEFICIO.DS_ESPECIE  FROM GB_FICHA_FINANC_ASSISTIDO  INNER JOIN GB_RECEBEDOR_BENEFICIO ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR  INNER JOIN TB_TIPO_FOLHA TF ON TF.CD_TIPO_FOLHA = GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA  INNER JOIN GB_ESPECIE_BENEFICIO ON GB_ESPECIE_BENEFICIO.CD_ESPECIE = GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE  WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA = @CD_EMPRESA    AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO = @CD_PLANO    AND NUM_MATRICULA = @NUM_MATRICULA    AND GB_RECEBEDOR_BENEFICIO.CD_TIPO_RECEBEDOR = 'A'  GROUP BY       DT_REFERENCIA,       DT_COMPETENCIA,       GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA,       DS_TIPO_FOLHA,  	GB_ESPECIE_BENEFICIO.CD_ESPECIE,  	GB_ESPECIE_BENEFICIO.DS_ESPECIE  ORDER BY DT_REFERENCIA DESC", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, CD_PLANO });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT DISTINCT DT_REFERENCIA, GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA, DS_TIPO_FOLHA, GB_ESPECIE_BENEFICIO.CD_ESPECIE, GB_ESPECIE_BENEFICIO.DS_ESPECIE FROM GB_FICHA_FINANC_ASSISTIDO INNER  JOIN GB_RECEBEDOR_BENEFICIO  ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR INNER  JOIN TB_TIPO_FOLHA   TF  ON TF.CD_TIPO_FOLHA=GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA INNER  JOIN GB_ESPECIE_BENEFICIO  ON GB_ESPECIE_BENEFICIO.CD_ESPECIE=GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO=:CD_FUNDACAO AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO=:CD_FUNDACAO AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA=:CD_EMPRESA AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO=:CD_PLANO AND NUM_MATRICULA=:NUM_MATRICULA AND GB_RECEBEDOR_BENEFICIO.CD_TIPO_RECEBEDOR='A' GROUP BY DT_REFERENCIA, DT_COMPETENCIA, GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA, DS_TIPO_FOLHA, GB_ESPECIE_BENEFICIO.CD_ESPECIE, GB_ESPECIE_BENEFICIO.DS_ESPECIE ORDER BY DT_REFERENCIA DESC", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, CD_PLANO });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaFinanceiraAssistidoEntidade> BuscarDatasPorRecebedor(string CD_FUNDACAO, string CD_EMPRESA, string NUM_MATRICULA, int SEQ_RECEBEDOR, string CD_PLANO)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT       DT_REFERENCIA,      DT_COMPETENCIA,       GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA,   	DS_TIPO_FOLHA,  	GB_ESPECIE_BENEFICIO.CD_ESPECIE,  	GB_ESPECIE_BENEFICIO.DS_ESPECIE  FROM GB_FICHA_FINANC_ASSISTIDO  INNER JOIN GB_RECEBEDOR_BENEFICIO ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR  INNER JOIN TB_TIPO_FOLHA TF ON TF.CD_TIPO_FOLHA = GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA  INNER JOIN GB_ESPECIE_BENEFICIO ON GB_ESPECIE_BENEFICIO.CD_ESPECIE = GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE  WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = @SEQ_RECEBEDOR    AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO = @CD_PLANO    AND NUM_MATRICULA = @NUM_MATRICULA  GROUP BY       DT_REFERENCIA,       DT_COMPETENCIA,       GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA,       DS_TIPO_FOLHA,  	GB_ESPECIE_BENEFICIO.CD_ESPECIE,  	GB_ESPECIE_BENEFICIO.DS_ESPECIE  ORDER BY DT_REFERENCIA DESC", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, SEQ_RECEBEDOR, CD_PLANO });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT DT_REFERENCIA, DT_COMPETENCIA, GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA, DS_TIPO_FOLHA, GB_ESPECIE_BENEFICIO.CD_ESPECIE, GB_ESPECIE_BENEFICIO.DS_ESPECIE FROM GB_FICHA_FINANC_ASSISTIDO INNER  JOIN GB_RECEBEDOR_BENEFICIO  ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR INNER  JOIN TB_TIPO_FOLHA   TF  ON TF.CD_TIPO_FOLHA=GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA INNER  JOIN GB_ESPECIE_BENEFICIO  ON GB_ESPECIE_BENEFICIO.CD_ESPECIE=GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO=:CD_FUNDACAO AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO=:CD_FUNDACAO AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=:SEQ_RECEBEDOR AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO=:CD_PLANO AND NUM_MATRICULA=:NUM_MATRICULA GROUP BY DT_REFERENCIA, DT_COMPETENCIA, GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA, DS_TIPO_FOLHA, GB_ESPECIE_BENEFICIO.CD_ESPECIE, GB_ESPECIE_BENEFICIO.DS_ESPECIE ORDER BY DT_REFERENCIA DESC", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, SEQ_RECEBEDOR, CD_PLANO });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaFinanceiraAssistidoEntidade> BuscarPorFundacaoEmpresaMatriculaPlano(string CD_FUNDACAO, string CD_EMPRESA, string NUM_MATRICULA, string CD_PLANO)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*,         GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA,         GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC,         GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO,         GB_ESPECIE_BENEFICIO.DS_ESPECIE  FROM GB_FICHA_FINANC_ASSISTIDO  INNER JOIN GB_RECEBEDOR_BENEFICIO ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR  INNER JOIN GB_RUBRICAS_PREVIDENCIAL ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA = GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA  INNER JOIN GB_ESPECIE_BENEFICIO ON GB_ESPECIE_BENEFICIO.CD_ESPECIE = GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE   WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA = @CD_EMPRESA    AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO = @CD_PLANO    AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA = @NUM_MATRICULA    AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA = 'S'    AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO = 'S'", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, CD_PLANO });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*, GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA, GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC, GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO, GB_ESPECIE_BENEFICIO.DS_ESPECIE FROM GB_FICHA_FINANC_ASSISTIDO INNER  JOIN GB_RECEBEDOR_BENEFICIO  ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR INNER  JOIN GB_RUBRICAS_PREVIDENCIAL  ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA=GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA INNER  JOIN GB_ESPECIE_BENEFICIO  ON GB_ESPECIE_BENEFICIO.CD_ESPECIE=GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO=:CD_FUNDACAO AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO=:CD_FUNDACAO AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA=:CD_EMPRESA AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO=:CD_PLANO AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA=:NUM_MATRICULA AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA='S' AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO='S'", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, CD_PLANO });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaFinanceiraAssistidoEntidade> BuscarPorFundacaoEmpresaMatriculaPlanoCompetencia(string CD_FUNDACAO, string CD_EMPRESA, string NUM_MATRICULA, string CD_PLANO, DateTime DT_COMPETENCIA, string CD_TIPO_FOLHA)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*,         GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA,         GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC,         GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO,         GB_ESPECIE_BENEFICIO.DS_ESPECIE  FROM GB_FICHA_FINANC_ASSISTIDO  INNER JOIN GB_RECEBEDOR_BENEFICIO ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR  INNER JOIN GB_RUBRICAS_PREVIDENCIAL ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA = GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA  INNER JOIN GB_ESPECIE_BENEFICIO ON GB_ESPECIE_BENEFICIO.CD_ESPECIE = GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE   WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA = @CD_EMPRESA    AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO = @CD_PLANO    AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA = @NUM_MATRICULA    AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA = 'S'    AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO = 'S'    AND GB_FICHA_FINANC_ASSISTIDO.DT_COMPETENCIA = @DT_COMPETENCIA    AND GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA = @CD_TIPO_FOLHA", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, CD_PLANO, DT_COMPETENCIA, CD_TIPO_FOLHA });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*, GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA, GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC, GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO, GB_ESPECIE_BENEFICIO.DS_ESPECIE FROM GB_FICHA_FINANC_ASSISTIDO INNER  JOIN GB_RECEBEDOR_BENEFICIO  ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR INNER  JOIN GB_RUBRICAS_PREVIDENCIAL  ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA=GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA INNER  JOIN GB_ESPECIE_BENEFICIO  ON GB_ESPECIE_BENEFICIO.CD_ESPECIE=GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO=:CD_FUNDACAO AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO=:CD_FUNDACAO AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA=:CD_EMPRESA AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO=:CD_PLANO AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA=:NUM_MATRICULA AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA='S' AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO='S' AND GB_FICHA_FINANC_ASSISTIDO.DT_COMPETENCIA=:DT_COMPETENCIA AND GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA=:CD_TIPO_FOLHA", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, CD_PLANO, DT_COMPETENCIA, CD_TIPO_FOLHA });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaFinanceiraAssistidoEntidade> BuscarPorFundacaoEmpresaMatriculaPlanoCompetenciaRecebedor(string CD_FUNDACAO, string CD_EMPRESA, string NUM_MATRICULA, int SEQ_RECEBEDOR, string CD_PLANO, DateTime DT_COMPETENCIA, string CD_TIPO_FOLHA)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*,         GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA,         GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC,         GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO,         GB_ESPECIE_BENEFICIO.DS_ESPECIE  FROM GB_FICHA_FINANC_ASSISTIDO  INNER JOIN GB_RECEBEDOR_BENEFICIO ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR  INNER JOIN GB_RUBRICAS_PREVIDENCIAL ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA = GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA  INNER JOIN GB_ESPECIE_BENEFICIO ON GB_ESPECIE_BENEFICIO.CD_ESPECIE = GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE   WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = @SEQ_RECEBEDOR    AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO = @CD_PLANO    AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA = @NUM_MATRICULA    AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA = 'S'    AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO = 'S'    AND GB_FICHA_FINANC_ASSISTIDO.DT_COMPETENCIA = @DT_COMPETENCIA    AND GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA = @CD_TIPO_FOLHA", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, SEQ_RECEBEDOR, CD_PLANO, DT_COMPETENCIA, CD_TIPO_FOLHA });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*, GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA, GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC, GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO, GB_ESPECIE_BENEFICIO.DS_ESPECIE FROM GB_FICHA_FINANC_ASSISTIDO INNER  JOIN GB_RECEBEDOR_BENEFICIO  ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR INNER  JOIN GB_RUBRICAS_PREVIDENCIAL  ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA=GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA INNER  JOIN GB_ESPECIE_BENEFICIO  ON GB_ESPECIE_BENEFICIO.CD_ESPECIE=GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO=:CD_FUNDACAO AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO=:CD_FUNDACAO AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=:SEQ_RECEBEDOR AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO=:CD_PLANO AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA=:NUM_MATRICULA AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA='S' AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO='S' AND GB_FICHA_FINANC_ASSISTIDO.DT_COMPETENCIA=:DT_COMPETENCIA AND GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA=:CD_TIPO_FOLHA", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, SEQ_RECEBEDOR, CD_PLANO, DT_COMPETENCIA, CD_TIPO_FOLHA });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaFinanceiraAssistidoEntidade> BuscarPorFundacaoEmpresaMatriculaPlanoRecebedor(string CD_FUNDACAO, string CD_EMPRESA, string NUM_MATRICULA, int SEQ_RECEBEDOR, string CD_PLANO)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*,         GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA,         GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC,         GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO,         GB_ESPECIE_BENEFICIO.DS_ESPECIE  FROM GB_FICHA_FINANC_ASSISTIDO  INNER JOIN GB_RECEBEDOR_BENEFICIO ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR  INNER JOIN GB_RUBRICAS_PREVIDENCIAL ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA = GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA  INNER JOIN GB_ESPECIE_BENEFICIO ON GB_ESPECIE_BENEFICIO.CD_ESPECIE = GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE   WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = @SEQ_RECEBEDOR    AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO = @CD_PLANO    AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA = @NUM_MATRICULA    AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA = 'S'    AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO = 'S'", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, SEQ_RECEBEDOR, CD_PLANO });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*, GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA, GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC, GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO, GB_ESPECIE_BENEFICIO.DS_ESPECIE FROM GB_FICHA_FINANC_ASSISTIDO INNER  JOIN GB_RECEBEDOR_BENEFICIO  ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR INNER  JOIN GB_RUBRICAS_PREVIDENCIAL  ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA=GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA INNER  JOIN GB_ESPECIE_BENEFICIO  ON GB_ESPECIE_BENEFICIO.CD_ESPECIE=GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO=:CD_FUNDACAO AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO=:CD_FUNDACAO AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=:SEQ_RECEBEDOR AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO=:CD_PLANO AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA=:NUM_MATRICULA AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA='S' AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO='S'", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, SEQ_RECEBEDOR, CD_PLANO });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaFinanceiraAssistidoEntidade> BuscarPorFundacaoEmpresaMatriculaPlanoReferencia(string CD_FUNDACAO, string CD_EMPRESA, string NUM_MATRICULA, string CD_PLANO, DateTime DT_REFERENCIA, string CD_TIPO_FOLHA)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*,         GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA,         GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC,         GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO,         GB_ESPECIE_BENEFICIO.DS_ESPECIE,   	   TB_TIPO_FOLHA.DS_TIPO_FOLHA  FROM GB_FICHA_FINANC_ASSISTIDO  INNER JOIN GB_RECEBEDOR_BENEFICIO ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR  INNER JOIN GB_RUBRICAS_PREVIDENCIAL ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA = GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA  INNER JOIN GB_ESPECIE_BENEFICIO ON GB_ESPECIE_BENEFICIO.CD_ESPECIE = GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE   INNER JOIN TB_TIPO_FOLHA ON TB_TIPO_FOLHA.CD_TIPO_FOLHA = GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA  WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA = @CD_EMPRESA    AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO = @CD_PLANO    AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA = @NUM_MATRICULA    AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA = 'S'    AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO = 'S'    AND GB_FICHA_FINANC_ASSISTIDO.DT_REFERENCIA = @DT_REFERENCIA    AND GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA = @CD_TIPO_FOLHA", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, CD_PLANO, DT_REFERENCIA, CD_TIPO_FOLHA });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*, GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA, GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC, GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO, GB_ESPECIE_BENEFICIO.DS_ESPECIE, TB_TIPO_FOLHA.DS_TIPO_FOLHA FROM GB_FICHA_FINANC_ASSISTIDO INNER  JOIN GB_RECEBEDOR_BENEFICIO  ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR INNER  JOIN GB_RUBRICAS_PREVIDENCIAL  ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA=GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA INNER  JOIN GB_ESPECIE_BENEFICIO  ON GB_ESPECIE_BENEFICIO.CD_ESPECIE=GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE INNER  JOIN TB_TIPO_FOLHA  ON TB_TIPO_FOLHA.CD_TIPO_FOLHA=GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO=:CD_FUNDACAO AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO=:CD_FUNDACAO AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA=:CD_EMPRESA AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO=:CD_PLANO AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA=:NUM_MATRICULA AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA='S' AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO='S' AND GB_FICHA_FINANC_ASSISTIDO.DT_REFERENCIA=:DT_REFERENCIA AND GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA=:CD_TIPO_FOLHA", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, CD_PLANO, DT_REFERENCIA, CD_TIPO_FOLHA });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual IEnumerable<FichaFinanceiraAssistidoEntidade> BuscarPorFundacaoEmpresaMatriculaPlanoReferenciaRecebedor(string CD_FUNDACAO, string CD_EMPRESA, string NUM_MATRICULA, int SEQ_RECEBEDOR, string CD_PLANO, DateTime DT_REFERENCIA, string CD_TIPO_FOLHA)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*,         GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA,         GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC,         GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO,         GB_ESPECIE_BENEFICIO.DS_ESPECIE,   	   TB_TIPO_FOLHA.DS_TIPO_FOLHA  FROM GB_FICHA_FINANC_ASSISTIDO  INNER JOIN GB_RECEBEDOR_BENEFICIO ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR  INNER JOIN GB_RUBRICAS_PREVIDENCIAL ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA = GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA  INNER JOIN GB_ESPECIE_BENEFICIO ON GB_ESPECIE_BENEFICIO.CD_ESPECIE = GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE   INNER JOIN TB_TIPO_FOLHA ON TB_TIPO_FOLHA.CD_TIPO_FOLHA = GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA  WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = @SEQ_RECEBEDOR    AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO = @CD_PLANO    AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA = @NUM_MATRICULA    AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA = 'S'    AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO = 'S'    AND GB_FICHA_FINANC_ASSISTIDO.DT_REFERENCIA = @DT_REFERENCIA    AND GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA = @CD_TIPO_FOLHA", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, SEQ_RECEBEDOR, CD_PLANO, DT_REFERENCIA, CD_TIPO_FOLHA });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraAssistidoEntidade>("SELECT GB_FICHA_FINANC_ASSISTIDO.*, GB_RUBRICAS_PREVIDENCIAL.DS_RUBRICA, GB_RUBRICAS_PREVIDENCIAL.RUBRICA_PROV_DESC, GB_RUBRICAS_PREVIDENCIAL.ID_RUB_SUPLEMENTACAO, GB_ESPECIE_BENEFICIO.DS_ESPECIE, TB_TIPO_FOLHA.DS_TIPO_FOLHA FROM GB_FICHA_FINANC_ASSISTIDO INNER  JOIN GB_RECEBEDOR_BENEFICIO  ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR INNER  JOIN GB_RUBRICAS_PREVIDENCIAL  ON GB_RUBRICAS_PREVIDENCIAL.CD_RUBRICA=GB_FICHA_FINANC_ASSISTIDO.CD_RUBRICA INNER  JOIN GB_ESPECIE_BENEFICIO  ON GB_ESPECIE_BENEFICIO.CD_ESPECIE=GB_FICHA_FINANC_ASSISTIDO.CD_ESPECIE INNER  JOIN TB_TIPO_FOLHA  ON TB_TIPO_FOLHA.CD_TIPO_FOLHA=GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO=:CD_FUNDACAO AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO=:CD_FUNDACAO AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=:SEQ_RECEBEDOR AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO=:CD_PLANO AND GB_RECEBEDOR_BENEFICIO.NUM_MATRICULA=:NUM_MATRICULA AND GB_RUBRICAS_PREVIDENCIAL.EMITE_FOLHA='S' AND GB_RUBRICAS_PREVIDENCIAL.INCID_LIQUIDO='S' AND GB_FICHA_FINANC_ASSISTIDO.DT_REFERENCIA=:DT_REFERENCIA AND GB_FICHA_FINANC_ASSISTIDO.CD_TIPO_FOLHA=:CD_TIPO_FOLHA", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, SEQ_RECEBEDOR, CD_PLANO, DT_REFERENCIA, CD_TIPO_FOLHA });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual DateTime BuscarUltimaData(string CD_FUNDACAO, string CD_EMPRESA, string NUM_MATRICULA, string CD_PLANO)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.QuerySingleOrDefault<DateTime>("SELECT TOP 1 MAX(DT_REFERENCIA)  FROM GB_FICHA_FINANC_ASSISTIDO  INNER JOIN GB_RECEBEDOR_BENEFICIO ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR  WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA = @CD_EMPRESA    AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO = @CD_PLANO    AND CD_TIPO_FOLHA = '1'    AND NUM_MATRICULA = @NUM_MATRICULA  GROUP BY DT_REFERENCIA  ORDER BY DT_REFERENCIA DESC", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, CD_PLANO });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.QuerySingleOrDefault<DateTime>("SELECT MAX(DT_REFERENCIA) FROM GB_FICHA_FINANC_ASSISTIDO INNER  JOIN GB_RECEBEDOR_BENEFICIO  ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO=:CD_FUNDACAO AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO=:CD_FUNDACAO AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA=:CD_EMPRESA AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO=:CD_PLANO AND CD_TIPO_FOLHA='1' AND NUM_MATRICULA=:NUM_MATRICULA AND ROWNUM <= 1  GROUP BY DT_REFERENCIA ORDER BY DT_REFERENCIA DESC", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, CD_PLANO });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

		public virtual DateTime BuscarUltimaDataPorRecebedor(string CD_FUNDACAO, string CD_EMPRESA, string NUM_MATRICULA, int SEQ_RECEBEDOR, string CD_PLANO)
		{
			try
			{
				if(AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.QuerySingleOrDefault<DateTime>("SELECT TOP 1 MAX(DT_REFERENCIA)  FROM GB_FICHA_FINANC_ASSISTIDO  INNER JOIN GB_RECEBEDOR_BENEFICIO ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR  WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO = @CD_FUNDACAO    AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR = @SEQ_RECEBEDOR    AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA = @CD_EMPRESA    AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO = @CD_PLANO    AND NUM_MATRICULA = @NUM_MATRICULA  GROUP BY DT_REFERENCIA  ORDER BY DT_REFERENCIA DESC", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, SEQ_RECEBEDOR, CD_PLANO });
				else if(AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.QuerySingleOrDefault<DateTime>("SELECT MAX(DT_REFERENCIA) FROM GB_FICHA_FINANC_ASSISTIDO INNER  JOIN GB_RECEBEDOR_BENEFICIO  ON GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=GB_RECEBEDOR_BENEFICIO.SEQ_RECEBEDOR WHERE GB_FICHA_FINANC_ASSISTIDO.CD_FUNDACAO=:CD_FUNDACAO AND GB_RECEBEDOR_BENEFICIO.CD_FUNDACAO=:CD_FUNDACAO AND GB_FICHA_FINANC_ASSISTIDO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.SEQ_RECEBEDOR=:SEQ_RECEBEDOR AND GB_RECEBEDOR_BENEFICIO.CD_EMPRESA=:CD_EMPRESA AND GB_FICHA_FINANC_ASSISTIDO.CD_PLANO=:CD_PLANO AND NUM_MATRICULA=:NUM_MATRICULA AND ROWNUM <= 1  GROUP BY DT_REFERENCIA ORDER BY DT_REFERENCIA DESC", new { CD_FUNDACAO, CD_EMPRESA, NUM_MATRICULA, SEQ_RECEBEDOR, CD_PLANO });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				Conexao.Close();
			}
		}

    }
}
