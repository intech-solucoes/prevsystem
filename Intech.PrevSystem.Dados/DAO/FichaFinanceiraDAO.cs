using Dapper;
using Intech.Lib.Dapper;
using Intech.Lib.Web;
using Intech.PrevSystem.Entidades;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;

namespace Intech.PrevSystem.Dados.DAO
{
	public abstract class FichaFinanceiraDAO : BaseDAO<FichaFinanceiraEntidade>
	{
		public FichaFinanceiraDAO (IDbTransaction tx = null) : base(tx) { }

		public virtual List<FichaFinanceiraEntidade> BuscarContribuicaoPorFundacaoInscricaoPlano(string CD_FUNDACAO, string NUM_INSCRICAO, string CD_PLANO)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT TC.DS_TIPO_CONTRIBUICAO,         FF.*  FROM CC_FICHA_FINANCEIRA FF      INNER JOIN TB_TIPO_CONTRIBUICAO TC ON TC.CD_TIPO_CONTRIBUICAO = FF.CD_TIPO_CONTRIBUICAO  WHERE FF.CD_FUNDACAO = @CD_FUNDACAO    AND FF.NUM_INSCRICAO = @NUM_INSCRICAO    AND FF.CD_PLANO = @CD_PLANO    AND FF.ANO_COMP * 13 + FF.MES_COMP = (SELECT MAX(FF2.ANO_COMP * 13 + FF2.MES_COMP)                                           FROM CC_FICHA_FINANCEIRA FF2                                          WHERE FF2.CD_FUNDACAO = FF.CD_FUNDACAO                                            AND FF2.NUM_INSCRICAO = FF.NUM_INSCRICAO                                            AND FF2.CD_PLANO = FF.CD_PLANO  										  AND FF2.MES_COMP <> 13)  ORDER BY FF.CD_TIPO_CONTRIBUICAO", new { CD_FUNDACAO, NUM_INSCRICAO, CD_PLANO }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT TC.DS_TIPO_CONTRIBUICAO, FF.* FROM CC_FICHA_FINANCEIRA  FF  INNER  JOIN TB_TIPO_CONTRIBUICAO   TC  ON TC.CD_TIPO_CONTRIBUICAO=FF.CD_TIPO_CONTRIBUICAO WHERE FF.CD_FUNDACAO=:CD_FUNDACAO AND FF.NUM_INSCRICAO=:NUM_INSCRICAO AND FF.CD_PLANO=:CD_PLANO AND FF.ANO_COMP*", new { CD_FUNDACAO, NUM_INSCRICAO, CD_PLANO }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<Faelce_ExtratoCDEntidade> BuscarContribuicaoPorFundacaoInscricaoPlanoReferencia(string CD_FUNDACAO, string NUM_INSCRICAO, string CD_PLANO, string ANO_REF, string MES_REF, string ANO_INI, string MES_INI)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<Faelce_ExtratoCDEntidade>("SELECT FF.CD_FUNDACAO,         FF.NUM_INSCRICAO,         FF.CD_PLANO,         FF.ANO_REF,         FF.MES_REF,         /* contribuição básica participante em reais */         ROUND(ISNULL((SELECT SUM(ISNULL(CASE WHEN FF2.CD_OPERACAO = 'D' THEN FF2.CONTRIB_PARTICIPANTE * -1 ELSE FF2.CONTRIB_PARTICIPANTE END,0)) AS CONTRIB_PARTICIPANTE             FROM CC_FICHA_FINANCEIRA FF2                  INNER JOIN TB_TIPO_CONTRIBUICAO TC2 ON TC2.CD_TIPO_CONTRIBUICAO = FF2.CD_TIPO_CONTRIBUICAO           WHERE TC2.COD_AGRUPADOR_WEB = 'BAS'             AND FF2.CD_FUNDACAO   = FF.CD_FUNDACAO             AND FF2.NUM_INSCRICAO = FF.NUM_INSCRICAO             AND FF2.CD_PLANO      = FF.CD_PLANO             AND FF2.ANO_REF       = FF.ANO_REF             AND FF2.MES_REF       = FF.MES_REF),0),2) AS CONTRIB_PARTICIPANTE,         /* contribuição básica participante em cotas */         ISNULL((SELECT SUM(ISNULL(CASE WHEN FF2.CD_OPERACAO = 'D' THEN FF2.QTD_COTA_RP_PARTICIPANTE * -1 ELSE FF2.QTD_COTA_RP_PARTICIPANTE END,0)) AS QTD_COTA_RP_PARTICIPANTE            FROM CC_FICHA_FINANCEIRA FF2                  INNER JOIN TB_TIPO_CONTRIBUICAO TC2 ON TC2.CD_TIPO_CONTRIBUICAO = FF2.CD_TIPO_CONTRIBUICAO           WHERE TC2.COD_AGRUPADOR_WEB = 'BAS'             AND FF2.CD_FUNDACAO   = FF.CD_FUNDACAO             AND FF2.NUM_INSCRICAO = FF.NUM_INSCRICAO             AND FF2.CD_PLANO      = FF.CD_PLANO             AND FF2.ANO_REF       = FF.ANO_REF             AND FF2.MES_REF       = FF.MES_REF),0) AS QTD_COTA_RP_PARTICIPANTE,          /* contribuição básica patrocinadora em reais */            ROUND(ISNULL((SELECT SUM(ISNULL(CASE WHEN FF2.CD_OPERACAO = 'D' THEN FF2.CONTRIB_EMPRESA * -1 ELSE FF2.CONTRIB_EMPRESA END,0)) AS  CONTRIB_EMPRESA            FROM CC_FICHA_FINANCEIRA FF2                  INNER JOIN TB_TIPO_CONTRIBUICAO TC2 ON TC2.CD_TIPO_CONTRIBUICAO = FF2.CD_TIPO_CONTRIBUICAO           WHERE TC2.COD_AGRUPADOR_WEB = 'BAS'             AND FF2.CD_FUNDACAO   = FF.CD_FUNDACAO             AND FF2.NUM_INSCRICAO = FF.NUM_INSCRICAO             AND FF2.CD_PLANO      = FF.CD_PLANO             AND FF2.ANO_REF       = FF.ANO_REF             AND FF2.MES_REF       = FF.MES_REF),0),2) AS CONTRIB_EMPRESA,              /* contribuição básica patrocinadora em cotas */            ISNULL((SELECT SUM(ISNULL(CASE WHEN FF2.CD_OPERACAO = 'D' THEN FF2.QTD_COTA_RP_EMPRESA * -1 ELSE FF2.QTD_COTA_RP_EMPRESA END,0)) AS  QTD_COTA_RP_EMPRESA            FROM CC_FICHA_FINANCEIRA FF2                  INNER JOIN TB_TIPO_CONTRIBUICAO TC2 ON TC2.CD_TIPO_CONTRIBUICAO = FF2.CD_TIPO_CONTRIBUICAO           WHERE TC2.COD_AGRUPADOR_WEB = 'BAS'             AND FF2.CD_FUNDACAO   = FF.CD_FUNDACAO             AND FF2.NUM_INSCRICAO = FF.NUM_INSCRICAO             AND FF2.CD_PLANO      = FF.CD_PLANO             AND FF2.ANO_REF       = FF.ANO_REF             AND FF2.MES_REF       = FF.MES_REF),0) AS QTD_COTA_RP_EMPRESA,          /* contribuição risco participante */          ROUND(ISNULL((SELECT SUM(ISNULL(CASE WHEN FF2.CD_OPERACAO = 'D' THEN FF2.CONTRIB_PARTICIPANTE * -1 ELSE FF2.CONTRIB_PARTICIPANTE END,0)) AS RISCO_PART             FROM CC_FICHA_FINANCEIRA FF2                  INNER JOIN TB_TIPO_CONTRIBUICAO TC2 ON TC2.CD_TIPO_CONTRIBUICAO = FF2.CD_TIPO_CONTRIBUICAO           WHERE TC2.COD_AGRUPADOR_WEB = 'RIS'             AND FF2.CD_FUNDACAO   = FF.CD_FUNDACAO             AND FF2.NUM_INSCRICAO = FF.NUM_INSCRICAO             AND FF2.CD_PLANO      = FF.CD_PLANO             AND FF2.ANO_REF       = FF.ANO_REF             AND FF2.MES_REF       = FF.MES_REF),0),2) AS RISCO_PART,          /* contribuição risco patrocinadora */            ROUND(ISNULL((SELECT SUM(ISNULL(CASE WHEN FF2.CD_OPERACAO = 'D' THEN FF2.CONTRIB_EMPRESA * -1 ELSE FF2.CONTRIB_EMPRESA END,0)) AS  RISCO_PATROC            FROM CC_FICHA_FINANCEIRA FF2                  INNER JOIN TB_TIPO_CONTRIBUICAO TC2 ON TC2.CD_TIPO_CONTRIBUICAO = FF2.CD_TIPO_CONTRIBUICAO           WHERE TC2.COD_AGRUPADOR_WEB = 'RIS'             AND FF2.CD_FUNDACAO   = FF.CD_FUNDACAO             AND FF2.NUM_INSCRICAO = FF.NUM_INSCRICAO             AND FF2.CD_PLANO      = FF.CD_PLANO             AND FF2.ANO_REF       = FF.ANO_REF             AND FF2.MES_REF       = FF.MES_REF),0),2) AS RISCO_PATROC,          /* contribuição administrativa participante */          ROUND(ISNULL((SELECT SUM(ISNULL(CASE WHEN FF2.CD_OPERACAO = 'D' THEN FF2.CONTRIB_PARTICIPANTE * -1 ELSE FF2.CONTRIB_PARTICIPANTE END,0)) AS ADM_PART             FROM CC_FICHA_FINANCEIRA FF2                  INNER JOIN TB_TIPO_CONTRIBUICAO TC2 ON TC2.CD_TIPO_CONTRIBUICAO = FF2.CD_TIPO_CONTRIBUICAO           WHERE TC2.COD_AGRUPADOR_WEB = 'ADM'             AND FF2.CD_FUNDACAO   = FF.CD_FUNDACAO             AND FF2.NUM_INSCRICAO = FF.NUM_INSCRICAO             AND FF2.CD_PLANO      = FF.CD_PLANO             AND FF2.ANO_REF       = FF.ANO_REF             AND FF2.MES_REF       = FF.MES_REF),0),2) AS ADM_PART,          /* contribuição administrativa patrocinadora */          ROUND(ISNULL((SELECT SUM(ISNULL(CASE WHEN FF2.CD_OPERACAO = 'D' THEN FF2.CONTRIB_EMPRESA * -1 ELSE FF2.CONTRIB_EMPRESA END,0)) AS  ADM_PATROC            FROM CC_FICHA_FINANCEIRA FF2                  INNER JOIN TB_TIPO_CONTRIBUICAO TC2 ON TC2.CD_TIPO_CONTRIBUICAO = FF2.CD_TIPO_CONTRIBUICAO           WHERE TC2.COD_AGRUPADOR_WEB = 'ADM'             AND FF2.CD_FUNDACAO   = FF.CD_FUNDACAO             AND FF2.NUM_INSCRICAO = FF.NUM_INSCRICAO             AND FF2.CD_PLANO      = FF.CD_PLANO             AND FF2.ANO_REF       = FF.ANO_REF             AND FF2.MES_REF       = FF.MES_REF),0),2) AS ADM_PATROC,          /* contribuição voluntária participante em reais */          ROUND(ISNULL((SELECT SUM(ISNULL(CASE WHEN FF2.CD_OPERACAO = 'D' THEN FF2.CONTRIB_PARTICIPANTE * -1 ELSE FF2.CONTRIB_PARTICIPANTE END,0)) AS VOLUNTARIA_PART             FROM CC_FICHA_FINANCEIRA FF2                  INNER JOIN TB_TIPO_CONTRIBUICAO TC2 ON TC2.CD_TIPO_CONTRIBUICAO = FF2.CD_TIPO_CONTRIBUICAO           WHERE TC2.COD_AGRUPADOR_WEB = 'VOL'             AND FF2.CD_FUNDACAO   = FF.CD_FUNDACAO             AND FF2.NUM_INSCRICAO = FF.NUM_INSCRICAO             AND FF2.CD_PLANO      = FF.CD_PLANO             AND FF2.ANO_REF       = FF.ANO_REF             AND FF2.MES_REF       = FF.MES_REF),0),2) AS VOLUNTARIA_PART,          /* contribuição voluntária participante em cotas */          ISNULL((SELECT SUM(ISNULL(CASE WHEN FF2.CD_OPERACAO = 'D' THEN FF2.QTD_COTA_RP_PARTICIPANTE * -1 ELSE FF2.QTD_COTA_RP_PARTICIPANTE END,0)) AS VOLUNTARIA_PART_COTA             FROM CC_FICHA_FINANCEIRA FF2                  INNER JOIN TB_TIPO_CONTRIBUICAO TC2 ON TC2.CD_TIPO_CONTRIBUICAO = FF2.CD_TIPO_CONTRIBUICAO           WHERE TC2.COD_AGRUPADOR_WEB = 'VOL'             AND FF2.CD_FUNDACAO   = FF.CD_FUNDACAO             AND FF2.NUM_INSCRICAO = FF.NUM_INSCRICAO             AND FF2.CD_PLANO      = FF.CD_PLANO             AND FF2.ANO_REF       = FF.ANO_REF             AND FF2.MES_REF       = FF.MES_REF),0) AS VOLUNTARIA_PART_COTA,          /* contribuição portabilidade participante em reais */          ROUND(ISNULL((SELECT SUM(ISNULL(CASE WHEN FF2.CD_OPERACAO = 'D' THEN FF2.CONTRIB_PARTICIPANTE * -1 ELSE FF2.CONTRIB_PARTICIPANTE END,0)) AS PORTABILIDADE             FROM CC_FICHA_FINANCEIRA FF2                  INNER JOIN TB_TIPO_CONTRIBUICAO TC2 ON TC2.CD_TIPO_CONTRIBUICAO = FF2.CD_TIPO_CONTRIBUICAO           WHERE TC2.COD_AGRUPADOR_WEB = 'POR'             AND FF2.CD_FUNDACAO   = FF.CD_FUNDACAO             AND FF2.NUM_INSCRICAO = FF.NUM_INSCRICAO             AND FF2.CD_PLANO      = FF.CD_PLANO             AND FF2.ANO_REF       = FF.ANO_REF             AND FF2.MES_REF       = FF.MES_REF),0),2) AS PORTABILIDADE,                 /* contribuição portabilidade participante em cotas */          ISNULL((SELECT SUM(ISNULL(CASE WHEN FF2.CD_OPERACAO = 'D' THEN FF2.QTD_COTA_RP_PARTICIPANTE * -1 ELSE FF2.QTD_COTA_RP_PARTICIPANTE END,0)) AS PORTABILIDADE_COTA             FROM CC_FICHA_FINANCEIRA FF2                  INNER JOIN TB_TIPO_CONTRIBUICAO TC2 ON TC2.CD_TIPO_CONTRIBUICAO = FF2.CD_TIPO_CONTRIBUICAO           WHERE TC2.COD_AGRUPADOR_WEB = 'POR'             AND FF2.CD_FUNDACAO   = FF.CD_FUNDACAO             AND FF2.NUM_INSCRICAO = FF.NUM_INSCRICAO             AND FF2.CD_PLANO      = FF.CD_PLANO             AND FF2.ANO_REF       = FF.ANO_REF             AND FF2.MES_REF       = FF.MES_REF),0) AS PORTABILIDADE_COTA,          /* total de contribuições que compõem benefício, em reais */          ROUND(ISNULL((SELECT SUM(ISNULL(CASE WHEN FF2.CD_OPERACAO = 'D' THEN FF2.CONTRIB_PARTICIPANTE * -1 ELSE FF2.CONTRIB_PARTICIPANTE END,0) +                ISNULL(CASE WHEN FF2.CD_OPERACAO = 'D' THEN FF2.CONTRIB_EMPRESA * -1 ELSE FF2.CONTRIB_EMPRESA END,0)) AS TOTAL_CONTRIB            FROM CC_FICHA_FINANCEIRA FF2                  INNER JOIN TB_TIPO_CONTRIBUICAO TC2 ON TC2.CD_TIPO_CONTRIBUICAO = FF2.CD_TIPO_CONTRIBUICAO           WHERE TC2.COD_AGRUPADOR_WEB IN ('BAS', 'VOL', 'POR')             AND FF2.CD_FUNDACAO   = FF.CD_FUNDACAO             AND FF2.NUM_INSCRICAO = FF.NUM_INSCRICAO             AND FF2.CD_PLANO      = FF.CD_PLANO             AND FF2.ANO_REF       = FF.ANO_REF             AND FF2.MES_REF       = FF.MES_REF),0),2) AS TOTAL_CONTRIB,          /* total de contribuições que compõem benefício, em cotas */          ISNULL((SELECT SUM(ISNULL(CASE WHEN FF2.CD_OPERACAO = 'D' THEN FF2.QTD_COTA_RP_PARTICIPANTE * -1 ELSE FF2.QTD_COTA_RP_PARTICIPANTE END,0) +                ISNULL(CASE WHEN FF2.CD_OPERACAO = 'D' THEN FF2.QTD_COTA_RP_EMPRESA * -1 ELSE FF2.QTD_COTA_RP_EMPRESA  END,0)) AS TOTAL_CONTRIB            FROM CC_FICHA_FINANCEIRA FF2                  INNER JOIN TB_TIPO_CONTRIBUICAO TC2 ON TC2.CD_TIPO_CONTRIBUICAO = FF2.CD_TIPO_CONTRIBUICAO           WHERE TC2.COD_AGRUPADOR_WEB IN ('BAS', 'VOL', 'POR')             AND FF2.CD_FUNDACAO   = FF.CD_FUNDACAO             AND FF2.NUM_INSCRICAO = FF.NUM_INSCRICAO             AND FF2.CD_PLANO      = FF.CD_PLANO             AND FF2.ANO_REF       = FF.ANO_REF             AND FF2.MES_REF       = FF.MES_REF),0) AS TOTAL_CONTRIB_COTAS,         /* valor da cota do mês */         MAX(IV.VALOR_IND) AS VALOR_IND,         /* rentabilidade percentual */         MAX((ISNULL(IV.VALOR_IND,0) / ISNULL(IVA.VALOR_IND,1) - 1) * 100) AS RENTABILIDADE,         /* -saldo do mês em cotas */         (SELECT SUM(ISNULL(CASE WHEN FF2.CD_OPERACAO = 'D' THEN FF2.QTD_COTA_RP_PARTICIPANTE * -1 ELSE FF2.QTD_COTA_RP_PARTICIPANTE END,0) +               ISNULL(CASE WHEN FF2.CD_OPERACAO = 'D' THEN FF2.QTD_COTA_RP_EMPRESA * -1 ELSE FF2.QTD_COTA_RP_EMPRESA  END,0))             FROM CC_FICHA_FINANCEIRA FF2                  INNER JOIN TB_TIPO_CONTRIBUICAO TC2 ON TC2.CD_TIPO_CONTRIBUICAO = FF2.CD_TIPO_CONTRIBUICAO           WHERE TC2.COD_AGRUPADOR_WEB IN ('BAS', 'VOL', 'POR')             AND FF2.CD_FUNDACAO = FF.CD_FUNDACAO             AND FF2.NUM_INSCRICAO = FF.NUM_INSCRICAO             AND FF2.CD_PLANO      = FF.CD_PLANO             AND FF2.ANO_REF * 13 + FF2.MES_REF <= FF.ANO_REF * 13 + FF.MES_REF) AS SALDO_COTA,         /* saldo do mês em reais */         ROUND((SELECT SUM(ISNULL(CASE WHEN FF2.CD_OPERACAO = 'D' THEN FF2.QTD_COTA_RP_PARTICIPANTE * -1 ELSE FF2.QTD_COTA_RP_PARTICIPANTE END,0) +               ISNULL(CASE WHEN FF2.CD_OPERACAO = 'D' THEN FF2.QTD_COTA_RP_EMPRESA * -1 ELSE FF2.QTD_COTA_RP_EMPRESA  END,0))             FROM CC_FICHA_FINANCEIRA FF2                  INNER JOIN TB_TIPO_CONTRIBUICAO TC2 ON TC2.CD_TIPO_CONTRIBUICAO = FF2.CD_TIPO_CONTRIBUICAO           WHERE TC2.COD_AGRUPADOR_WEB IN ('BAS', 'VOL', 'POR')             AND FF2.CD_FUNDACAO = FF.CD_FUNDACAO             AND FF2.NUM_INSCRICAO = FF.NUM_INSCRICAO             AND FF2.CD_PLANO      = FF.CD_PLANO             AND FF2.ANO_REF * 13 + FF2.MES_REF <= FF.ANO_REF * 13 + FF.MES_REF) * MAX(IV.VALOR_IND),2) AS SALDO_REAIS,                    /* Saldo Inicial em Reais */         ROUND(ISNULL((SELECT SUM(ISNULL(CASE WHEN FF2.CD_OPERACAO = 'D' THEN FF2.QTD_COTA_RP_PARTICIPANTE * -1 ELSE FF2.QTD_COTA_RP_PARTICIPANTE END,0) +               ISNULL(CASE WHEN FF2.CD_OPERACAO = 'D' THEN FF2.QTD_COTA_RP_EMPRESA * -1 ELSE FF2.QTD_COTA_RP_EMPRESA  END,0))             FROM CC_FICHA_FINANCEIRA FF2                  INNER JOIN TB_TIPO_CONTRIBUICAO TC2 ON TC2.CD_TIPO_CONTRIBUICAO = FF2.CD_TIPO_CONTRIBUICAO           WHERE TC2.COD_AGRUPADOR_WEB IN ('BAS', 'VOL', 'POR')             AND FF2.CD_FUNDACAO = FF.CD_FUNDACAO             AND FF2.NUM_INSCRICAO = FF.NUM_INSCRICAO             AND FF2.CD_PLANO      = FF.CD_PLANO             AND FF2.ANO_REF * 13 + FF2.MES_REF < FF.ANO_REF * 13 + FF.MES_REF) * MAX(IVA.VALOR_IND),0),2) AS SALDO_INICIAL_REAIS,          /* Rendimento do mes em reais (Saldo_reais_mes - Saldo_Reais_Mes_anterior - Contrib_total_mes) */         ROUND(((SELECT SUM(ISNULL(CASE WHEN FF2.CD_OPERACAO = 'D' THEN FF2.QTD_COTA_RP_PARTICIPANTE * -1 ELSE FF2.QTD_COTA_RP_PARTICIPANTE END,0) +               ISNULL(CASE WHEN FF2.CD_OPERACAO = 'D' THEN FF2.QTD_COTA_RP_EMPRESA * -1 ELSE FF2.QTD_COTA_RP_EMPRESA  END,0))             FROM CC_FICHA_FINANCEIRA FF2                  INNER JOIN TB_TIPO_CONTRIBUICAO TC2 ON TC2.CD_TIPO_CONTRIBUICAO = FF2.CD_TIPO_CONTRIBUICAO           WHERE TC2.COD_AGRUPADOR_WEB IN ('BAS', 'VOL', 'POR')             AND FF2.CD_FUNDACAO = FF.CD_FUNDACAO             AND FF2.NUM_INSCRICAO = FF.NUM_INSCRICAO             AND FF2.CD_PLANO      = FF.CD_PLANO             AND FF2.ANO_REF * 13 + FF2.MES_REF <= FF.ANO_REF * 13 + FF.MES_REF) * MAX(IV.VALOR_IND)) -          (ISNULL((SELECT SUM(ISNULL(CASE WHEN FF2.CD_OPERACAO = 'D' THEN FF2.QTD_COTA_RP_PARTICIPANTE * -1 ELSE FF2.QTD_COTA_RP_PARTICIPANTE END,0) +               ISNULL(CASE WHEN FF2.CD_OPERACAO = 'D' THEN FF2.QTD_COTA_RP_EMPRESA * -1 ELSE FF2.QTD_COTA_RP_EMPRESA  END,0))             FROM CC_FICHA_FINANCEIRA FF2                  INNER JOIN TB_TIPO_CONTRIBUICAO TC2 ON TC2.CD_TIPO_CONTRIBUICAO = FF2.CD_TIPO_CONTRIBUICAO           WHERE TC2.COD_AGRUPADOR_WEB IN ('BAS', 'VOL', 'POR')             AND FF2.CD_FUNDACAO = FF.CD_FUNDACAO             AND FF2.NUM_INSCRICAO = FF.NUM_INSCRICAO             AND FF2.CD_PLANO      = FF.CD_PLANO             AND FF2.ANO_REF * 13 + FF2.MES_REF < FF.ANO_REF * 13 + FF.MES_REF) * MAX(IVA.VALOR_IND),0)) -           (ISNULL((SELECT SUM(ISNULL(CASE WHEN FF2.CD_OPERACAO = 'D' THEN FF2.CONTRIB_PARTICIPANTE * -1 ELSE FF2.CONTRIB_PARTICIPANTE END,0) +                ISNULL(CASE WHEN FF2.CD_OPERACAO = 'D' THEN FF2.CONTRIB_EMPRESA * -1 ELSE FF2.CONTRIB_EMPRESA END,0)) AS TOTAL_CONTRIB            FROM CC_FICHA_FINANCEIRA FF2                  INNER JOIN TB_TIPO_CONTRIBUICAO TC2 ON TC2.CD_TIPO_CONTRIBUICAO = FF2.CD_TIPO_CONTRIBUICAO           WHERE TC2.COD_AGRUPADOR_WEB IN ('BAS', 'VOL', 'POR')             AND FF2.CD_FUNDACAO   = FF.CD_FUNDACAO             AND FF2.NUM_INSCRICAO = FF.NUM_INSCRICAO             AND FF2.CD_PLANO      = FF.CD_PLANO             AND FF2.ANO_REF       = FF.ANO_REF             AND FF2.MES_REF       = FF.MES_REF),0)),2) AS RENDIMENTO_MES  FROM CC_FICHA_FINANCEIRA FF      INNER JOIN TB_TIPO_CONTRIBUICAO TC ON TC.CD_TIPO_CONTRIBUICAO = FF.CD_TIPO_CONTRIBUICAO      INNER JOIN CS_FUNCIONARIO FN ON FN.CD_FUNDACAO = FF.CD_FUNDACAO         AND FN.NUM_INSCRICAO = FF.NUM_INSCRICAO      INNER JOIN TB_EMPRESA_PLANOS EP ON EP.CD_FUNDACAO = FF.CD_FUNDACAO         AND EP.CD_EMPRESA = FN.CD_EMPRESA         AND EP.CD_PLANO   = FF.CD_PLANO      LEFT OUTER JOIN TB_IND_VALORES IV ON IV.COD_IND = EP.IND_RESERVA_POUP      LEFT OUTER JOIN TB_IND_VALORES IVA ON IVA.COD_IND = EP.IND_RESERVA_POUP  WHERE FF.CD_FUNDACAO   = @CD_FUNDACAO    AND FF.NUM_INSCRICAO = @NUM_INSCRICAO    AND FF.CD_PLANO      = @CD_PLANO    AND FF.ANO_REF * 13 + FF.MES_REF >= @ANO_INI * 13 + @MES_INI     AND FF.ANO_REF * 13 + FF.MES_REF <= @ANO_REF * 13 + @MES_REF       AND IV.DT_IND = (SELECT MAX(IV2.DT_IND)                       FROM TB_IND_VALORES IV2                      WHERE IV2.COD_IND = IV.COD_IND                        AND MONTH(IV2.DT_IND) = MONTH(DATEADD(MONTH, 1, DATEFROMPARTS(CAST(FF.ANO_REF AS INT) , CAST(FF.MES_REF AS INT), 1 )))                        AND YEAR(IV2.DT_IND)  = YEAR(DATEADD(MONTH, 1, DATEFROMPARTS(CAST(FF.ANO_REF AS INT) , CAST(FF.MES_REF AS INT), 1 ))))      AND IVA.DT_IND = (SELECT MAX(IV3.DT_IND)                       FROM TB_IND_VALORES IV3                      WHERE IV3.COD_IND = IVA.COD_IND                        AND CAST(MONTH(IV3.DT_IND) AS INT) = CAST(FF.MES_REF AS INT)                        AND CAST(YEAR(IV3.DT_IND) AS INT)  = CAST(FF.ANO_REF AS INT))  GROUP BY FF.CD_FUNDACAO,           FF.NUM_INSCRICAO,           FF.CD_PLANO,           FF.ANO_REF,           FF.MES_REF  ORDER BY FF.ANO_REF DESC,           FF.MES_REF DESC", new { CD_FUNDACAO, NUM_INSCRICAO, CD_PLANO, ANO_REF, MES_REF, ANO_INI, MES_INI }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<Faelce_ExtratoCDEntidade>("", new { CD_FUNDACAO, NUM_INSCRICAO, CD_PLANO, ANO_REF, MES_REF, ANO_INI, MES_INI }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<FichaFinanceiraEntidade> BuscarContribuicaoPorFundacaoInscricaoPlanoTipoContribuicaoFixa(string CD_FUNDACAO, string NUM_INSCRICAO, string CD_PLANO)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT FF.*    FROM CC_FICHA_FINANCEIRA FF    WHERE FF.CD_FUNDACAO = @CD_FUNDACAO        AND FF.NUM_INSCRICAO = @NUM_INSCRICAO        AND FF.CD_PLANO = @CD_PLANO        AND FF.CD_TIPO_CONTRIBUICAO IN ('65', '25', '28')        AND FF.ANO_COMP * 13 + FF.MES_COMP = (SELECT MAX(FF2.ANO_COMP * 13 + FF2.MES_COMP)                                                                                     FROM CC_FICHA_FINANCEIRA FF2  										WHERE FF2.CD_FUNDACAO = FF.CD_FUNDACAO                                              										  AND FF2.NUM_INSCRICAO = FF.NUM_INSCRICAO                                              										  AND FF2.CD_PLANO = FF.CD_PLANO  										    										  AND FF2.CD_TIPO_CONTRIBUICAO IN ('65', '25', '28')      										  AND FF2.MES_COMP <> 13)", new { CD_FUNDACAO, NUM_INSCRICAO, CD_PLANO }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT FF.* FROM CC_FICHA_FINANCEIRA  FF  WHERE FF.CD_FUNDACAO=:CD_FUNDACAO AND FF.NUM_INSCRICAO=:NUM_INSCRICAO AND FF.CD_PLANO=:CD_PLANO AND FF.CD_TIPO_CONTRIBUICAO IN ('65', '25', '28') AND FF.ANO_COMP*", new { CD_FUNDACAO, NUM_INSCRICAO, CD_PLANO }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<FichaFinanceiraEntidade> BuscarContribuicaoPorInscricao(string NUM_INSCRICAO)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT FF.ANO_REF,         FF.MES_REF,         TC.DS_TIPO_CONTRIBUICAO,         FF.SRC,         FF.CONTRIB_PARTICIPANTE,         FF.CONTRIB_EMPRESA,         FF.*  FROM CC_FICHA_FINANCEIRA FF      INNER JOIN TB_TIPO_CONTRIBUICAO TC ON TC.CD_TIPO_CONTRIBUICAO = FF.CD_TIPO_CONTRIBUICAO      INNER JOIN TB_FAIXA_VALOR_CONTRIB FVC ON FVC.CD_FUNDACAO = FF.CD_FUNDACAO          AND FVC.CD_PLANO = FF.CD_PLANO          AND FVC.CD_TIPO_CONTRIBUICAO = FF.CD_TIPO_CONTRIBUICAO          AND FVC.CD_MANTENEDORA = '2'  WHERE FF.CD_FUNDACAO   = '01'    AND FF.NUM_INSCRICAO = @NUM_INSCRICAO    AND FF.CD_PLANO      = '0002'    AND (FF.ANO_REF * 12 + FF.MES_REF) = (SELECT MAX(FF2.ANO_REF * 12 + FF2.MES_REF)                                            FROM CC_FICHA_FINANCEIRA FF2                                            WHERE FF2.CD_FUNDACAO = FF.CD_FUNDACAO                                             AND FF2.NUM_INSCRICAO = FF.NUM_INSCRICAO                                             AND FF2.CD_PLANO = FF.CD_PLANO)    AND (FVC.ANO_REF * 12 + FVC.MES_REF) = (SELECT MAX(FVC2.ANO_REF * 12 + FVC2.MES_REF)                                            FROM TB_FAIXA_VALOR_CONTRIB FVC2                                            WHERE FVC2.CD_FUNDACAO = FVC.CD_FUNDACAO                                             AND FVC2.CD_PLANO = FVC.CD_PLANO                                             AND FVC2.CD_TIPO_CONTRIBUICAO = FVC.CD_TIPO_CONTRIBUICAO                                             AND FVC.CD_MANTENEDORA = '2')                                                     ORDER BY FF.CD_TIPO_CONTRIBUICAO", new { NUM_INSCRICAO }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("", new { NUM_INSCRICAO }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<FichaFinanceiraEntidade> BuscarContribuicaoPorInscricaoAnoComp(string NUM_INSCRICAO)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT FF.ANO_COMP,         FF.MES_COMP,         TC.DS_TIPO_CONTRIBUICAO,         FF.SRC,         FF.CONTRIB_PARTICIPANTE,         FF.CONTRIB_EMPRESA,         FF.*  FROM CC_FICHA_FINANCEIRA FF      INNER JOIN TB_TIPO_CONTRIBUICAO TC ON TC.CD_TIPO_CONTRIBUICAO = FF.CD_TIPO_CONTRIBUICAO      INNER JOIN TB_FAIXA_VALOR_CONTRIB FVC ON FVC.CD_FUNDACAO = FF.CD_FUNDACAO          AND FVC.CD_PLANO = FF.CD_PLANO          AND FVC.CD_TIPO_CONTRIBUICAO = FF.CD_TIPO_CONTRIBUICAO          AND FVC.CD_MANTENEDORA = '2'  WHERE FF.CD_FUNDACAO   = '01'    AND FF.NUM_INSCRICAO = @NUM_INSCRICAO    AND FF.CD_PLANO      = '0002'    AND FF.MES_COMP      <> '13'    AND (FF.ANO_COMP * 12 + FF.MES_COMP) = (SELECT MAX(FF2.ANO_COMP * 12 + FF2.MES_COMP)                                            FROM CC_FICHA_FINANCEIRA FF2                                            WHERE FF2.CD_FUNDACAO = FF.CD_FUNDACAO                                             AND FF2.NUM_INSCRICAO = FF.NUM_INSCRICAO                                             AND FF2.CD_PLANO = FF.CD_PLANO                                             AND FF2.MES_COMP <> '13'  										   AND (FF2.ANO_REF * 12 + FF2.MES_REF) = (SELECT MAX(FF2.ANO_REF * 12 + FF2.MES_REF)                                                                                       FROM CC_FICHA_FINANCEIRA FF2                                                                                       WHERE FF2.CD_FUNDACAO = FF.CD_FUNDACAO                                                                                        AND FF2.NUM_INSCRICAO = FF.NUM_INSCRICAO                                                                                        AND FF2.CD_PLANO = FF.CD_PLANO                                                                                        AND FF2.MES_COMP <> '13'))    AND (FVC.ANO_REF * 12 + FVC.MES_REF) = (SELECT MAX(FVC2.ANO_REF * 12 + FVC2.MES_REF)                                            FROM TB_FAIXA_VALOR_CONTRIB FVC2                                            WHERE FVC2.CD_FUNDACAO = FVC.CD_FUNDACAO                                             AND FVC2.CD_PLANO = FVC.CD_PLANO                                             AND FVC2.CD_TIPO_CONTRIBUICAO = FVC.CD_TIPO_CONTRIBUICAO                                             AND FVC.CD_MANTENEDORA = '2')  ORDER BY FF.CD_TIPO_CONTRIBUICAO", new { NUM_INSCRICAO }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("", new { NUM_INSCRICAO }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<FichaFinanceiraEntidade> BuscarContribuicoesDeficit(string CD_FUNDACAO, string CD_PLANO, string NUM_INSCRICAO)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT FF.CD_TIPO_CONTRIBUICAO,         TC.DS_TIPO_CONTRIBUICAO,         FF.*  FROM CC_FICHA_FINANCEIRA FF    INNER JOIN TB_TIPO_CONTRIBUICAO TC ON TC.CD_TIPO_CONTRIBUICAO = FF.CD_TIPO_CONTRIBUICAO    INNER JOIN CS_FUNCIONARIO FN ON FN.CD_FUNDACAO = FF.CD_FUNDACAO AND FN.NUM_INSCRICAO = FF.NUM_INSCRICAO  WHERE FF.CD_FUNDACAO = @CD_FUNDACAO    AND FF.CD_PLANO = @CD_PLANO    AND FF.NUM_INSCRICAO = @NUM_INSCRICAO    AND FF.CD_TIPO_CONTRIBUICAO IN ('73','70','74','34','B4','B6','B5','B1','B2','B3','B7','B8','B9','C1','C5','C6','D5')  ORDER BY ANO_REF DESC, MES_REF DESC", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT FF.CD_TIPO_CONTRIBUICAO, TC.DS_TIPO_CONTRIBUICAO, FF.* FROM CC_FICHA_FINANCEIRA  FF  INNER  JOIN TB_TIPO_CONTRIBUICAO   TC  ON TC.CD_TIPO_CONTRIBUICAO=FF.CD_TIPO_CONTRIBUICAO INNER  JOIN CS_FUNCIONARIO   FN  ON FN.CD_FUNDACAO=FF.CD_FUNDACAO AND FN.NUM_INSCRICAO=FF.NUM_INSCRICAO WHERE FF.CD_FUNDACAO=:CD_FUNDACAO AND FF.CD_PLANO=:CD_PLANO AND FF.NUM_INSCRICAO=:NUM_INSCRICAO AND FF.CD_TIPO_CONTRIBUICAO IN ('73', '70', '74', '34', 'B4', 'B6', 'B5', 'B1', 'B2', 'B3', 'B7', 'B8', 'B9', 'C1', 'C5', 'C6', 'D5') ORDER BY ANO_REF DESC, MES_REF DESC", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<FichaFinanceiraEntidade> BuscarContribuicoesDeficitPorAno(string CD_FUNDACAO, string CD_PLANO, string NUM_INSCRICAO, string ANO_REF)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT FF.CD_TIPO_CONTRIBUICAO,         TC.DS_TIPO_CONTRIBUICAO,         FF.*  FROM CC_FICHA_FINANCEIRA FF    INNER JOIN TB_TIPO_CONTRIBUICAO TC ON TC.CD_TIPO_CONTRIBUICAO = FF.CD_TIPO_CONTRIBUICAO    INNER JOIN CS_FUNCIONARIO FN ON FN.CD_FUNDACAO = FF.CD_FUNDACAO AND FN.NUM_INSCRICAO = FF.NUM_INSCRICAO  WHERE FF.CD_FUNDACAO = @CD_FUNDACAO    AND FF.CD_PLANO = @CD_PLANO    AND FF.NUM_INSCRICAO = @NUM_INSCRICAO    AND FF.ANO_REF = @ANO_REF    AND FF.CD_TIPO_CONTRIBUICAO IN ('73','70','74','34','B4','B6','B5','B1','B2','B3','B7','B8','B9','C1','C5','C6','D5')  ORDER BY ANO_REF DESC, MES_REF DESC", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO, ANO_REF }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT FF.CD_TIPO_CONTRIBUICAO, TC.DS_TIPO_CONTRIBUICAO, FF.* FROM CC_FICHA_FINANCEIRA  FF  INNER  JOIN TB_TIPO_CONTRIBUICAO   TC  ON TC.CD_TIPO_CONTRIBUICAO=FF.CD_TIPO_CONTRIBUICAO INNER  JOIN CS_FUNCIONARIO   FN  ON FN.CD_FUNDACAO=FF.CD_FUNDACAO AND FN.NUM_INSCRICAO=FF.NUM_INSCRICAO WHERE FF.CD_FUNDACAO=:CD_FUNDACAO AND FF.CD_PLANO=:CD_PLANO AND FF.NUM_INSCRICAO=:NUM_INSCRICAO AND FF.ANO_REF=:ANO_REF AND FF.CD_TIPO_CONTRIBUICAO IN ('73', '70', '74', '34', 'B4', 'B6', 'B5', 'B1', 'B2', 'B3', 'B7', 'B8', 'B9', 'C1', 'C5', 'C6', 'D5') ORDER BY ANO_REF DESC, MES_REF DESC", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO, ANO_REF }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<FichaFinanceiraEntidade> BuscarDatasInformePorFundacaoInscricao(string CD_FUNDACAO, string NUM_INSCRICAO)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT DISTINCT FF.ANO_REF  FROM CC_FICHA_FINANCEIRA FF  	INNER JOIN CS_FUNCIONARIO FN ON FN.CD_FUNDACAO = FF.CD_FUNDACAO   			AND FN.NUM_INSCRICAO = FF.NUM_INSCRICAO  	INNER JOIN TB_TIPO_CONTRIBUICAO TC ON TC.CD_TIPO_CONTRIBUICAO = FF.CD_TIPO_CONTRIBUICAO  WHERE TC.CK_COMPOE_IR_AM = 'S'    AND FF.CD_FUNDACAO = @CD_FUNDACAO    AND FF.NUM_INSCRICAO = @NUM_INSCRICAO  GROUP BY FF.ANO_REF  ORDER BY FF.ANO_REF DESC", new { CD_FUNDACAO, NUM_INSCRICAO }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT DISTINCT FF.ANO_REF FROM CC_FICHA_FINANCEIRA  FF  INNER  JOIN CS_FUNCIONARIO   FN  ON FN.CD_FUNDACAO=FF.CD_FUNDACAO AND FN.NUM_INSCRICAO=FF.NUM_INSCRICAO INNER  JOIN TB_TIPO_CONTRIBUICAO   TC  ON TC.CD_TIPO_CONTRIBUICAO=FF.CD_TIPO_CONTRIBUICAO WHERE TC.CK_COMPOE_IR_AM='S' AND FF.CD_FUNDACAO=:CD_FUNDACAO AND FF.NUM_INSCRICAO=:NUM_INSCRICAO GROUP BY FF.ANO_REF ORDER BY FF.ANO_REF DESC", new { CD_FUNDACAO, NUM_INSCRICAO }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<FichaFinanceiraEntidade> BuscarDatasPorFundacaoInscricaoPlano(string CD_FUNDACAO, string NUM_INSCRICAO, string CD_PLANO)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT DISTINCT          FF.ANO_REF,         FF.MES_REF  FROM CC_FICHA_FINANCEIRA FF  WHERE FF.CD_FUNDACAO   = @CD_FUNDACAO    AND FF.NUM_INSCRICAO = @NUM_INSCRICAO    AND FF.CD_PLANO      = @CD_PLANO  ORDER BY FF.ANO_REF, FF.MES_REF", new { CD_FUNDACAO, NUM_INSCRICAO, CD_PLANO }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT DISTINCT FF.ANO_REF, FF.MES_REF FROM CC_FICHA_FINANCEIRA  FF  WHERE FF.CD_FUNDACAO=:CD_FUNDACAO AND FF.NUM_INSCRICAO=:NUM_INSCRICAO AND FF.CD_PLANO=:CD_PLANO ORDER BY FF.ANO_REF, FF.MES_REF", new { CD_FUNDACAO, NUM_INSCRICAO, CD_PLANO }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<FichaFinanceiraEntidade> BuscarDetalhamentoPorFundacaoInscricaoPlanoReferencia(string CD_FUNDACAO, string NUM_INSCRICAO, string CD_PLANO, string ANO_REF, string MES_REF, string ANO_INI, string MES_INI)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT FF.CD_FUNDACAO,         FF.NUM_INSCRICAO,         FF.CD_PLANO,         FF.ANO_REF,         FF.MES_REF,         FF.ANO_COMP,         FF.MES_COMP,         TC.DS_TIPO_CONTRIBUICAO,         FF.CD_OPERACAO,         ISNULL(CASE WHEN FF.CD_OPERACAO = 'D' THEN FF.CONTRIB_PARTICIPANTE * -1 ELSE FF.CONTRIB_PARTICIPANTE END,0) AS CONTRIB_PARTICIPANTE,         ISNULL(CASE WHEN FF.CD_OPERACAO = 'D' THEN FF.CONTRIB_EMPRESA * -1 ELSE FF.CONTRIB_EMPRESA END,0) AS CONTRIB_EMPRESA,         ISNULL(CASE WHEN FF.CD_OPERACAO = 'D' THEN FF.QTD_COTA_RP_PARTICIPANTE * -1 ELSE FF.QTD_COTA_RP_PARTICIPANTE END,0) AS QTD_COTA_RP_PARTICIPANTE,         ISNULL(CASE WHEN FF.CD_OPERACAO = 'D' THEN FF.QTD_COTA_RP_EMPRESA * -1 ELSE FF.QTD_COTA_RP_EMPRESA END,0) AS QTD_COTA_RP_EMPRESA,         ISNULL(FF.SRC, 0) AS SRC  FROM CC_FICHA_FINANCEIRA FF      INNER JOIN TB_TIPO_CONTRIBUICAO TC ON TC.CD_TIPO_CONTRIBUICAO = FF.CD_TIPO_CONTRIBUICAO      INNER JOIN CS_FUNCIONARIO FN ON FN.CD_FUNDACAO = FF.CD_FUNDACAO         AND FN.NUM_INSCRICAO = FF.NUM_INSCRICAO      INNER JOIN TB_EMPRESA_PLANOS EP ON EP.CD_FUNDACAO = FF.CD_FUNDACAO         AND EP.CD_EMPRESA = FN.CD_EMPRESA         AND EP.CD_PLANO   = FF.CD_PLANO  WHERE FF.CD_FUNDACAO   = @CD_FUNDACAO    AND FF.NUM_INSCRICAO = @NUM_INSCRICAO    AND FF.CD_PLANO      = @CD_PLANO    AND FF.ANO_REF * 13 + FF.MES_REF >= @ANO_INI * 13 + @MES_INI     AND FF.ANO_REF * 13 + FF.MES_REF <= @ANO_REF * 13 + @MES_REF     AND TC.COMPOE_SALDO_BENEFICIO = 'S'  ORDER BY FF.ANO_REF DESC,           FF.MES_REF DESC,           TC.DS_TIPO_CONTRIBUICAO", new { CD_FUNDACAO, NUM_INSCRICAO, CD_PLANO, ANO_REF, MES_REF, ANO_INI, MES_INI }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT FF.CD_FUNDACAO, FF.NUM_INSCRICAO, FF.CD_PLANO, FF.ANO_REF, FF.MES_REF, FF.ANO_COMP, FF.MES_COMP, TC.DS_TIPO_CONTRIBUICAO, FF.CD_OPERACAO, NVL(CASE  WHEN FF.CD_OPERACAO='D' THEN FF.CONTRIB_PARTICIPANTE* - 1 ELSE FF.CONTRIB_PARTICIPANTE END ,0) AS CONTRIB_PARTICIPANTE, NVL(CASE  WHEN FF.CD_OPERACAO='D' THEN FF.CONTRIB_EMPRESA* - 1 ELSE FF.CONTRIB_EMPRESA END ,0) AS CONTRIB_EMPRESA, NVL(CASE  WHEN FF.CD_OPERACAO='D' THEN FF.QTD_COTA_RP_PARTICIPANTE* - 1 ELSE FF.QTD_COTA_RP_PARTICIPANTE END ,0) AS QTD_COTA_RP_PARTICIPANTE, NVL(CASE  WHEN FF.CD_OPERACAO='D' THEN FF.QTD_COTA_RP_EMPRESA* - 1 ELSE FF.QTD_COTA_RP_EMPRESA END ,0) AS QTD_COTA_RP_EMPRESA, NVL(FF.SRC,0) AS SRC FROM CC_FICHA_FINANCEIRA  FF  INNER  JOIN TB_TIPO_CONTRIBUICAO   TC  ON TC.CD_TIPO_CONTRIBUICAO=FF.CD_TIPO_CONTRIBUICAO INNER  JOIN CS_FUNCIONARIO   FN  ON FN.CD_FUNDACAO=FF.CD_FUNDACAO AND FN.NUM_INSCRICAO=FF.NUM_INSCRICAO INNER  JOIN TB_EMPRESA_PLANOS   EP  ON EP.CD_FUNDACAO=FF.CD_FUNDACAO AND EP.CD_EMPRESA=FN.CD_EMPRESA AND EP.CD_PLANO=FF.CD_PLANO WHERE FF.CD_FUNDACAO=:CD_FUNDACAO AND FF.NUM_INSCRICAO=:NUM_INSCRICAO AND FF.CD_PLANO=:CD_PLANO AND FF.ANO_REF*", new { CD_FUNDACAO, NUM_INSCRICAO, CD_PLANO, ANO_REF, MES_REF, ANO_INI, MES_INI }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<FichaFinanceiraEntidade> BuscarExtrato(string CD_FUNDACAO, string CD_PLANO, string NUM_INSCRICAO, string ANOMES_INICIO, string ANOMES_FIM)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT TC.DS_TIPO_CONTRIBUICAO,         TC.CALC_MARGEM_CONSIG,         FI.*   FROM CC_FICHA_FINANCEIRA FI  INNER JOIN TB_TIPO_CONTRIBUICAO TC ON TC.CD_TIPO_CONTRIBUICAO = FI.CD_TIPO_CONTRIBUICAO  WHERE FI.CD_FUNDACAO = @CD_FUNDACAO    AND FI.CD_PLANO = @CD_PLANO    AND FI.NUM_INSCRICAO = @NUM_INSCRICAO    AND '' + FI.ANO_REF + FI.MES_REF BETWEEN @ANOMES_INICIO AND @ANOMES_FIM  ORDER BY FI.ANO_REF,            FI.MES_REF,           FI.ANO_COMP,            FI.MES_COMP,           FI.CD_TIPO_CONTRIBUICAO", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO, ANOMES_INICIO, ANOMES_FIM }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT TC.DS_TIPO_CONTRIBUICAO, TC.CALC_MARGEM_CONSIG, FI.* FROM CC_FICHA_FINANCEIRA  FI  INNER  JOIN TB_TIPO_CONTRIBUICAO   TC  ON TC.CD_TIPO_CONTRIBUICAO=FI.CD_TIPO_CONTRIBUICAO WHERE FI.CD_FUNDACAO=:CD_FUNDACAO AND FI.CD_PLANO=:CD_PLANO AND FI.NUM_INSCRICAO=:NUM_INSCRICAO AND '' || FI.ANO_REF || FI.MES_REF BETWEEN :ANOMES_INICIO AND :ANOMES_FIM ORDER BY FI.ANO_REF, FI.MES_REF, FI.ANO_COMP, FI.MES_COMP, FI.CD_TIPO_CONTRIBUICAO", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO, ANOMES_INICIO, ANOMES_FIM }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<FichaFinanceiraEntidade> BuscarExtratoTipoResgate(string CD_FUNDACAO, string CD_PLANO, string NUM_INSCRICAO, string ANOMES_INICIO, string ANOMES_FIM, string CD_TIPO_RESGATE)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT TC.DS_TIPO_CONTRIBUICAO,         TC.CALC_MARGEM_CONSIG,         FI.*   FROM CC_FICHA_FINANCEIRA FI  INNER JOIN TB_TIPO_CONTRIBUICAO TC ON TC.CD_TIPO_CONTRIBUICAO = FI.CD_TIPO_CONTRIBUICAO  WHERE FI.CD_FUNDACAO = @CD_FUNDACAO    AND FI.CD_PLANO = @CD_PLANO    AND FI.NUM_INSCRICAO = @NUM_INSCRICAO    AND '' + FI.ANO_REF + FI.MES_REF BETWEEN @ANOMES_INICIO AND @ANOMES_FIM     AND FI.CD_TIPO_CONTRIBUICAO IN (SELECT CD_TIPO_CONTRIBUICAO                                    FROM DR_PARAMETROS_RESGATE                                   WHERE CD_FUNDACAO = FI.CD_FUNDACAO                                      AND CD_PLANO = FI.CD_PLANO                                      AND CD_TIPO_CONTRIBUICAO = FI.CD_TIPO_CONTRIBUICAO                                      AND CD_TIPO_RESGATE = @CD_TIPO_RESGATE)  ORDER BY FI.ANO_REF,            FI.MES_REF,           FI.ANO_COMP,            FI.MES_COMP,           FI.CD_TIPO_CONTRIBUICAO", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO, ANOMES_INICIO, ANOMES_FIM, CD_TIPO_RESGATE }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT TC.DS_TIPO_CONTRIBUICAO, TC.CALC_MARGEM_CONSIG, FI.* FROM CC_FICHA_FINANCEIRA  FI  INNER  JOIN TB_TIPO_CONTRIBUICAO   TC  ON TC.CD_TIPO_CONTRIBUICAO=FI.CD_TIPO_CONTRIBUICAO WHERE FI.CD_FUNDACAO=:CD_FUNDACAO AND FI.CD_PLANO=:CD_PLANO AND FI.NUM_INSCRICAO=:NUM_INSCRICAO AND '' || FI.ANO_REF || FI.MES_REF BETWEEN :ANOMES_INICIO AND :ANOMES_FIM AND FI.CD_TIPO_CONTRIBUICAO IN (SELECT CD_TIPO_CONTRIBUICAO FROM DR_PARAMETROS_RESGATE WHERE CD_FUNDACAO=FI.CD_FUNDACAO AND CD_PLANO=FI.CD_PLANO AND CD_TIPO_CONTRIBUICAO=FI.CD_TIPO_CONTRIBUICAO AND CD_TIPO_RESGATE=:CD_TIPO_RESGATE) ORDER BY FI.ANO_REF, FI.MES_REF, FI.ANO_COMP, FI.MES_COMP, FI.CD_TIPO_CONTRIBUICAO", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO, ANOMES_INICIO, ANOMES_FIM, CD_TIPO_RESGATE }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<FichaFinanceiraEntidade> BuscarInformePlanosPorFundacaoInscricaoAno(string CD_FUNDACAO, string NUM_INSCRICAO, string ANO)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT FF.CD_PLANO,  	   SUM(FF.CONTRIB_PARTICIPANTE) AS CONTRIB_PARTICIPANTE  FROM CC_FICHA_FINANCEIRA FF  	INNER JOIN CS_FUNCIONARIO FN ON FN.CD_FUNDACAO = FF.CD_FUNDACAO   			AND FN.NUM_INSCRICAO = FF.NUM_INSCRICAO  	INNER JOIN TB_TIPO_CONTRIBUICAO TC ON TC.CD_TIPO_CONTRIBUICAO = FF.CD_TIPO_CONTRIBUICAO  WHERE TC.CK_COMPOE_IR_AM = 'S'    AND FF.CD_FUNDACAO = @CD_FUNDACAO    AND FF.NUM_INSCRICAO = @NUM_INSCRICAO    AND FF.ANO_REF = @ANO  GROUP BY FF.CD_PLANO", new { CD_FUNDACAO, NUM_INSCRICAO, ANO }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT FF.CD_PLANO, SUM(FF.CONTRIB_PARTICIPANTE) AS CONTRIB_PARTICIPANTE FROM CC_FICHA_FINANCEIRA  FF  INNER  JOIN CS_FUNCIONARIO   FN  ON FN.CD_FUNDACAO=FF.CD_FUNDACAO AND FN.NUM_INSCRICAO=FF.NUM_INSCRICAO INNER  JOIN TB_TIPO_CONTRIBUICAO   TC  ON TC.CD_TIPO_CONTRIBUICAO=FF.CD_TIPO_CONTRIBUICAO WHERE TC.CK_COMPOE_IR_AM='S' AND FF.CD_FUNDACAO=:CD_FUNDACAO AND FF.NUM_INSCRICAO=:NUM_INSCRICAO AND FF.ANO_REF=:ANO GROUP BY FF.CD_PLANO", new { CD_FUNDACAO, NUM_INSCRICAO, ANO }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<FichaFinanceiraEntidade> BuscarInformePorFundacaoInscricaoAno(string CD_FUNDACAO, string NUM_INSCRICAO, string ANO)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT FF.ANO_REF,         FF.MES_REF,  	   SUM(FF.CONTRIB_PARTICIPANTE) AS CONTRIB_PARTICIPANTE  FROM CC_FICHA_FINANCEIRA FF  	INNER JOIN CS_FUNCIONARIO FN ON FN.CD_FUNDACAO = FF.CD_FUNDACAO   			AND FN.NUM_INSCRICAO = FF.NUM_INSCRICAO  	INNER JOIN TB_TIPO_CONTRIBUICAO TC ON TC.CD_TIPO_CONTRIBUICAO = FF.CD_TIPO_CONTRIBUICAO  WHERE TC.CK_COMPOE_IR_AM = 'S'    AND FF.CD_FUNDACAO = @CD_FUNDACAO    AND FF.NUM_INSCRICAO = @NUM_INSCRICAO    AND FF.ANO_REF = @ANO  GROUP BY FF.ANO_REF,           FF.MES_REF  ORDER BY FF.ANO_REF,           FF.MES_REF;", new { CD_FUNDACAO, NUM_INSCRICAO, ANO }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT FF.ANO_REF, FF.MES_REF, SUM(FF.CONTRIB_PARTICIPANTE) AS CONTRIB_PARTICIPANTE FROM CC_FICHA_FINANCEIRA  FF  INNER  JOIN CS_FUNCIONARIO   FN  ON FN.CD_FUNDACAO=FF.CD_FUNDACAO AND FN.NUM_INSCRICAO=FF.NUM_INSCRICAO INNER  JOIN TB_TIPO_CONTRIBUICAO   TC  ON TC.CD_TIPO_CONTRIBUICAO=FF.CD_TIPO_CONTRIBUICAO WHERE TC.CK_COMPOE_IR_AM='S' AND FF.CD_FUNDACAO=:CD_FUNDACAO AND FF.NUM_INSCRICAO=:NUM_INSCRICAO AND FF.ANO_REF=:ANO GROUP BY FF.ANO_REF, FF.MES_REF ORDER BY FF.ANO_REF, FF.MES_REF", new { CD_FUNDACAO, NUM_INSCRICAO, ANO }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<FichaFinanceiraEntidade> BuscarPlanoUmDoisPorFundacaoInscricao(string CD_FUNDACAO, string NUM_INSCRICAO)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT CC_FICHA_FINANCEIRA.*  FROM CC_FICHA_FINANCEIRA  INNER JOIN TB_TIPO_CONTRIBUICAO ON TB_TIPO_CONTRIBUICAO.CD_TIPO_CONTRIBUICAO = CC_FICHA_FINANCEIRA.CD_TIPO_CONTRIBUICAO  WHERE (CC_FICHA_FINANCEIRA.CD_FUNDACAO = @CD_FUNDACAO)    AND (CC_FICHA_FINANCEIRA.NUM_INSCRICAO = @NUM_INSCRICAO)    AND (CC_FICHA_FINANCEIRA.CD_PLANO IN ('0001', '0002'))    AND (TB_TIPO_CONTRIBUICAO.CALC_MARGEM_CONSIG = 'S')", new { CD_FUNDACAO, NUM_INSCRICAO }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT CC_FICHA_FINANCEIRA.* FROM CC_FICHA_FINANCEIRA INNER  JOIN TB_TIPO_CONTRIBUICAO  ON TB_TIPO_CONTRIBUICAO.CD_TIPO_CONTRIBUICAO=CC_FICHA_FINANCEIRA.CD_TIPO_CONTRIBUICAO WHERE (CC_FICHA_FINANCEIRA.CD_FUNDACAO=:CD_FUNDACAO) AND (CC_FICHA_FINANCEIRA.NUM_INSCRICAO=:NUM_INSCRICAO) AND (CC_FICHA_FINANCEIRA.CD_PLANO IN ('0001', '0002')) AND (TB_TIPO_CONTRIBUICAO.CALC_MARGEM_CONSIG='S')", new { CD_FUNDACAO, NUM_INSCRICAO }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<FichaFinanceiraEntidade> BuscarPorDataRecolhimento(string CD_FUNDACAO, string NUM_INSCRICAO, string CD_PLANO, string MES_REF_INI, string ANO_REF_INI, string MES_REF_FIM, string ANO_REF_FIM)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT FF.ANO_REF,         FF.MES_REF,         FF.CD_OPERACAO,         FF.ANO_COMP,         FF.MES_COMP,         TC.DS_TIPO_CONTRIBUICAO,         FF.SRC,         FF.CONTRIB_PARTICIPANTE,         FF.CONTRIB_EMPRESA,         FF.QTD_COTA_RP_PARTICIPANTE,         FF.QTD_COTA_RP_EMPRESA,         0 + FF.QTD_COTA_RP_EMPRESA + FF.QTD_COTA_RP_PARTICIPANTE AS QTD_COTA,         IV.VALOR_IND  FROM CC_FICHA_FINANCEIRA FF      INNER JOIN TB_TIPO_CONTRIBUICAO TC ON TC.CD_TIPO_CONTRIBUICAO = FF.CD_TIPO_CONTRIBUICAO      INNER JOIN CS_FUNCIONARIO FN ON FN.CD_FUNDACAO = FF.CD_FUNDACAO          AND FN.NUM_INSCRICAO = FF.NUM_INSCRICAO      INNER JOIN TB_EMPRESA_PLANOS EP ON EP.CD_FUNDACAO= FF.CD_FUNDACAO          AND EP.CD_EMPRESA = FN.CD_EMPRESA          AND EP.CD_PLANO = FF.CD_PLANO      LEFT OUTER JOIN CA_DATA_RECOLHIMENTO DR ON DR.CD_FUNDACAO = FF.CD_FUNDACAO          AND DR.CD_EMPRESA = FN.CD_EMPRESA          AND DR.ANO_REF = FF.ANO_REF          AND DR.MES_REF = FF.MES_REF          AND DR.SEQ_CONTRIBUICAO = FF.SEQ_CONTRIBUICAO      LEFT OUTER JOIN TB_IND_VALORES IV ON IV.COD_IND = EP.IND_RESERVA_POUP          AND IV.DT_IND = DR.DT_REC_RP_PARTICIPANTE  WHERE FF.CD_FUNDACAO   = @CD_FUNDACAO    AND FF.NUM_INSCRICAO = @NUM_INSCRICAO    AND FF.CD_PLANO      = @CD_PLANO    AND FF.ANO_REF * 12 + FF.MES_REF >= @ANO_REF_INI * 12 + @MES_REF_INI    AND FF.ANO_REF * 12 + FF.MES_REF <= @ANO_REF_FIM * 12 + @MES_REF_FIM    AND TC.COMPOE_SALDO_BENEFICIO = 'S'  ORDER BY FF.ANO_REF,         FF.MES_REF,         FF.ANO_COMP,         FF.MES_COMP,         TC.DS_TIPO_CONTRIBUICAO", new { CD_FUNDACAO, NUM_INSCRICAO, CD_PLANO, MES_REF_INI, ANO_REF_INI, MES_REF_FIM, ANO_REF_FIM }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT FF.ANO_REF, FF.MES_REF, FF.CD_OPERACAO, FF.ANO_COMP, FF.MES_COMP, TC.DS_TIPO_CONTRIBUICAO, FF.SRC, FF.CONTRIB_PARTICIPANTE, FF.CONTRIB_EMPRESA, FF.QTD_COTA_RP_PARTICIPANTE, FF.QTD_COTA_RP_EMPRESA, 0 + FF.QTD_COTA_RP_EMPRESA + FF.QTD_COTA_RP_PARTICIPANTE AS QTD_COTA, IV.VALOR_IND FROM CC_FICHA_FINANCEIRA  FF  INNER  JOIN TB_TIPO_CONTRIBUICAO   TC  ON TC.CD_TIPO_CONTRIBUICAO=FF.CD_TIPO_CONTRIBUICAO INNER  JOIN CS_FUNCIONARIO   FN  ON FN.CD_FUNDACAO=FF.CD_FUNDACAO AND FN.NUM_INSCRICAO=FF.NUM_INSCRICAO INNER  JOIN TB_EMPRESA_PLANOS   EP  ON EP.CD_FUNDACAO=FF.CD_FUNDACAO AND EP.CD_EMPRESA=FN.CD_EMPRESA AND EP.CD_PLANO=FF.CD_PLANO LEFT OUTER JOIN CA_DATA_RECOLHIMENTO   DR  ON DR.CD_FUNDACAO=FF.CD_FUNDACAO AND DR.CD_EMPRESA=FN.CD_EMPRESA AND DR.ANO_REF=FF.ANO_REF AND DR.MES_REF=FF.MES_REF AND DR.SEQ_CONTRIBUICAO=FF.SEQ_CONTRIBUICAO LEFT OUTER JOIN TB_IND_VALORES   IV  ON IV.COD_IND=EP.IND_RESERVA_POUP AND IV.DT_IND=DR.DT_REC_RP_PARTICIPANTE WHERE FF.CD_FUNDACAO=:CD_FUNDACAO AND FF.NUM_INSCRICAO=:NUM_INSCRICAO AND FF.CD_PLANO=:CD_PLANO AND FF.ANO_REF*", new { CD_FUNDACAO, NUM_INSCRICAO, CD_PLANO, MES_REF_INI, ANO_REF_INI, MES_REF_FIM, ANO_REF_FIM }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<FichaFinanceiraEntidade> BuscarPorFundacaoPlanoInscricao(string CD_FUNDACAO, string CD_PLANO, string NUM_INSCRICAO)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT TC.DS_TIPO_CONTRIBUICAO,         TC.CALC_MARGEM_CONSIG,         FI.*   FROM CC_FICHA_FINANCEIRA FI  INNER JOIN TB_TIPO_CONTRIBUICAO TC ON TC.CD_TIPO_CONTRIBUICAO = FI.CD_TIPO_CONTRIBUICAO  WHERE FI.CD_FUNDACAO = @CD_FUNDACAO    AND FI.CD_PLANO = @CD_PLANO    AND FI.NUM_INSCRICAO = @NUM_INSCRICAO  ORDER BY FI.ANO_REF DESC,            FI.MES_REF DESC,           FI.CD_TIPO_CONTRIBUICAO", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT TC.DS_TIPO_CONTRIBUICAO, TC.CALC_MARGEM_CONSIG, FI.* FROM CC_FICHA_FINANCEIRA  FI  INNER  JOIN TB_TIPO_CONTRIBUICAO   TC  ON TC.CD_TIPO_CONTRIBUICAO=FI.CD_TIPO_CONTRIBUICAO WHERE FI.CD_FUNDACAO=:CD_FUNDACAO AND FI.CD_PLANO=:CD_PLANO AND FI.NUM_INSCRICAO=:NUM_INSCRICAO ORDER BY FI.ANO_REF DESC, FI.MES_REF DESC, FI.CD_TIPO_CONTRIBUICAO", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<FichaFinanceiraEntidade> BuscarPorFundacaoPlanoInscricaoPeriodo(string CD_FUNDACAO, string CD_PLANO, string NUM_INSCRICAO, DateTime DT_INICIO, DateTime DT_FIM)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT TC.DS_TIPO_CONTRIBUICAO,         TC.CALC_MARGEM_CONSIG,         FI.*   FROM CC_FICHA_FINANCEIRA FI  INNER JOIN TB_TIPO_CONTRIBUICAO TC ON TC.CD_TIPO_CONTRIBUICAO = FI.CD_TIPO_CONTRIBUICAO  WHERE FI.CD_FUNDACAO = @CD_FUNDACAO    AND FI.CD_PLANO = @CD_PLANO    AND FI.NUM_INSCRICAO = @NUM_INSCRICAO    AND '' + FI.ANO_REF + '-' + FI.MES_REF + '-01' BETWEEN @DT_INICIO AND @DT_FIM   ORDER BY FI.ANO_REF DESC,            FI.MES_REF DESC,           FI.CD_TIPO_CONTRIBUICAO", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO, DT_INICIO, DT_FIM }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT TC.DS_TIPO_CONTRIBUICAO, TC.CALC_MARGEM_CONSIG, FI.* FROM CC_FICHA_FINANCEIRA  FI  INNER  JOIN TB_TIPO_CONTRIBUICAO   TC  ON TC.CD_TIPO_CONTRIBUICAO=FI.CD_TIPO_CONTRIBUICAO WHERE FI.CD_FUNDACAO=:CD_FUNDACAO AND FI.CD_PLANO=:CD_PLANO AND FI.NUM_INSCRICAO=:NUM_INSCRICAO AND '' || FI.ANO_REF || '-' || FI.MES_REF || '-01' BETWEEN :DT_INICIO AND :DT_FIM ORDER BY FI.ANO_REF DESC, FI.MES_REF DESC, FI.CD_TIPO_CONTRIBUICAO", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO, DT_INICIO, DT_FIM }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<FichaFinanceiraEntidade> BuscarPorFundacaoPlanoInscricaoPeriodoTipoResgate(string CD_FUNDACAO, string CD_PLANO, string NUM_INSCRICAO, string ANOMES_INICIO, string ANOMES_FIM, string CD_TIPO_RESGATE)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT TC.DS_TIPO_CONTRIBUICAO,         TC.CALC_MARGEM_CONSIG,         FI.*   FROM CC_FICHA_FINANCEIRA FI  INNER JOIN TB_TIPO_CONTRIBUICAO TC ON TC.CD_TIPO_CONTRIBUICAO = FI.CD_TIPO_CONTRIBUICAO  WHERE FI.CD_FUNDACAO = @CD_FUNDACAO    AND FI.CD_PLANO = @CD_PLANO    AND FI.NUM_INSCRICAO = @NUM_INSCRICAO    AND '' + FI.ANO_REF + FI.MES_REF BETWEEN @ANOMES_INICIO AND @ANOMES_FIM     AND FI.CD_TIPO_CONTRIBUICAO IN (SELECT CD_TIPO_CONTRIBUICAO                                    FROM DR_PARAMETROS_RESGATE                                   WHERE CD_FUNDACAO = FI.CD_FUNDACAO                                      AND CD_PLANO = FI.CD_PLANO                                      AND CD_TIPO_CONTRIBUICAO = FI.CD_TIPO_CONTRIBUICAO                                      AND CD_TIPO_RESGATE = @CD_TIPO_RESGATE)  ORDER BY FI.ANO_REF DESC,            FI.MES_REF DESC,           FI.CD_TIPO_CONTRIBUICAO", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO, ANOMES_INICIO, ANOMES_FIM, CD_TIPO_RESGATE }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT TC.DS_TIPO_CONTRIBUICAO, TC.CALC_MARGEM_CONSIG, FI.* FROM CC_FICHA_FINANCEIRA  FI  INNER  JOIN TB_TIPO_CONTRIBUICAO   TC  ON TC.CD_TIPO_CONTRIBUICAO=FI.CD_TIPO_CONTRIBUICAO WHERE FI.CD_FUNDACAO=:CD_FUNDACAO AND FI.CD_PLANO=:CD_PLANO AND FI.NUM_INSCRICAO=:NUM_INSCRICAO AND '' || FI.ANO_REF || FI.MES_REF BETWEEN :ANOMES_INICIO AND :ANOMES_FIM AND FI.CD_TIPO_CONTRIBUICAO IN (SELECT CD_TIPO_CONTRIBUICAO FROM DR_PARAMETROS_RESGATE WHERE CD_FUNDACAO=FI.CD_FUNDACAO AND CD_PLANO=FI.CD_PLANO AND CD_TIPO_CONTRIBUICAO=FI.CD_TIPO_CONTRIBUICAO AND CD_TIPO_RESGATE=:CD_TIPO_RESGATE) ORDER BY FI.ANO_REF DESC, FI.MES_REF DESC, FI.CD_TIPO_CONTRIBUICAO", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO, ANOMES_INICIO, ANOMES_FIM, CD_TIPO_RESGATE }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<FichaFinanceiraEntidade> BuscarPorFundacaoPlanoInscricaoTipoResgate(string CD_FUNDACAO, string CD_PLANO, string NUM_INSCRICAO, string CD_TIPO_RESGATE)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT TC.DS_TIPO_CONTRIBUICAO,         TC.CALC_MARGEM_CONSIG,         FI.*   FROM CC_FICHA_FINANCEIRA FI  INNER JOIN TB_TIPO_CONTRIBUICAO TC ON TC.CD_TIPO_CONTRIBUICAO = FI.CD_TIPO_CONTRIBUICAO  WHERE FI.CD_FUNDACAO = @CD_FUNDACAO    AND FI.CD_PLANO = @CD_PLANO    AND FI.NUM_INSCRICAO = @NUM_INSCRICAO    AND FI.CD_TIPO_CONTRIBUICAO IN (SELECT CD_TIPO_CONTRIBUICAO                                    FROM DR_PARAMETROS_RESGATE                                   WHERE CD_FUNDACAO = FI.CD_FUNDACAO                                      AND CD_PLANO = FI.CD_PLANO                                      AND CD_TIPO_CONTRIBUICAO = FI.CD_TIPO_CONTRIBUICAO                                      AND CD_TIPO_RESGATE = @CD_TIPO_RESGATE)  ORDER BY FI.ANO_REF DESC,            FI.MES_REF DESC,           FI.CD_TIPO_CONTRIBUICAO", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO, CD_TIPO_RESGATE }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT TC.DS_TIPO_CONTRIBUICAO, TC.CALC_MARGEM_CONSIG, FI.* FROM CC_FICHA_FINANCEIRA  FI  INNER  JOIN TB_TIPO_CONTRIBUICAO   TC  ON TC.CD_TIPO_CONTRIBUICAO=FI.CD_TIPO_CONTRIBUICAO WHERE FI.CD_FUNDACAO=:CD_FUNDACAO AND FI.CD_PLANO=:CD_PLANO AND FI.NUM_INSCRICAO=:NUM_INSCRICAO AND FI.CD_TIPO_CONTRIBUICAO IN (SELECT CD_TIPO_CONTRIBUICAO FROM DR_PARAMETROS_RESGATE WHERE CD_FUNDACAO=FI.CD_FUNDACAO AND CD_PLANO=FI.CD_PLANO AND CD_TIPO_CONTRIBUICAO=FI.CD_TIPO_CONTRIBUICAO AND CD_TIPO_RESGATE=:CD_TIPO_RESGATE) ORDER BY FI.ANO_REF DESC, FI.MES_REF DESC, FI.CD_TIPO_CONTRIBUICAO", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO, CD_TIPO_RESGATE }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<FichaFinanceiraEntidade> BuscarPrimeiraPorFundacaoPlanoInscricao(string CD_FUNDACAO, string CD_PLANO, string NUM_INSCRICAO)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT TB_TIPO_CONTRIBUICAO.DS_TIPO_CONTRIBUICAO,         TB_TIPO_CONTRIBUICAO.CALC_MARGEM_CONSIG,         TB_TIPO_CONTRIBUICAO.COMPOE_SALDO_BENEFICIO,         CC_FICHA_FINANCEIRA.*   FROM CC_FICHA_FINANCEIRA  INNER JOIN TB_TIPO_CONTRIBUICAO ON TB_TIPO_CONTRIBUICAO.CD_TIPO_CONTRIBUICAO = CC_FICHA_FINANCEIRA.CD_TIPO_CONTRIBUICAO  WHERE CC_FICHA_FINANCEIRA.CD_FUNDACAO = @CD_FUNDACAO    AND CC_FICHA_FINANCEIRA.CD_PLANO = @CD_PLANO    AND CC_FICHA_FINANCEIRA.NUM_INSCRICAO = @NUM_INSCRICAO    AND CC_FICHA_FINANCEIRA.SRC > 0    AND CC_FICHA_FINANCEIRA.ANO_REF = (SELECT MIN(FF1.ANO_REF)  				                     FROM CC_FICHA_FINANCEIRA FF1  				                     WHERE FF1.CD_FUNDACAO = @CD_FUNDACAO  				                       AND FF1.CD_PLANO = @CD_PLANO  									   AND FF1.SRC > 0  				                       AND FF1.NUM_INSCRICAO = @NUM_INSCRICAO)    AND CC_FICHA_FINANCEIRA.MES_REF = (SELECT MIN(FF1.MES_REF)  				                     FROM CC_FICHA_FINANCEIRA FF1  				                     WHERE FF1.CD_FUNDACAO = @CD_FUNDACAO  				                       AND FF1.CD_PLANO = @CD_PLANO  				                       AND FF1.NUM_INSCRICAO = @NUM_INSCRICAO  									   AND FF1.SRC > 0                                         AND FF1.ANO_REF = CC_FICHA_FINANCEIRA.ANO_REF)  ORDER BY CC_FICHA_FINANCEIRA.CD_TIPO_CONTRIBUICAO", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT TB_TIPO_CONTRIBUICAO.DS_TIPO_CONTRIBUICAO, TB_TIPO_CONTRIBUICAO.CALC_MARGEM_CONSIG, TB_TIPO_CONTRIBUICAO.COMPOE_SALDO_BENEFICIO, CC_FICHA_FINANCEIRA.* FROM CC_FICHA_FINANCEIRA INNER  JOIN TB_TIPO_CONTRIBUICAO  ON TB_TIPO_CONTRIBUICAO.CD_TIPO_CONTRIBUICAO=CC_FICHA_FINANCEIRA.CD_TIPO_CONTRIBUICAO WHERE CC_FICHA_FINANCEIRA.CD_FUNDACAO=:CD_FUNDACAO AND CC_FICHA_FINANCEIRA.CD_PLANO=:CD_PLANO AND CC_FICHA_FINANCEIRA.NUM_INSCRICAO=:NUM_INSCRICAO AND CC_FICHA_FINANCEIRA.SRC>0 AND CC_FICHA_FINANCEIRA.ANO_REF=(SELECT MIN(FF1.ANO_REF) FROM CC_FICHA_FINANCEIRA  FF1  WHERE FF1.CD_FUNDACAO=:CD_FUNDACAO AND FF1.CD_PLANO=:CD_PLANO AND FF1.SRC>0 AND FF1.NUM_INSCRICAO=:NUM_INSCRICAO) AND CC_FICHA_FINANCEIRA.MES_REF=(SELECT MIN(FF1.MES_REF) FROM CC_FICHA_FINANCEIRA  FF1  WHERE FF1.CD_FUNDACAO=:CD_FUNDACAO AND FF1.CD_PLANO=:CD_PLANO AND FF1.NUM_INSCRICAO=:NUM_INSCRICAO AND FF1.SRC>0 AND FF1.ANO_REF=CC_FICHA_FINANCEIRA.ANO_REF) ORDER BY CC_FICHA_FINANCEIRA.CD_TIPO_CONTRIBUICAO", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<FichaFinanceiraEntidade> BuscarResumoAnosPorFundacaoPlanoInscricao(string CD_FUNDACAO, string CD_PLANO, string NUM_INSCRICAO)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT *   FROM CC_FICHA_FINANCEIRA FI  WHERE FI.CD_FUNDACAO = @CD_FUNDACAO    AND FI.CD_PLANO = @CD_PLANO    AND FI.NUM_INSCRICAO = @NUM_INSCRICAO  ORDER BY FI.ANO_REF DESC", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT * FROM CC_FICHA_FINANCEIRA  FI  WHERE FI.CD_FUNDACAO=:CD_FUNDACAO AND FI.CD_PLANO=:CD_PLANO AND FI.NUM_INSCRICAO=:NUM_INSCRICAO ORDER BY FI.ANO_REF DESC", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<FichaFinanceiraEntidade> BuscarResumoCusteio(string CD_FUNDACAO, string NUM_INSCRICAO, string CD_PLANO)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT FF.ANO_REF,         FF.MES_REF,          TC.COD_AGRUPADOR_WEB,  	   CASE   			WHEN TC.COD_AGRUPADOR_WEB = 'ADMPA' THEN 'Adm. Participante'  			WHEN TC.COD_AGRUPADOR_WEB = 'ADMPT' THEN 'Adm. Patrocinadora'  			WHEN TC.COD_AGRUPADOR_WEB = 'RIPA' THEN 'Risco Participante'  			WHEN TC.COD_AGRUPADOR_WEB = 'RIPT' THEN 'Risco Patrocinadora'  			else 'Falta Agrupador WEB'  		end as DS_AGRUPADOR_WEB,         SUM(FF.CONTRIB_EMPRESA + FF.CONTRIB_PARTICIPANTE) AS CONTRIB_PARTICIPANTE   FROM CC_FICHA_FINANCEIRA FF      INNER JOIN TB_TIPO_CONTRIBUICAO TC ON TC.CD_TIPO_CONTRIBUICAO = FF.CD_TIPO_CONTRIBUICAO  WHERE FF.CD_FUNDACAO = @CD_FUNDACAO    AND FF.NUM_INSCRICAO = @NUM_INSCRICAO    AND FF.CD_PLANO = @CD_PLANO    AND TC.COD_AGRUPADOR_WEB IN ('ADMPA', 'ADMPT', 'RIPA', 'RIPT')    AND (FF.ANO_REF + FF.MES_REF) = (SELECT MAX(FF2.ANO_REF + FF2.MES_REF)                                      FROM CC_FICHA_FECHAMENTO FF2                                       WHERE FF2.CD_FUNDACAO = FF.CD_FUNDACAO                                      AND FF2.NUM_INSCRICAO = FF.NUM_INSCRICAO                                      AND FF2.CD_PLANO = FF.CD_PLANO)  GROUP BY FF.ANO_REF,           FF.MES_REF,            TC.COD_AGRUPADOR_WEB", new { CD_FUNDACAO, NUM_INSCRICAO, CD_PLANO }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("", new { CD_FUNDACAO, NUM_INSCRICAO, CD_PLANO }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<FichaFinanceiraEntidade> BuscarResumoMesesPorFundacaoPlanoInscricaoAno(string CD_FUNDACAO, string CD_PLANO, string NUM_INSCRICAO, string ANO_REF)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT *   FROM CC_FICHA_FINANCEIRA FI  WHERE FI.CD_FUNDACAO = @CD_FUNDACAO    AND FI.CD_PLANO = @CD_PLANO    AND FI.NUM_INSCRICAO = @NUM_INSCRICAO    AND FI.ANO_REF = @ANO_REF  ORDER BY FI.MES_REF", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO, ANO_REF }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT * FROM CC_FICHA_FINANCEIRA  FI  WHERE FI.CD_FUNDACAO=:CD_FUNDACAO AND FI.CD_PLANO=:CD_PLANO AND FI.NUM_INSCRICAO=:NUM_INSCRICAO AND FI.ANO_REF=:ANO_REF ORDER BY FI.MES_REF", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO, ANO_REF }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<FichaFinanceiraEntidade> BuscarSaldos(string CD_FUNDACAO, string NUM_INSCRICAO, string CD_PLANO)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT SUM(CASE TC.IND_PORTABILIDADE WHEN 'S' THEN 0 ELSE CASE WHEN FF.CD_OPERACAO = 'D' THEN FF.CONTRIB_PARTICIPANTE * -1 ELSE FF.CONTRIB_PARTICIPANTE END END) AS CONTRIB_PARTICIPANTE,         SUM(CASE TC.IND_PORTABILIDADE WHEN 'S' THEN 0 ELSE CASE WHEN FF.CD_OPERACAO = 'D' THEN FF.CONTRIB_EMPRESA * -1 ELSE FF.CONTRIB_EMPRESA END END) AS CONTRIB_EMPRESA,         SUM(CASE TC.IND_PORTABILIDADE WHEN 'S' THEN 0 ELSE CASE WHEN FF.CD_OPERACAO = 'D' THEN ISNULL(FF.QTD_COTA_RP_PARTICIPANTE,0) * -1 ELSE ISNULL(FF.QTD_COTA_RP_PARTICIPANTE,0) END END) AS QTD_COTA_RP_PARTICIPANTE,         SUM(CASE TC.IND_PORTABILIDADE WHEN 'S' THEN 0 ELSE CASE WHEN FF.CD_OPERACAO = 'D' THEN ISNULL(FF.QTD_COTA_RP_EMPRESA,0) * -1 ELSE ISNULL(FF.QTD_COTA_RP_EMPRESA,0) END END) AS QTD_COTA_RP_EMPRESA,         SUM(CASE TC.IND_PORTABILIDADE WHEN 'S' THEN CASE WHEN FF.CD_OPERACAO = 'D' THEN FF.CONTRIB_PARTICIPANTE * -1 ELSE FF.CONTRIB_PARTICIPANTE END ELSE 0 END) AS CONTRIB_PORTABILIDADE,         SUM(CASE TC.IND_PORTABILIDADE WHEN 'S' THEN CASE WHEN FF.CD_OPERACAO = 'D' THEN FF.QTD_COTA_RP_PARTICIPANTE * -1 ELSE FF.QTD_COTA_RP_PARTICIPANTE END ELSE 0 END) AS QTD_COTA_RP_PORTABILIDADE  FROM CC_FICHA_FINANCEIRA FF      INNER JOIN TB_TIPO_CONTRIBUICAO TC ON TC.CD_TIPO_CONTRIBUICAO = FF.CD_TIPO_CONTRIBUICAO  	INNER JOIN CS_FUNCIONARIO FN ON FN.CD_FUNDACAO = FF.CD_FUNDACAO AND FN.NUM_INSCRICAO = FF.NUM_INSCRICAO      INNER JOIN TB_EMPRESA_PLANOS EP ON EP.CD_FUNDACAO = FF.CD_FUNDACAO         AND EP.CD_EMPRESA = FN.CD_EMPRESA         AND EP.CD_PLANO   = FF.CD_PLANO      LEFT OUTER JOIN TB_IND_VALORES IV ON IV.COD_IND = EP.IND_RESERVA_POUP  WHERE FF.CD_FUNDACAO   = @CD_FUNDACAO    AND FF.NUM_INSCRICAO = @NUM_INSCRICAO    AND FF.CD_PLANO      = @CD_PLANO    AND TC.COMPOE_SALDO_BENEFICIO = 'S'    AND IV.DT_IND = (SELECT MAX(IV2.DT_IND)                       FROM TB_IND_VALORES IV2                      WHERE IV2.COD_IND = IV.COD_IND                        AND MONTH(IV2.DT_IND) = MONTH(DATEADD(MONTH, 1, DATEFROMPARTS(CAST(FF.ANO_REF AS INT) , CAST(FF.MES_REF AS INT), 1 )))                        AND YEAR(IV2.DT_IND)  = YEAR(DATEADD(MONTH, 1, DATEFROMPARTS(CAST(FF.ANO_REF AS INT) , CAST(FF.MES_REF AS INT), 1 ))));", new { CD_FUNDACAO, NUM_INSCRICAO, CD_PLANO }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("", new { CD_FUNDACAO, NUM_INSCRICAO, CD_PLANO }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<FichaFinanceiraEntidade> BuscarSaldosComRecursoPortadoPorInscricao(string CD_FUNDACAO, string NUM_INSCRICAO, string CD_PLANO)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT SUM(CASE WHEN FF.CD_OPERACAO = 'D' THEN FF.CONTRIB_PARTICIPANTE * -1 ELSE FF.CONTRIB_PARTICIPANTE END) AS CONTRIB_PARTICIPANTE,         SUM(CASE WHEN FF.CD_OPERACAO = 'D' THEN FF.CONTRIB_EMPRESA * -1 ELSE FF.CONTRIB_EMPRESA END) AS CONTRIB_EMPRESA,         SUM(CASE WHEN FF.CD_OPERACAO = 'D' THEN ISNULL(FF.QTD_COTA_RP_PARTICIPANTE,0) * -1 ELSE ISNULL(FF.QTD_COTA_RP_PARTICIPANTE,0) END) AS QTD_COTA_RP_PARTICIPANTE,         SUM(CASE WHEN FF.CD_OPERACAO = 'D' THEN ISNULL(FF.QTD_COTA_RP_EMPRESA,0) * -1 ELSE ISNULL(FF.QTD_COTA_RP_EMPRESA,0) END) AS QTD_COTA_RP_EMPRESA  FROM CC_FICHA_FINANCEIRA FF      INNER JOIN TB_TIPO_CONTRIBUICAO TC ON TC.CD_TIPO_CONTRIBUICAO = FF.CD_TIPO_CONTRIBUICAO  WHERE FF.CD_FUNDACAO   = @CD_FUNDACAO    AND FF.NUM_INSCRICAO = @NUM_INSCRICAO    AND FF.CD_PLANO      = @CD_PLANO    AND TC.RECURSO_PORTADO = 'S'", new { CD_FUNDACAO, NUM_INSCRICAO, CD_PLANO }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("", new { CD_FUNDACAO, NUM_INSCRICAO, CD_PLANO }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<FichaFinanceiraEntidade> BuscarSaldosPorReferencia(string CD_FUNDACAO, string NUM_INSCRICAO, string CD_PLANO, string ANO_REF, string MES_REF)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT SUM(CASE TC.IND_PORTABILIDADE WHEN 'S' THEN 0 ELSE CASE WHEN FF.CD_OPERACAO = 'D' THEN FF.CONTRIB_PARTICIPANTE * -1 ELSE FF.CONTRIB_PARTICIPANTE END END) AS CONTRIB_PARTICIPANTE,         SUM(CASE TC.IND_PORTABILIDADE WHEN 'S' THEN 0 ELSE CASE WHEN FF.CD_OPERACAO = 'D' THEN FF.CONTRIB_EMPRESA * -1 ELSE FF.CONTRIB_EMPRESA END END) AS CONTRIB_EMPRESA,         SUM(CASE TC.IND_PORTABILIDADE WHEN 'S' THEN 0 ELSE CASE WHEN FF.CD_OPERACAO = 'D' THEN ISNULL(FF.QTD_COTA_RP_PARTICIPANTE,0) * -1 ELSE ISNULL(FF.QTD_COTA_RP_PARTICIPANTE,0) END END) AS QTD_COTA_RP_PARTICIPANTE,         SUM(CASE TC.IND_PORTABILIDADE WHEN 'S' THEN 0 ELSE CASE WHEN FF.CD_OPERACAO = 'D' THEN ISNULL(FF.QTD_COTA_RP_EMPRESA,0) * -1 ELSE ISNULL(FF.QTD_COTA_RP_EMPRESA,0) END END) AS QTD_COTA_RP_EMPRESA,         SUM(CASE TC.IND_PORTABILIDADE WHEN 'S' THEN CASE WHEN FF.CD_OPERACAO = 'D' THEN FF.CONTRIB_PARTICIPANTE * -1 ELSE FF.CONTRIB_PARTICIPANTE END ELSE 0 END) AS CONTRIB_PORTABILIDADE,         SUM(CASE TC.IND_PORTABILIDADE WHEN 'S' THEN CASE WHEN FF.CD_OPERACAO = 'D' THEN FF.QTD_COTA_RP_PARTICIPANTE * -1 ELSE FF.QTD_COTA_RP_PARTICIPANTE END ELSE 0 END) AS QTD_COTA_RP_PORTABILIDADE  FROM CC_FICHA_FINANCEIRA FF      INNER JOIN TB_TIPO_CONTRIBUICAO TC ON TC.CD_TIPO_CONTRIBUICAO = FF.CD_TIPO_CONTRIBUICAO  	INNER JOIN CS_FUNCIONARIO FN ON FN.CD_FUNDACAO = FF.CD_FUNDACAO AND FN.NUM_INSCRICAO = FF.NUM_INSCRICAO      INNER JOIN TB_EMPRESA_PLANOS EP ON EP.CD_FUNDACAO = FF.CD_FUNDACAO         AND EP.CD_EMPRESA = FN.CD_EMPRESA         AND EP.CD_PLANO   = FF.CD_PLANO      LEFT OUTER JOIN TB_IND_VALORES IV ON IV.COD_IND = EP.IND_RESERVA_POUP  WHERE FF.CD_FUNDACAO   = @CD_FUNDACAO    AND FF.NUM_INSCRICAO = @NUM_INSCRICAO    AND FF.CD_PLANO      = @CD_PLANO    AND FF.ANO_REF * 13 + FF.MES_REF <= @ANO_REF * 13 + @MES_REF    AND TC.COMPOE_SALDO_BENEFICIO = 'S'    AND IV.DT_IND = (SELECT MAX(IV2.DT_IND)                       FROM TB_IND_VALORES IV2                      WHERE IV2.COD_IND = IV.COD_IND                        AND MONTH(IV2.DT_IND) = MONTH(DATEADD(MONTH, 1, DATEFROMPARTS(CAST(FF.ANO_REF AS INT) , CAST(FF.MES_REF AS INT), 1 )))                        AND YEAR(IV2.DT_IND)  = YEAR(DATEADD(MONTH, 1, DATEFROMPARTS(CAST(FF.ANO_REF AS INT) , CAST(FF.MES_REF AS INT), 1 ))));", new { CD_FUNDACAO, NUM_INSCRICAO, CD_PLANO, ANO_REF, MES_REF }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT SUM(CASE TC.IND_PORTABILIDADE WHEN 'S' THEN 0 ELSE CASE  WHEN FF.CD_OPERACAO='D' THEN FF.CONTRIB_PARTICIPANTE* - 1 ELSE FF.CONTRIB_PARTICIPANTE END  END ) AS CONTRIB_PARTICIPANTE, SUM(CASE TC.IND_PORTABILIDADE WHEN 'S' THEN 0 ELSE CASE  WHEN FF.CD_OPERACAO='D' THEN FF.CONTRIB_EMPRESA* - 1 ELSE FF.CONTRIB_EMPRESA END  END ) AS CONTRIB_EMPRESA, SUM(CASE TC.IND_PORTABILIDADE WHEN 'S' THEN 0 ELSE CASE  WHEN FF.CD_OPERACAO='D' THEN NVL(FF.QTD_COTA_RP_PARTICIPANTE,0)* - 1 ELSE NVL(FF.QTD_COTA_RP_PARTICIPANTE,0) END  END ) AS QTD_COTA_RP_PARTICIPANTE, SUM(CASE TC.IND_PORTABILIDADE WHEN 'S' THEN 0 ELSE CASE  WHEN FF.CD_OPERACAO='D' THEN NVL(FF.QTD_COTA_RP_EMPRESA,0)* - 1 ELSE NVL(FF.QTD_COTA_RP_EMPRESA,0) END  END ) AS QTD_COTA_RP_EMPRESA, SUM(CASE TC.IND_PORTABILIDADE WHEN 'S' THEN CASE  WHEN FF.CD_OPERACAO='D' THEN FF.CONTRIB_PARTICIPANTE* - 1 ELSE FF.CONTRIB_PARTICIPANTE END  ELSE 0 END ) AS CONTRIB_PORTABILIDADE, SUM(CASE TC.IND_PORTABILIDADE WHEN 'S' THEN CASE  WHEN FF.CD_OPERACAO='D' THEN FF.QTD_COTA_RP_PARTICIPANTE* - 1 ELSE FF.QTD_COTA_RP_PARTICIPANTE END  ELSE 0 END ) AS QTD_COTA_RP_PORTABILIDADE FROM CC_FICHA_FINANCEIRA  FF  INNER  JOIN TB_TIPO_CONTRIBUICAO   TC  ON TC.CD_TIPO_CONTRIBUICAO=FF.CD_TIPO_CONTRIBUICAO INNER  JOIN CS_FUNCIONARIO   FN  ON FN.CD_FUNDACAO=FF.CD_FUNDACAO AND FN.NUM_INSCRICAO=FF.NUM_INSCRICAO INNER  JOIN TB_EMPRESA_PLANOS   EP  ON EP.CD_FUNDACAO=FF.CD_FUNDACAO AND EP.CD_EMPRESA=FN.CD_EMPRESA AND EP.CD_PLANO=FF.CD_PLANO LEFT OUTER JOIN TB_IND_VALORES   IV  ON IV.COD_IND=EP.IND_RESERVA_POUP WHERE FF.CD_FUNDACAO=:CD_FUNDACAO AND FF.NUM_INSCRICAO=:NUM_INSCRICAO AND FF.CD_PLANO=:CD_PLANO AND FF.ANO_REF*", new { CD_FUNDACAO, NUM_INSCRICAO, CD_PLANO, ANO_REF, MES_REF }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<FichaFinanceiraEntidade> BuscarSaldosSemRecursoPortadoPorInscricao(string CD_FUNDACAO, string NUM_INSCRICAO, string CD_PLANO)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT SUM(CASE WHEN FF.CD_OPERACAO = 'D' THEN FF.CONTRIB_PARTICIPANTE * -1 ELSE FF.CONTRIB_PARTICIPANTE END) AS CONTRIB_PARTICIPANTE,         SUM(CASE WHEN FF.CD_OPERACAO = 'D' THEN FF.CONTRIB_EMPRESA * -1 ELSE FF.CONTRIB_EMPRESA END) AS CONTRIB_EMPRESA,         SUM(CASE WHEN FF.CD_OPERACAO = 'D' THEN ISNULL(FF.QTD_COTA_RP_PARTICIPANTE,0) * -1 ELSE ISNULL(FF.QTD_COTA_RP_PARTICIPANTE,0) END) AS QTD_COTA_RP_PARTICIPANTE,         SUM(CASE WHEN FF.CD_OPERACAO = 'D' THEN ISNULL(FF.QTD_COTA_RP_EMPRESA,0) * -1 ELSE ISNULL(FF.QTD_COTA_RP_EMPRESA,0) END) AS QTD_COTA_RP_EMPRESA  FROM CC_FICHA_FINANCEIRA FF      INNER JOIN TB_TIPO_CONTRIBUICAO TC ON TC.CD_TIPO_CONTRIBUICAO = FF.CD_TIPO_CONTRIBUICAO  WHERE FF.CD_FUNDACAO   = @CD_FUNDACAO    AND FF.NUM_INSCRICAO = @NUM_INSCRICAO    AND FF.CD_PLANO      = @CD_PLANO    AND TC.COMPOE_SALDO_BENEFICIO = 'S'    AND TC.RECURSO_PORTADO = 'N'", new { CD_FUNDACAO, NUM_INSCRICAO, CD_PLANO }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("", new { CD_FUNDACAO, NUM_INSCRICAO, CD_PLANO }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<FichaFinanceiraEntidade> BuscarTiposPorFundacaoPlanoInscricaoAnoMes(string CD_FUNDACAO, string CD_PLANO, string NUM_INSCRICAO, string ANO_REF, string MES_REF)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT *   FROM CC_FICHA_FINANCEIRA FI  INNER JOIN TB_TIPO_CONTRIBUICAO TC ON  TC.CD_TIPO_CONTRIBUICAO = FI.CD_TIPO_CONTRIBUICAO  WHERE FI.CD_FUNDACAO = @CD_FUNDACAO    AND FI.CD_PLANO = @CD_PLANO    AND FI.NUM_INSCRICAO = @NUM_INSCRICAO    AND FI.ANO_REF = @ANO_REF    AND FI.MES_REF = @MES_REF  ORDER BY TC.CD_TIPO_CONTRIBUICAO", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO, ANO_REF, MES_REF }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT * FROM CC_FICHA_FINANCEIRA  FI  INNER  JOIN TB_TIPO_CONTRIBUICAO   TC  ON TC.CD_TIPO_CONTRIBUICAO=FI.CD_TIPO_CONTRIBUICAO WHERE FI.CD_FUNDACAO=:CD_FUNDACAO AND FI.CD_PLANO=:CD_PLANO AND FI.NUM_INSCRICAO=:NUM_INSCRICAO AND FI.ANO_REF=:ANO_REF AND FI.MES_REF=:MES_REF ORDER BY TC.CD_TIPO_CONTRIBUICAO", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO, ANO_REF, MES_REF }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<FichaFinanceiraEntidade> BuscarUltimaPorFundacaoPlanoInscricao(string CD_FUNDACAO, string CD_PLANO, string NUM_INSCRICAO)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT TB_TIPO_CONTRIBUICAO.DS_TIPO_CONTRIBUICAO,         TB_TIPO_CONTRIBUICAO.CALC_MARGEM_CONSIG,         TB_TIPO_CONTRIBUICAO.COMPOE_SALDO_BENEFICIO,         CC_FICHA_FINANCEIRA.*   FROM CC_FICHA_FINANCEIRA  INNER JOIN TB_TIPO_CONTRIBUICAO ON TB_TIPO_CONTRIBUICAO.CD_TIPO_CONTRIBUICAO = CC_FICHA_FINANCEIRA.CD_TIPO_CONTRIBUICAO  WHERE CC_FICHA_FINANCEIRA.CD_FUNDACAO = @CD_FUNDACAO    AND CC_FICHA_FINANCEIRA.CD_PLANO = @CD_PLANO    AND CC_FICHA_FINANCEIRA.NUM_INSCRICAO = @NUM_INSCRICAO    AND CC_FICHA_FINANCEIRA.SRC > 0    AND CC_FICHA_FINANCEIRA.ANO_REF = (SELECT MAX(FF1.ANO_REF)  				                     FROM CC_FICHA_FINANCEIRA FF1  				                     WHERE FF1.CD_FUNDACAO = @CD_FUNDACAO  				                       AND FF1.CD_PLANO = @CD_PLANO  									   AND FF1.SRC > 0  				                       AND FF1.NUM_INSCRICAO = @NUM_INSCRICAO)    AND CC_FICHA_FINANCEIRA.MES_REF = (SELECT MAX(FF1.MES_REF)  				                     FROM CC_FICHA_FINANCEIRA FF1  				                     WHERE FF1.CD_FUNDACAO = @CD_FUNDACAO  				                       AND FF1.CD_PLANO = @CD_PLANO  				                       AND FF1.NUM_INSCRICAO = @NUM_INSCRICAO  									   AND FF1.SRC > 0                                         AND FF1.ANO_REF = CC_FICHA_FINANCEIRA.ANO_REF)  ORDER BY CC_FICHA_FINANCEIRA.CD_TIPO_CONTRIBUICAO", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT TB_TIPO_CONTRIBUICAO.DS_TIPO_CONTRIBUICAO, TB_TIPO_CONTRIBUICAO.CALC_MARGEM_CONSIG, TB_TIPO_CONTRIBUICAO.COMPOE_SALDO_BENEFICIO, CC_FICHA_FINANCEIRA.* FROM CC_FICHA_FINANCEIRA INNER  JOIN TB_TIPO_CONTRIBUICAO  ON TB_TIPO_CONTRIBUICAO.CD_TIPO_CONTRIBUICAO=CC_FICHA_FINANCEIRA.CD_TIPO_CONTRIBUICAO WHERE CC_FICHA_FINANCEIRA.CD_FUNDACAO=:CD_FUNDACAO AND CC_FICHA_FINANCEIRA.CD_PLANO=:CD_PLANO AND CC_FICHA_FINANCEIRA.NUM_INSCRICAO=:NUM_INSCRICAO AND CC_FICHA_FINANCEIRA.SRC>0 AND CC_FICHA_FINANCEIRA.ANO_REF=(SELECT MAX(FF1.ANO_REF) FROM CC_FICHA_FINANCEIRA  FF1  WHERE FF1.CD_FUNDACAO=:CD_FUNDACAO AND FF1.CD_PLANO=:CD_PLANO AND FF1.SRC>0 AND FF1.NUM_INSCRICAO=:NUM_INSCRICAO) AND CC_FICHA_FINANCEIRA.MES_REF=(SELECT MAX(FF1.MES_REF) FROM CC_FICHA_FINANCEIRA  FF1  WHERE FF1.CD_FUNDACAO=:CD_FUNDACAO AND FF1.CD_PLANO=:CD_PLANO AND FF1.NUM_INSCRICAO=:NUM_INSCRICAO AND FF1.SRC>0 AND FF1.ANO_REF=CC_FICHA_FINANCEIRA.ANO_REF) ORDER BY CC_FICHA_FINANCEIRA.CD_TIPO_CONTRIBUICAO", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual List<FichaFinanceiraEntidade> BuscarUltimoFechamentoPorFundacaoPlanoInscricao(string CD_FUNDACAO, string CD_PLANO, string NUM_INSCRICAO)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT TB_TIPO_CONTRIBUICAO.DS_TIPO_CONTRIBUICAO,         TB_TIPO_CONTRIBUICAO.CALC_MARGEM_CONSIG,         TB_TIPO_CONTRIBUICAO.COMPOE_SALDO_BENEFICIO,         CC_FICHA_FINANCEIRA.*   FROM CC_FICHA_FINANCEIRA  INNER JOIN TB_TIPO_CONTRIBUICAO ON TB_TIPO_CONTRIBUICAO.CD_TIPO_CONTRIBUICAO = CC_FICHA_FINANCEIRA.CD_TIPO_CONTRIBUICAO  WHERE CC_FICHA_FINANCEIRA.CD_FUNDACAO = @CD_FUNDACAO    AND CC_FICHA_FINANCEIRA.CD_PLANO = @CD_PLANO    AND CC_FICHA_FINANCEIRA.NUM_INSCRICAO = @NUM_INSCRICAO    AND CC_FICHA_FINANCEIRA.SRC > 0  AND CC_FICHA_FINANCEIRA.ANO_REF = (SELECT MAX(FF1.ANO_REF)  				                    FROM CC_FICHA_FECHAMENTO FF1  				                    WHERE FF1.CD_FUNDACAO = CC_FICHA_FINANCEIRA.CD_FUNDACAO  				                    AND FF1.CD_PLANO = CC_FICHA_FINANCEIRA.CD_PLANO  				                    AND FF1.NUM_INSCRICAO = CC_FICHA_FINANCEIRA.NUM_INSCRICAO)  AND CC_FICHA_FINANCEIRA.MES_REF = (SELECT MAX(FF1.MES_REF)  				                    FROM CC_FICHA_FECHAMENTO FF1  				                    WHERE FF1.CD_FUNDACAO = CC_FICHA_FINANCEIRA.CD_FUNDACAO  				                    AND FF1.CD_PLANO = CC_FICHA_FINANCEIRA.CD_PLANO  				                    AND FF1.NUM_INSCRICAO = CC_FICHA_FINANCEIRA.NUM_INSCRICAO                                      AND FF1.ANO_REF = CC_FICHA_FINANCEIRA.ANO_REF)  ORDER BY CC_FICHA_FINANCEIRA.CD_TIPO_CONTRIBUICAO", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO }).ToList();
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.Query<FichaFinanceiraEntidade>("SELECT TB_TIPO_CONTRIBUICAO.DS_TIPO_CONTRIBUICAO, TB_TIPO_CONTRIBUICAO.CALC_MARGEM_CONSIG, TB_TIPO_CONTRIBUICAO.COMPOE_SALDO_BENEFICIO, CC_FICHA_FINANCEIRA.* FROM CC_FICHA_FINANCEIRA INNER  JOIN TB_TIPO_CONTRIBUICAO  ON TB_TIPO_CONTRIBUICAO.CD_TIPO_CONTRIBUICAO=CC_FICHA_FINANCEIRA.CD_TIPO_CONTRIBUICAO WHERE CC_FICHA_FINANCEIRA.CD_FUNDACAO=:CD_FUNDACAO AND CC_FICHA_FINANCEIRA.CD_PLANO=:CD_PLANO AND CC_FICHA_FINANCEIRA.NUM_INSCRICAO=:NUM_INSCRICAO AND CC_FICHA_FINANCEIRA.SRC>0 AND CC_FICHA_FINANCEIRA.ANO_REF=(SELECT MAX(FF1.ANO_REF) FROM CC_FICHA_FECHAMENTO  FF1  WHERE FF1.CD_FUNDACAO=CC_FICHA_FINANCEIRA.CD_FUNDACAO AND FF1.CD_PLANO=CC_FICHA_FINANCEIRA.CD_PLANO AND FF1.NUM_INSCRICAO=CC_FICHA_FINANCEIRA.NUM_INSCRICAO) AND CC_FICHA_FINANCEIRA.MES_REF=(SELECT MAX(FF1.MES_REF) FROM CC_FICHA_FECHAMENTO  FF1  WHERE FF1.CD_FUNDACAO=CC_FICHA_FINANCEIRA.CD_FUNDACAO AND FF1.CD_PLANO=CC_FICHA_FINANCEIRA.CD_PLANO AND FF1.NUM_INSCRICAO=CC_FICHA_FINANCEIRA.NUM_INSCRICAO AND FF1.ANO_REF=CC_FICHA_FINANCEIRA.ANO_REF) ORDER BY CC_FICHA_FINANCEIRA.CD_TIPO_CONTRIBUICAO", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO }).ToList();
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual decimal FSF_BuscarCotasSaldado(string CD_FUNDACAO, string CD_PLANO, string NUM_INSCRICAO)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.QuerySingleOrDefault<decimal>("SELECT SUM(CASE                 WHEN FF.CD_OPERACAO = 'C' THEN FF.QTD_COTA_RP_PARTICIPANTE * PR.VLR_PERC_PARTICIPANTE / 100                WHEN FF.CD_OPERACAO = 'D' THEN FF.QTD_COTA_RP_PARTICIPANTE * PR.VLR_PERC_PARTICIPANTE / -100             END) AS QTD_COTA_RP    FROM CC_FICHA_FINANCEIRA FF          INNER JOIN DR_PARAMETROS_RESGATE PR ON              PR.CD_FUNDACAO = FF.CD_FUNDACAO AND              PR.CD_PLANO = FF.CD_PLANO AND              PR.CD_TIPO_CONTRIBUICAO = FF.CD_TIPO_CONTRIBUICAO AND               PR.CD_TIPO_RESGATE = '01'   WHERE FF.CD_FUNDACAO   = @CD_FUNDACAO     AND FF.NUM_INSCRICAO = @NUM_INSCRICAO     AND FF.CD_PLANO      = @CD_PLANO", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO });
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.QuerySingleOrDefault<decimal>("", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual decimal FSF_BuscarCotasSaldadoFDAntes98(string CD_FUNDACAO, string CD_PLANO, string NUM_INSCRICAO, decimal PERCENTUAL)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.QuerySingleOrDefault<decimal>("SELECT SUM(CASE                 WHEN FF.CD_OPERACAO = 'C' THEN FF.QTD_COTA_FD_PARTICIPANTE * @PERCENTUAL / 100                WHEN FF.CD_OPERACAO = 'D' THEN FF.QTD_COTA_FD_PARTICIPANTE * @PERCENTUAL / -100             END) AS QTD_COTA_FD    FROM CC_FICHA_FINANCEIRA FF          INNER JOIN DR_PARAMETROS_RESGATE PR ON              PR.CD_FUNDACAO = FF.CD_FUNDACAO AND              PR.CD_PLANO = FF.CD_PLANO AND              PR.CD_TIPO_CONTRIBUICAO = FF.CD_TIPO_CONTRIBUICAO AND               PR.CD_TIPO_RESGATE = '01'   WHERE FF.CD_FUNDACAO   = @CD_FUNDACAO     AND FF.NUM_INSCRICAO = @NUM_INSCRICAO     AND FF.CD_PLANO      = @CD_PLANO", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO, PERCENTUAL });
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.QuerySingleOrDefault<decimal>("", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO, PERCENTUAL });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

		public virtual decimal FSF_BuscarCotasSaldadoFDApos98(string CD_FUNDACAO, string CD_PLANO, string NUM_INSCRICAO)
		{
			try
			{
				if (AppSettings.IS_SQL_SERVER_PROVIDER)
					return Conexao.QuerySingleOrDefault<decimal>("SELECT SUM(CASE                 WHEN FF.CD_OPERACAO = 'C' THEN FF.QTD_COTA_FD_PARTICIPANTE * PR.VLR_PERC_PARTICIPANTE / 100                WHEN FF.CD_OPERACAO = 'D' THEN FF.QTD_COTA_FD_PARTICIPANTE * PR.VLR_PERC_PARTICIPANTE / -100             END) AS QTD_COTA_FD    FROM CC_FICHA_FINANCEIRA FF          INNER JOIN DR_PARAMETROS_RESGATE PR ON              PR.CD_FUNDACAO = FF.CD_FUNDACAO AND              PR.CD_PLANO = FF.CD_PLANO AND              PR.CD_TIPO_CONTRIBUICAO = FF.CD_TIPO_CONTRIBUICAO AND               PR.CD_TIPO_RESGATE = '01'   WHERE FF.CD_FUNDACAO   = @CD_FUNDACAO     AND FF.NUM_INSCRICAO = @NUM_INSCRICAO     AND FF.CD_PLANO      = @CD_PLANO", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO });
				else if (AppSettings.IS_ORACLE_PROVIDER)
					return Conexao.QuerySingleOrDefault<decimal>("", new { CD_FUNDACAO, CD_PLANO, NUM_INSCRICAO });
				else
					throw new Exception("Provider não suportado!");
			}
			finally
			{
				if(Transaction == null)
					Conexao.Close();
			}
		}

	}
}
